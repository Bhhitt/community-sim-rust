<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="21937"><g><title>libSDL2-2.0.0.dylib`METAL_CreateRenderer (3 samples, 0.01%)</title><rect x="0.0046%" y="421" width="0.0137%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="3"/><text x="0.2546%" y="431.50"></text></g><g><title>community_sim`sdl2::render::CanvasBuilder::build (4 samples, 0.02%)</title><rect x="0.0046%" y="453" width="0.0182%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.2546%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRenderer_REAL (4 samples, 0.02%)</title><rect x="0.0046%" y="437" width="0.0182%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.2546%" y="447.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (8 samples, 0.04%)</title><rect x="0.0319%" y="325" width="0.0365%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="8"/><text x="0.2819%" y="335.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (8 samples, 0.04%)</title><rect x="0.0319%" y="309" width="0.0365%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="8"/><text x="0.2819%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.03%)</title><rect x="0.0365%" y="293" width="0.0319%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="7"/><text x="0.2865%" y="303.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.03%)</title><rect x="0.0365%" y="277" width="0.0319%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="7"/><text x="0.2865%" y="287.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (7 samples, 0.03%)</title><rect x="0.0365%" y="261" width="0.0319%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="7"/><text x="0.2865%" y="271.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (7 samples, 0.03%)</title><rect x="0.0365%" y="245" width="0.0319%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="7"/><text x="0.2865%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (7 samples, 0.03%)</title><rect x="0.0365%" y="229" width="0.0319%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="7"/><text x="0.2865%" y="239.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (7 samples, 0.03%)</title><rect x="0.0365%" y="213" width="0.0319%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="7"/><text x="0.2865%" y="223.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.03%)</title><rect x="0.0365%" y="197" width="0.0319%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="7"/><text x="0.2865%" y="207.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (4 samples, 0.02%)</title><rect x="0.0501%" y="181" width="0.0182%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="4"/><text x="0.3001%" y="191.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (4 samples, 0.02%)</title><rect x="0.0501%" y="165" width="0.0182%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="4"/><text x="0.3001%" y="175.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (4 samples, 0.02%)</title><rect x="0.0501%" y="149" width="0.0182%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="4"/><text x="0.3001%" y="159.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (4 samples, 0.02%)</title><rect x="0.0501%" y="133" width="0.0182%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="4"/><text x="0.3001%" y="143.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (4 samples, 0.02%)</title><rect x="0.0501%" y="117" width="0.0182%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="4"/><text x="0.3001%" y="127.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.06%)</title><rect x="0.0319%" y="341" width="0.0593%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="13"/><text x="0.2819%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (5 samples, 0.02%)</title><rect x="0.0684%" y="325" width="0.0228%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="5"/><text x="0.3184%" y="335.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (5 samples, 0.02%)</title><rect x="0.0684%" y="309" width="0.0228%" height="15" fill="rgb(226,26,5)" fg:x="15" fg:w="5"/><text x="0.3184%" y="319.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (4 samples, 0.02%)</title><rect x="0.0729%" y="293" width="0.0182%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="4"/><text x="0.3229%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (3 samples, 0.01%)</title><rect x="0.0957%" y="213" width="0.0137%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="3"/><text x="0.3457%" y="223.50"></text></g><g><title>Metal`getMetalPluginClassForService (3 samples, 0.01%)</title><rect x="0.0957%" y="197" width="0.0137%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="3"/><text x="0.3457%" y="207.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (3 samples, 0.01%)</title><rect x="0.0957%" y="181" width="0.0137%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="3"/><text x="0.3457%" y="191.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (3 samples, 0.01%)</title><rect x="0.0957%" y="165" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="3"/><text x="0.3457%" y="175.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (4 samples, 0.02%)</title><rect x="0.0957%" y="277" width="0.0182%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="4"/><text x="0.3457%" y="287.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (4 samples, 0.02%)</title><rect x="0.0957%" y="261" width="0.0182%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="4"/><text x="0.3457%" y="271.50"></text></g><g><title>Metal`MTLCopyAllDevices (4 samples, 0.02%)</title><rect x="0.0957%" y="245" width="0.0182%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="4"/><text x="0.3457%" y="255.50"></text></g><g><title>Metal`MTLRegisterDevices (4 samples, 0.02%)</title><rect x="0.0957%" y="229" width="0.0182%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="4"/><text x="0.3457%" y="239.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (5 samples, 0.02%)</title><rect x="0.0957%" y="341" width="0.0228%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="5"/><text x="0.3457%" y="351.50"></text></g><g><title>AppKit`_NXCreateWindow (5 samples, 0.02%)</title><rect x="0.0957%" y="325" width="0.0228%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="5"/><text x="0.3457%" y="335.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (5 samples, 0.02%)</title><rect x="0.0957%" y="309" width="0.0228%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="5"/><text x="0.3457%" y="319.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (5 samples, 0.02%)</title><rect x="0.0957%" y="293" width="0.0228%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="5"/><text x="0.3457%" y="303.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (21 samples, 0.10%)</title><rect x="0.0319%" y="357" width="0.0957%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="21"/><text x="0.2819%" y="367.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:screen:] (23 samples, 0.10%)</title><rect x="0.0274%" y="405" width="0.1048%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="23"/><text x="0.2774%" y="415.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (23 samples, 0.10%)</title><rect x="0.0274%" y="389" width="0.1048%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="23"/><text x="0.2774%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (23 samples, 0.10%)</title><rect x="0.0274%" y="373" width="0.1048%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="23"/><text x="0.2774%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateWindow (26 samples, 0.12%)</title><rect x="0.0228%" y="421" width="0.1185%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="26"/><text x="0.2728%" y="431.50"></text></g><g><title>community_sim`sdl2::video::WindowBuilder::build (29 samples, 0.13%)</title><rect x="0.0228%" y="453" width="0.1322%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="29"/><text x="0.2728%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateWindow_REAL (29 samples, 0.13%)</title><rect x="0.0228%" y="437" width="0.1322%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="29"/><text x="0.2728%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_ShowWindow_REAL (3 samples, 0.01%)</title><rect x="0.1413%" y="421" width="0.0137%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="3"/><text x="0.3913%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_ShowWindow (3 samples, 0.01%)</title><rect x="0.1413%" y="405" width="0.0137%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="3"/><text x="0.3913%" y="415.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (3 samples, 0.01%)</title><rect x="0.1413%" y="389" width="0.0137%" height="15" fill="rgb(235,93,37)" fg:x="31" fg:w="3"/><text x="0.3913%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _doOrderWindow:] (3 samples, 0.01%)</title><rect x="0.1413%" y="373" width="0.0137%" height="15" fill="rgb(213,116,39)" fg:x="31" fg:w="3"/><text x="0.3913%" y="383.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindow:] (3 samples, 0.01%)</title><rect x="0.1413%" y="357" width="0.0137%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="3"/><text x="0.3913%" y="367.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindowAboveOrBelow:] (3 samples, 0.01%)</title><rect x="0.1413%" y="341" width="0.0137%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="3"/><text x="0.3913%" y="351.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance activeOrUserMenuBar] (3 samples, 0.01%)</title><rect x="0.1778%" y="325" width="0.0137%" height="15" fill="rgb(218,138,4)" fg:x="39" fg:w="3"/><text x="0.4278%" y="335.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance activeMenuBar] (3 samples, 0.01%)</title><rect x="0.1778%" y="309" width="0.0137%" height="15" fill="rgb(250,191,14)" fg:x="39" fg:w="3"/><text x="0.4278%" y="319.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _userSpaceMenuBar] (3 samples, 0.01%)</title><rect x="0.1778%" y="293" width="0.0137%" height="15" fill="rgb(239,60,40)" fg:x="39" fg:w="3"/><text x="0.4278%" y="303.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter addObserver:selector:name:object:] (3 samples, 0.01%)</title><rect x="0.1778%" y="277" width="0.0137%" height="15" fill="rgb(206,27,48)" fg:x="39" fg:w="3"/><text x="0.4278%" y="287.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _addOrRemoveObserver:forName:isAdding:] (3 samples, 0.01%)</title><rect x="0.1778%" y="261" width="0.0137%" height="15" fill="rgb(225,35,8)" fg:x="39" fg:w="3"/><text x="0.4278%" y="271.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _createSubsystemIfNecessary:] (3 samples, 0.01%)</title><rect x="0.1778%" y="245" width="0.0137%" height="15" fill="rgb(250,213,24)" fg:x="39" fg:w="3"/><text x="0.4278%" y="255.50"></text></g><g><title>AppKit`createActiveDisplaySubsystem (3 samples, 0.01%)</title><rect x="0.1778%" y="229" width="0.0137%" height="15" fill="rgb(247,123,22)" fg:x="39" fg:w="3"/><text x="0.4278%" y="239.50"></text></g><g><title>SkyLight`SLSMainConnectionID (3 samples, 0.01%)</title><rect x="0.1778%" y="213" width="0.0137%" height="15" fill="rgb(231,138,38)" fg:x="39" fg:w="3"/><text x="0.4278%" y="223.50"></text></g><g><title>SkyLight`SLSMainConnection (3 samples, 0.01%)</title><rect x="0.1778%" y="197" width="0.0137%" height="15" fill="rgb(231,145,46)" fg:x="39" fg:w="3"/><text x="0.4278%" y="207.50"></text></g><g><title>AppKit`-[NSApplication init] (11 samples, 0.05%)</title><rect x="0.1550%" y="373" width="0.0501%" height="15" fill="rgb(251,118,11)" fg:x="34" fg:w="11"/><text x="0.4050%" y="383.50"></text></g><g><title>AppKit`_NSInitializeAppContext (6 samples, 0.03%)</title><rect x="0.1778%" y="357" width="0.0274%" height="15" fill="rgb(217,147,25)" fg:x="39" fg:w="6"/><text x="0.4278%" y="367.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (6 samples, 0.03%)</title><rect x="0.1778%" y="341" width="0.0274%" height="15" fill="rgb(247,81,37)" fg:x="39" fg:w="6"/><text x="0.4278%" y="351.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isVisible] (3 samples, 0.01%)</title><rect x="0.1915%" y="325" width="0.0137%" height="15" fill="rgb(209,12,38)" fg:x="42" fg:w="3"/><text x="0.4415%" y="335.50"></text></g><g><title>AppKit`_NSGetAggregateUIMode (3 samples, 0.01%)</title><rect x="0.1915%" y="309" width="0.0137%" height="15" fill="rgb(227,1,9)" fg:x="42" fg:w="3"/><text x="0.4415%" y="319.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _getAggregateUIMode:withOptions:] (3 samples, 0.01%)</title><rect x="0.1915%" y="293" width="0.0137%" height="15" fill="rgb(248,47,43)" fg:x="42" fg:w="3"/><text x="0.4415%" y="303.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (12 samples, 0.05%)</title><rect x="0.1550%" y="389" width="0.0547%" height="15" fill="rgb(221,10,30)" fg:x="34" fg:w="12"/><text x="0.4050%" y="399.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (3 samples, 0.01%)</title><rect x="0.2097%" y="389" width="0.0137%" height="15" fill="rgb(210,229,1)" fg:x="46" fg:w="3"/><text x="0.4597%" y="399.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (3 samples, 0.01%)</title><rect x="0.2097%" y="373" width="0.0137%" height="15" fill="rgb(222,148,37)" fg:x="46" fg:w="3"/><text x="0.4597%" y="383.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (3 samples, 0.01%)</title><rect x="0.2097%" y="357" width="0.0137%" height="15" fill="rgb(234,67,33)" fg:x="46" fg:w="3"/><text x="0.4597%" y="367.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.01%)</title><rect x="0.2097%" y="341" width="0.0137%" height="15" fill="rgb(247,98,35)" fg:x="46" fg:w="3"/><text x="0.4597%" y="351.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.01%)</title><rect x="0.2097%" y="325" width="0.0137%" height="15" fill="rgb(247,138,52)" fg:x="46" fg:w="3"/><text x="0.4597%" y="335.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.01%)</title><rect x="0.2097%" y="309" width="0.0137%" height="15" fill="rgb(213,79,30)" fg:x="46" fg:w="3"/><text x="0.4597%" y="319.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.01%)</title><rect x="0.2097%" y="293" width="0.0137%" height="15" fill="rgb(246,177,23)" fg:x="46" fg:w="3"/><text x="0.4597%" y="303.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (3 samples, 0.01%)</title><rect x="0.2097%" y="277" width="0.0137%" height="15" fill="rgb(230,62,27)" fg:x="46" fg:w="3"/><text x="0.4597%" y="287.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (5 samples, 0.02%)</title><rect x="0.2279%" y="261" width="0.0228%" height="15" fill="rgb(216,154,8)" fg:x="50" fg:w="5"/><text x="0.4779%" y="271.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)::$_0::operator() (5 samples, 0.02%)</title><rect x="0.2279%" y="245" width="0.0228%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="5"/><text x="0.4779%" y="255.50"></text></g><g><title>libobjc.A.dylib`map_images (5 samples, 0.02%)</title><rect x="0.2279%" y="229" width="0.0228%" height="15" fill="rgb(251,115,12)" fg:x="50" fg:w="5"/><text x="0.4779%" y="239.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (5 samples, 0.02%)</title><rect x="0.2279%" y="213" width="0.0228%" height="15" fill="rgb(240,54,50)" fg:x="50" fg:w="5"/><text x="0.4779%" y="223.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (7 samples, 0.03%)</title><rect x="0.2279%" y="325" width="0.0319%" height="15" fill="rgb(233,84,52)" fg:x="50" fg:w="7"/><text x="0.4779%" y="335.50"></text></g><g><title>SoftLinking`_sl_dlopen (7 samples, 0.03%)</title><rect x="0.2279%" y="309" width="0.0319%" height="15" fill="rgb(207,117,47)" fg:x="50" fg:w="7"/><text x="0.4779%" y="319.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (7 samples, 0.03%)</title><rect x="0.2279%" y="293" width="0.0319%" height="15" fill="rgb(249,43,39)" fg:x="50" fg:w="7"/><text x="0.4779%" y="303.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (7 samples, 0.03%)</title><rect x="0.2279%" y="277" width="0.0319%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="7"/><text x="0.4779%" y="287.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (9 samples, 0.04%)</title><rect x="0.2234%" y="389" width="0.0410%" height="15" fill="rgb(236,212,23)" fg:x="49" fg:w="9"/><text x="0.4734%" y="399.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (9 samples, 0.04%)</title><rect x="0.2234%" y="373" width="0.0410%" height="15" fill="rgb(242,79,21)" fg:x="49" fg:w="9"/><text x="0.4734%" y="383.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (8 samples, 0.04%)</title><rect x="0.2279%" y="357" width="0.0365%" height="15" fill="rgb(211,96,35)" fg:x="50" fg:w="8"/><text x="0.4779%" y="367.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (8 samples, 0.04%)</title><rect x="0.2279%" y="341" width="0.0365%" height="15" fill="rgb(253,215,40)" fg:x="50" fg:w="8"/><text x="0.4779%" y="351.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateDevice (26 samples, 0.12%)</title><rect x="0.1550%" y="421" width="0.1185%" height="15" fill="rgb(211,81,21)" fg:x="34" fg:w="26"/><text x="0.4050%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_RegisterApp (26 samples, 0.12%)</title><rect x="0.1550%" y="405" width="0.1185%" height="15" fill="rgb(208,190,38)" fg:x="34" fg:w="26"/><text x="0.4050%" y="415.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::init_sdl2 (62 samples, 0.28%)</title><rect x="0.0046%" y="469" width="0.2826%" height="15" fill="rgb(235,213,38)" fg:x="1" fg:w="62"/><text x="0.2546%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InitSubSystem_REAL (29 samples, 0.13%)</title><rect x="0.1550%" y="453" width="0.1322%" height="15" fill="rgb(237,122,38)" fg:x="34" fg:w="29"/><text x="0.4050%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_VideoInit_REAL (29 samples, 0.13%)</title><rect x="0.1550%" y="437" width="0.1322%" height="15" fill="rgb(244,218,35)" fg:x="34" fg:w="29"/><text x="0.4050%" y="447.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_RenderFillRect (8 samples, 0.04%)</title><rect x="0.2917%" y="453" width="0.0365%" height="15" fill="rgb(240,68,47)" fg:x="64" fg:w="8"/><text x="0.5417%" y="463.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_SetRenderDrawColor (8 samples, 0.04%)</title><rect x="0.3282%" y="453" width="0.0365%" height="15" fill="rgb(210,16,53)" fg:x="72" fg:w="8"/><text x="0.5782%" y="463.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (3 samples, 0.01%)</title><rect x="0.3784%" y="325" width="0.0137%" height="15" fill="rgb(235,124,12)" fg:x="83" fg:w="3"/><text x="0.6284%" y="335.50"></text></g><g><title>AE`aeProcessAppleEvent (3 samples, 0.01%)</title><rect x="0.3784%" y="309" width="0.0137%" height="15" fill="rgb(224,169,11)" fg:x="83" fg:w="3"/><text x="0.6284%" y="319.50"></text></g><g><title>AE`0x000000019b70aa50 (3 samples, 0.01%)</title><rect x="0.3784%" y="293" width="0.0137%" height="15" fill="rgb(250,166,2)" fg:x="83" fg:w="3"/><text x="0.6284%" y="303.50"></text></g><g><title>AE`0x000000019b70aafc (3 samples, 0.01%)</title><rect x="0.3784%" y="277" width="0.0137%" height="15" fill="rgb(242,216,29)" fg:x="83" fg:w="3"/><text x="0.6284%" y="287.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (3 samples, 0.01%)</title><rect x="0.3784%" y="261" width="0.0137%" height="15" fill="rgb(230,116,27)" fg:x="83" fg:w="3"/><text x="0.6284%" y="271.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (3 samples, 0.01%)</title><rect x="0.3784%" y="245" width="0.0137%" height="15" fill="rgb(228,99,48)" fg:x="83" fg:w="3"/><text x="0.6284%" y="255.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (3 samples, 0.01%)</title><rect x="0.3784%" y="229" width="0.0137%" height="15" fill="rgb(253,11,6)" fg:x="83" fg:w="3"/><text x="0.6284%" y="239.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (3 samples, 0.01%)</title><rect x="0.3784%" y="213" width="0.0137%" height="15" fill="rgb(247,143,39)" fg:x="83" fg:w="3"/><text x="0.6284%" y="223.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (3 samples, 0.01%)</title><rect x="0.3784%" y="197" width="0.0137%" height="15" fill="rgb(236,97,10)" fg:x="83" fg:w="3"/><text x="0.6284%" y="207.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (3 samples, 0.01%)</title><rect x="0.3966%" y="245" width="0.0137%" height="15" fill="rgb(233,208,19)" fg:x="87" fg:w="3"/><text x="0.6466%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (3 samples, 0.01%)</title><rect x="0.3966%" y="229" width="0.0137%" height="15" fill="rgb(216,164,2)" fg:x="87" fg:w="3"/><text x="0.6466%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (3 samples, 0.01%)</title><rect x="0.3966%" y="213" width="0.0137%" height="15" fill="rgb(220,129,5)" fg:x="87" fg:w="3"/><text x="0.6466%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain.cold.5 (3 samples, 0.01%)</title><rect x="0.3966%" y="197" width="0.0137%" height="15" fill="rgb(242,17,10)" fg:x="87" fg:w="3"/><text x="0.6466%" y="207.50"></text></g><g><title>AppKit`__30-[NSMenuBarWindowManager init]_block_invoke_2 (3 samples, 0.01%)</title><rect x="0.4103%" y="197" width="0.0137%" height="15" fill="rgb(242,107,0)" fg:x="90" fg:w="3"/><text x="0.6603%" y="207.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance forEachPresentationInstance:] (3 samples, 0.01%)</title><rect x="0.4103%" y="181" width="0.0137%" height="15" fill="rgb(251,28,31)" fg:x="90" fg:w="3"/><text x="0.6603%" y="191.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (3 samples, 0.01%)</title><rect x="0.4103%" y="165" width="0.0137%" height="15" fill="rgb(233,223,10)" fg:x="90" fg:w="3"/><text x="0.6603%" y="175.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (10 samples, 0.05%)</title><rect x="0.4103%" y="213" width="0.0456%" height="15" fill="rgb(215,21,27)" fg:x="90" fg:w="10"/><text x="0.6603%" y="223.50"></text></g><g><title>AppKit`__46-[NSIATextInputActionsContext updateInputMode]_block_invoke (7 samples, 0.03%)</title><rect x="0.4239%" y="197" width="0.0319%" height="15" fill="rgb(232,23,21)" fg:x="93" fg:w="7"/><text x="0.6739%" y="207.50"></text></g><g><title>HIToolbox`TSMGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.4239%" y="181" width="0.0319%" height="15" fill="rgb(244,5,23)" fg:x="93" fg:w="7"/><text x="0.6739%" y="191.50"></text></g><g><title>HIToolbox`islGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.4239%" y="165" width="0.0319%" height="15" fill="rgb(226,81,46)" fg:x="93" fg:w="7"/><text x="0.6739%" y="175.50"></text></g><g><title>HIToolbox`TISCreatePropertyInputSourceLanguages (7 samples, 0.03%)</title><rect x="0.4239%" y="149" width="0.0319%" height="15" fill="rgb(247,70,30)" fg:x="93" fg:w="7"/><text x="0.6739%" y="159.50"></text></g><g><title>libicucore.A.dylib`ulocdata_getExemplarSet (6 samples, 0.03%)</title><rect x="0.4285%" y="133" width="0.0274%" height="15" fill="rgb(212,68,19)" fg:x="94" fg:w="6"/><text x="0.6785%" y="143.50"></text></g><g><title>libicucore.A.dylib`uset_openPatternOptions (6 samples, 0.03%)</title><rect x="0.4285%" y="117" width="0.0274%" height="15" fill="rgb(240,187,13)" fg:x="94" fg:w="6"/><text x="0.6785%" y="127.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (6 samples, 0.03%)</title><rect x="0.4285%" y="101" width="0.0274%" height="15" fill="rgb(223,113,26)" fg:x="94" fg:w="6"/><text x="0.6785%" y="111.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (6 samples, 0.03%)</title><rect x="0.4285%" y="85" width="0.0274%" height="15" fill="rgb(206,192,2)" fg:x="94" fg:w="6"/><text x="0.6785%" y="95.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (6 samples, 0.03%)</title><rect x="0.4285%" y="69" width="0.0274%" height="15" fill="rgb(241,108,4)" fg:x="94" fg:w="6"/><text x="0.6785%" y="79.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOver (4 samples, 0.02%)</title><rect x="0.4376%" y="53" width="0.0182%" height="15" fill="rgb(247,173,49)" fg:x="96" fg:w="4"/><text x="0.6876%" y="63.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOverAddCaseMappings (4 samples, 0.02%)</title><rect x="0.4376%" y="37" width="0.0182%" height="15" fill="rgb(224,114,35)" fg:x="96" fg:w="4"/><text x="0.6876%" y="47.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (12 samples, 0.05%)</title><rect x="0.4103%" y="245" width="0.0547%" height="15" fill="rgb(245,159,27)" fg:x="90" fg:w="12"/><text x="0.6603%" y="255.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (12 samples, 0.05%)</title><rect x="0.4103%" y="229" width="0.0547%" height="15" fill="rgb(245,172,44)" fg:x="90" fg:w="12"/><text x="0.6603%" y="239.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (5 samples, 0.02%)</title><rect x="0.4650%" y="149" width="0.0228%" height="15" fill="rgb(236,23,11)" fg:x="102" fg:w="5"/><text x="0.7150%" y="159.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (7 samples, 0.03%)</title><rect x="0.4650%" y="197" width="0.0319%" height="15" fill="rgb(205,117,38)" fg:x="102" fg:w="7"/><text x="0.7150%" y="207.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (7 samples, 0.03%)</title><rect x="0.4650%" y="181" width="0.0319%" height="15" fill="rgb(237,72,25)" fg:x="102" fg:w="7"/><text x="0.7150%" y="191.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (7 samples, 0.03%)</title><rect x="0.4650%" y="165" width="0.0319%" height="15" fill="rgb(244,70,9)" fg:x="102" fg:w="7"/><text x="0.7150%" y="175.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="0.5106%" y="117" width="0.0182%" height="15" fill="rgb(217,125,39)" fg:x="112" fg:w="4"/><text x="0.7606%" y="127.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (4 samples, 0.02%)</title><rect x="0.5106%" y="101" width="0.0182%" height="15" fill="rgb(235,36,10)" fg:x="112" fg:w="4"/><text x="0.7606%" y="111.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.02%)</title><rect x="0.5106%" y="85" width="0.0182%" height="15" fill="rgb(251,123,47)" fg:x="112" fg:w="4"/><text x="0.7606%" y="95.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (4 samples, 0.02%)</title><rect x="0.5106%" y="69" width="0.0182%" height="15" fill="rgb(221,13,13)" fg:x="112" fg:w="4"/><text x="0.7606%" y="79.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (5 samples, 0.02%)</title><rect x="0.5106%" y="133" width="0.0228%" height="15" fill="rgb(238,131,9)" fg:x="112" fg:w="5"/><text x="0.7606%" y="143.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (7 samples, 0.03%)</title><rect x="0.5060%" y="149" width="0.0319%" height="15" fill="rgb(211,50,8)" fg:x="111" fg:w="7"/><text x="0.7560%" y="159.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (11 samples, 0.05%)</title><rect x="0.5060%" y="165" width="0.0501%" height="15" fill="rgb(245,182,24)" fg:x="111" fg:w="11"/><text x="0.7560%" y="175.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (25 samples, 0.11%)</title><rect x="0.4650%" y="245" width="0.1140%" height="15" fill="rgb(242,14,37)" fg:x="102" fg:w="25"/><text x="0.7150%" y="255.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (25 samples, 0.11%)</title><rect x="0.4650%" y="229" width="0.1140%" height="15" fill="rgb(246,228,12)" fg:x="102" fg:w="25"/><text x="0.7150%" y="239.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (25 samples, 0.11%)</title><rect x="0.4650%" y="213" width="0.1140%" height="15" fill="rgb(213,55,15)" fg:x="102" fg:w="25"/><text x="0.7150%" y="223.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (18 samples, 0.08%)</title><rect x="0.4969%" y="197" width="0.0821%" height="15" fill="rgb(209,9,3)" fg:x="109" fg:w="18"/><text x="0.7469%" y="207.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (16 samples, 0.07%)</title><rect x="0.5060%" y="181" width="0.0729%" height="15" fill="rgb(230,59,30)" fg:x="111" fg:w="16"/><text x="0.7560%" y="191.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (5 samples, 0.02%)</title><rect x="0.5561%" y="165" width="0.0228%" height="15" fill="rgb(209,121,21)" fg:x="122" fg:w="5"/><text x="0.8061%" y="175.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (5 samples, 0.02%)</title><rect x="0.5561%" y="149" width="0.0228%" height="15" fill="rgb(220,109,13)" fg:x="122" fg:w="5"/><text x="0.8061%" y="159.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (5 samples, 0.02%)</title><rect x="0.5561%" y="133" width="0.0228%" height="15" fill="rgb(232,18,1)" fg:x="122" fg:w="5"/><text x="0.8061%" y="143.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (41 samples, 0.19%)</title><rect x="0.3966%" y="277" width="0.1869%" height="15" fill="rgb(215,41,42)" fg:x="87" fg:w="41"/><text x="0.6466%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (41 samples, 0.19%)</title><rect x="0.3966%" y="261" width="0.1869%" height="15" fill="rgb(224,123,36)" fg:x="87" fg:w="41"/><text x="0.6466%" y="271.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (43 samples, 0.20%)</title><rect x="0.3966%" y="293" width="0.1960%" height="15" fill="rgb(240,125,3)" fg:x="87" fg:w="43"/><text x="0.6466%" y="303.50"></text></g><g><title>AppKit`_DPSNextEvent (48 samples, 0.22%)</title><rect x="0.3784%" y="341" width="0.2188%" height="15" fill="rgb(205,98,50)" fg:x="83" fg:w="48"/><text x="0.6284%" y="351.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (45 samples, 0.21%)</title><rect x="0.3920%" y="325" width="0.2051%" height="15" fill="rgb(205,185,37)" fg:x="86" fg:w="45"/><text x="0.6420%" y="335.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (45 samples, 0.21%)</title><rect x="0.3920%" y="309" width="0.2051%" height="15" fill="rgb(238,207,15)" fg:x="86" fg:w="45"/><text x="0.6420%" y="319.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (51 samples, 0.23%)</title><rect x="0.3692%" y="357" width="0.2325%" height="15" fill="rgb(213,199,42)" fg:x="81" fg:w="51"/><text x="0.6192%" y="367.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (3 samples, 0.01%)</title><rect x="0.6017%" y="341" width="0.0137%" height="15" fill="rgb(235,201,11)" fg:x="132" fg:w="3"/><text x="0.8517%" y="351.50"></text></g><g><title>community_sim`community_sim::graphics::input::collect_input_events (56 samples, 0.26%)</title><rect x="0.3647%" y="453" width="0.2553%" height="15" fill="rgb(207,46,11)" fg:x="80" fg:w="56"/><text x="0.6147%" y="463.50"></text></g><g><title>community_sim`&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.26%)</title><rect x="0.3647%" y="437" width="0.2553%" height="15" fill="rgb(241,35,35)" fg:x="80" fg:w="56"/><text x="0.6147%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_WaitEventTimeout_REAL (56 samples, 0.26%)</title><rect x="0.3647%" y="421" width="0.2553%" height="15" fill="rgb(243,32,47)" fg:x="80" fg:w="56"/><text x="0.6147%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_PumpEventsInternal (56 samples, 0.26%)</title><rect x="0.3647%" y="405" width="0.2553%" height="15" fill="rgb(247,202,23)" fg:x="80" fg:w="56"/><text x="0.6147%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEvents (56 samples, 0.26%)</title><rect x="0.3647%" y="389" width="0.2553%" height="15" fill="rgb(219,102,11)" fg:x="80" fg:w="56"/><text x="0.6147%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEventsUntilDate (55 samples, 0.25%)</title><rect x="0.3692%" y="373" width="0.2507%" height="15" fill="rgb(243,110,44)" fg:x="81" fg:w="55"/><text x="0.6192%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (4 samples, 0.02%)</title><rect x="0.6017%" y="357" width="0.0182%" height="15" fill="rgb(222,74,54)" fg:x="132" fg:w="4"/><text x="0.8517%" y="367.50"></text></g><g><title>community_sim`community_sim::graphics::input_systems::process_input_intents (4 samples, 0.02%)</title><rect x="0.6200%" y="453" width="0.0182%" height="15" fill="rgb(216,99,12)" fg:x="136" fg:w="4"/><text x="0.8700%" y="463.50"></text></g><g><title>community_sim`std::sys::backtrace::lock (4 samples, 0.02%)</title><rect x="0.6200%" y="437" width="0.0182%" height="15" fill="rgb(226,22,26)" fg:x="136" fg:w="4"/><text x="0.8700%" y="447.50"></text></g><g><title>community_sim`std::alloc::rust_oom (4 samples, 0.02%)</title><rect x="0.6200%" y="421" width="0.0182%" height="15" fill="rgb(217,163,10)" fg:x="136" fg:w="4"/><text x="0.8700%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.02%)</title><rect x="0.6200%" y="405" width="0.0182%" height="15" fill="rgb(213,25,53)" fg:x="136" fg:w="4"/><text x="0.8700%" y="415.50"></text></g><g><title>community_sim`community_sim::graphics::render::agent_system::agent_render (8 samples, 0.04%)</title><rect x="0.6382%" y="453" width="0.0365%" height="15" fill="rgb(252,105,26)" fg:x="140" fg:w="8"/><text x="0.8882%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (6 samples, 0.03%)</title><rect x="0.6473%" y="437" width="0.0274%" height="15" fill="rgb(220,39,43)" fg:x="142" fg:w="6"/><text x="0.8973%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (5 samples, 0.02%)</title><rect x="0.6519%" y="421" width="0.0228%" height="15" fill="rgb(229,68,48)" fg:x="143" fg:w="5"/><text x="0.9019%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (4 samples, 0.02%)</title><rect x="0.6564%" y="405" width="0.0182%" height="15" fill="rgb(252,8,32)" fg:x="144" fg:w="4"/><text x="0.9064%" y="415.50"></text></g><g><title>community_sim`community_sim::graphics::render::food_system::food_render (4 samples, 0.02%)</title><rect x="0.6747%" y="453" width="0.0182%" height="15" fill="rgb(223,20,43)" fg:x="148" fg:w="4"/><text x="0.9247%" y="463.50"></text></g><g><title>community_sim`sdl2::ttf::font::PartialRendering::blended (3 samples, 0.01%)</title><rect x="0.6975%" y="437" width="0.0137%" height="15" fill="rgb(229,81,49)" fg:x="153" fg:w="3"/><text x="0.9475%" y="447.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Render_Internal (3 samples, 0.01%)</title><rect x="0.6975%" y="421" width="0.0137%" height="15" fill="rgb(236,28,36)" fg:x="153" fg:w="3"/><text x="0.9475%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (5 samples, 0.02%)</title><rect x="0.7202%" y="389" width="0.0228%" height="15" fill="rgb(249,185,26)" fg:x="158" fg:w="5"/><text x="0.9702%" y="399.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_event_log_window (12 samples, 0.05%)</title><rect x="0.6929%" y="453" width="0.0547%" height="15" fill="rgb(249,174,33)" fg:x="152" fg:w="12"/><text x="0.9429%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (7 samples, 0.03%)</title><rect x="0.7157%" y="437" width="0.0319%" height="15" fill="rgb(233,201,37)" fg:x="157" fg:w="7"/><text x="0.9657%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (7 samples, 0.03%)</title><rect x="0.7157%" y="421" width="0.0319%" height="15" fill="rgb(221,78,26)" fg:x="157" fg:w="7"/><text x="0.9657%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (7 samples, 0.03%)</title><rect x="0.7157%" y="405" width="0.0319%" height="15" fill="rgb(250,127,30)" fg:x="157" fg:w="7"/><text x="0.9657%" y="415.50"></text></g><g><title>community_sim`sdl2::ttf::font::PartialRendering::blended (5 samples, 0.02%)</title><rect x="0.7476%" y="437" width="0.0228%" height="15" fill="rgb(230,49,44)" fg:x="164" fg:w="5"/><text x="0.9976%" y="447.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Render_Internal (5 samples, 0.02%)</title><rect x="0.7476%" y="421" width="0.0228%" height="15" fill="rgb(229,67,23)" fg:x="164" fg:w="5"/><text x="0.9976%" y="431.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Size_Internal (5 samples, 0.02%)</title><rect x="0.7476%" y="405" width="0.0228%" height="15" fill="rgb(249,83,47)" fg:x="164" fg:w="5"/><text x="0.9976%" y="415.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_full (4 samples, 0.02%)</title><rect x="0.7522%" y="389" width="0.0182%" height="15" fill="rgb(215,43,3)" fg:x="165" fg:w="4"/><text x="1.0022%" y="399.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_execute (3 samples, 0.01%)</title><rect x="0.7567%" y="373" width="0.0137%" height="15" fill="rgb(238,154,13)" fg:x="166" fg:w="3"/><text x="1.0067%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (6 samples, 0.03%)</title><rect x="0.7704%" y="437" width="0.0274%" height="15" fill="rgb(219,56,2)" fg:x="169" fg:w="6"/><text x="1.0204%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (6 samples, 0.03%)</title><rect x="0.7704%" y="421" width="0.0274%" height="15" fill="rgb(233,0,4)" fg:x="169" fg:w="6"/><text x="1.0204%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SW_RunCommandQueue (6 samples, 0.03%)</title><rect x="0.7704%" y="405" width="0.0274%" height="15" fill="rgb(235,30,7)" fg:x="169" fg:w="6"/><text x="1.0204%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_FillRect4 (6 samples, 0.03%)</title><rect x="0.7704%" y="389" width="0.0274%" height="15" fill="rgb(250,79,13)" fg:x="169" fg:w="6"/><text x="1.0204%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (4 samples, 0.02%)</title><rect x="0.7977%" y="389" width="0.0182%" height="15" fill="rgb(211,146,34)" fg:x="175" fg:w="4"/><text x="1.0477%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (4 samples, 0.02%)</title><rect x="0.7977%" y="373" width="0.0182%" height="15" fill="rgb(228,22,38)" fg:x="175" fg:w="4"/><text x="1.0477%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (4 samples, 0.02%)</title><rect x="0.7977%" y="357" width="0.0182%" height="15" fill="rgb(235,168,5)" fg:x="175" fg:w="4"/><text x="1.0477%" y="367.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (3 samples, 0.01%)</title><rect x="0.8023%" y="341" width="0.0137%" height="15" fill="rgb(221,155,16)" fg:x="176" fg:w="3"/><text x="1.0523%" y="351.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (3 samples, 0.01%)</title><rect x="0.8023%" y="325" width="0.0137%" height="15" fill="rgb(215,215,53)" fg:x="176" fg:w="3"/><text x="1.0523%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (3 samples, 0.01%)</title><rect x="0.8023%" y="309" width="0.0137%" height="15" fill="rgb(223,4,10)" fg:x="176" fg:w="3"/><text x="1.0523%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.01%)</title><rect x="0.8023%" y="293" width="0.0137%" height="15" fill="rgb(234,103,6)" fg:x="176" fg:w="3"/><text x="1.0523%" y="303.50"></text></g><g><title>AGXMetalG13X`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::FramebufferGen3_2 (3 samples, 0.01%)</title><rect x="0.8023%" y="277" width="0.0137%" height="15" fill="rgb(227,97,0)" fg:x="176" fg:w="3"/><text x="1.0523%" y="287.50"></text></g><g><title>AGXMetalG13X`AGX::Framebuffer&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::Framebuffer (3 samples, 0.01%)</title><rect x="0.8023%" y="261" width="0.0137%" height="15" fill="rgb(234,150,53)" fg:x="176" fg:w="3"/><text x="1.0523%" y="271.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (11 samples, 0.05%)</title><rect x="0.8296%" y="309" width="0.0501%" height="15" fill="rgb(228,201,54)" fg:x="182" fg:w="11"/><text x="1.0796%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (14 samples, 0.06%)</title><rect x="0.8296%" y="341" width="0.0638%" height="15" fill="rgb(222,22,37)" fg:x="182" fg:w="14"/><text x="1.0796%" y="351.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (14 samples, 0.06%)</title><rect x="0.8296%" y="325" width="0.0638%" height="15" fill="rgb(237,53,32)" fg:x="182" fg:w="14"/><text x="1.0796%" y="335.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (3 samples, 0.01%)</title><rect x="0.8798%" y="309" width="0.0137%" height="15" fill="rgb(233,25,53)" fg:x="193" fg:w="3"/><text x="1.1298%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (4 samples, 0.02%)</title><rect x="0.8935%" y="325" width="0.0182%" height="15" fill="rgb(210,40,34)" fg:x="196" fg:w="4"/><text x="1.1435%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (3 samples, 0.01%)</title><rect x="0.8980%" y="309" width="0.0137%" height="15" fill="rgb(241,220,44)" fg:x="197" fg:w="3"/><text x="1.1480%" y="319.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (3 samples, 0.01%)</title><rect x="0.8980%" y="293" width="0.0137%" height="15" fill="rgb(235,28,35)" fg:x="197" fg:w="3"/><text x="1.1480%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="0.8980%" y="277" width="0.0137%" height="15" fill="rgb(210,56,17)" fg:x="197" fg:w="3"/><text x="1.1480%" y="287.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="0.8980%" y="261" width="0.0137%" height="15" fill="rgb(224,130,29)" fg:x="197" fg:w="3"/><text x="1.1480%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="0.8980%" y="245" width="0.0137%" height="15" fill="rgb(235,212,8)" fg:x="197" fg:w="3"/><text x="1.1480%" y="255.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (5 samples, 0.02%)</title><rect x="0.8935%" y="341" width="0.0228%" height="15" fill="rgb(223,33,50)" fg:x="196" fg:w="5"/><text x="1.1435%" y="351.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_stats_window (38 samples, 0.17%)</title><rect x="0.7476%" y="453" width="0.1732%" height="15" fill="rgb(219,149,13)" fg:x="164" fg:w="38"/><text x="0.9976%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (27 samples, 0.12%)</title><rect x="0.7977%" y="437" width="0.1231%" height="15" fill="rgb(250,156,29)" fg:x="175" fg:w="27"/><text x="1.0477%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (27 samples, 0.12%)</title><rect x="0.7977%" y="421" width="0.1231%" height="15" fill="rgb(216,193,19)" fg:x="175" fg:w="27"/><text x="1.0477%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (27 samples, 0.12%)</title><rect x="0.7977%" y="405" width="0.1231%" height="15" fill="rgb(216,135,14)" fg:x="175" fg:w="27"/><text x="1.0477%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (23 samples, 0.10%)</title><rect x="0.8160%" y="389" width="0.1048%" height="15" fill="rgb(241,47,5)" fg:x="179" fg:w="23"/><text x="1.0660%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (22 samples, 0.10%)</title><rect x="0.8205%" y="373" width="0.1003%" height="15" fill="rgb(233,42,35)" fg:x="180" fg:w="22"/><text x="1.0705%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (21 samples, 0.10%)</title><rect x="0.8251%" y="357" width="0.0957%" height="15" fill="rgb(231,13,6)" fg:x="181" fg:w="21"/><text x="1.0751%" y="367.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (27 samples, 0.12%)</title><rect x="1.3812%" y="421" width="0.1231%" height="15" fill="rgb(207,181,40)" fg:x="303" fg:w="27"/><text x="1.6312%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (33 samples, 0.15%)</title><rect x="1.8827%" y="405" width="0.1504%" height="15" fill="rgb(254,173,49)" fg:x="413" fg:w="33"/><text x="2.1327%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (22 samples, 0.10%)</title><rect x="2.0331%" y="405" width="0.1003%" height="15" fill="rgb(221,1,38)" fg:x="446" fg:w="22"/><text x="2.2831%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (8 samples, 0.04%)</title><rect x="2.4753%" y="389" width="0.0365%" height="15" fill="rgb(206,124,46)" fg:x="543" fg:w="8"/><text x="2.7253%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (232 samples, 1.06%)</title><rect x="2.5117%" y="389" width="1.0576%" height="15" fill="rgb(249,21,11)" fg:x="551" fg:w="232"/><text x="2.7617%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (34 samples, 0.15%)</title><rect x="3.4143%" y="373" width="0.1550%" height="15" fill="rgb(222,201,40)" fg:x="749" fg:w="34"/><text x="3.6643%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (19 samples, 0.09%)</title><rect x="3.7243%" y="373" width="0.0866%" height="15" fill="rgb(235,61,29)" fg:x="817" fg:w="19"/><text x="3.9743%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (54 samples, 0.25%)</title><rect x="3.5693%" y="389" width="0.2462%" height="15" fill="rgb(219,207,3)" fg:x="783" fg:w="54"/><text x="3.8193%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (376 samples, 1.71%)</title><rect x="2.1334%" y="405" width="1.7140%" height="15" fill="rgb(222,56,46)" fg:x="468" fg:w="376"/><text x="2.3834%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (7 samples, 0.03%)</title><rect x="3.8155%" y="389" width="0.0319%" height="15" fill="rgb(239,76,54)" fg:x="837" fg:w="7"/><text x="4.0655%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (607 samples, 2.77%)</title><rect x="1.5043%" y="421" width="2.7670%" height="15" fill="rgb(231,124,27)" fg:x="330" fg:w="607"/><text x="1.7543%" y="431.50">li..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (93 samples, 0.42%)</title><rect x="3.8474%" y="405" width="0.4239%" height="15" fill="rgb(249,195,6)" fg:x="844" fg:w="93"/><text x="4.0974%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (736 samples, 3.36%)</title><rect x="1.1852%" y="437" width="3.3551%" height="15" fill="rgb(237,174,47)" fg:x="260" fg:w="736"/><text x="1.4352%" y="447.50">lib..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (59 samples, 0.27%)</title><rect x="4.2713%" y="421" width="0.2690%" height="15" fill="rgb(206,201,31)" fg:x="937" fg:w="59"/><text x="4.5213%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (9 samples, 0.04%)</title><rect x="4.5403%" y="437" width="0.0410%" height="15" fill="rgb(231,57,52)" fg:x="996" fg:w="9"/><text x="4.7903%" y="447.50"></text></g><g><title>community_sim`community_sim::graphics::render::terrain::draw_terrain (821 samples, 3.74%)</title><rect x="0.9208%" y="453" width="3.7425%" height="15" fill="rgb(248,177,22)" fg:x="202" fg:w="821"/><text x="1.1708%" y="463.50">comm..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor_REAL (18 samples, 0.08%)</title><rect x="4.5813%" y="437" width="0.0821%" height="15" fill="rgb(215,211,37)" fg:x="1005" fg:w="18"/><text x="4.8313%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect (15 samples, 0.07%)</title><rect x="4.6816%" y="453" width="0.0684%" height="15" fill="rgb(241,128,51)" fg:x="1027" fg:w="15"/><text x="4.9316%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (9 samples, 0.04%)</title><rect x="4.7500%" y="453" width="0.0410%" height="15" fill="rgb(227,165,31)" fg:x="1042" fg:w="9"/><text x="5.0000%" y="463.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (48 samples, 0.22%)</title><rect x="4.7956%" y="421" width="0.2188%" height="15" fill="rgb(228,167,24)" fg:x="1052" fg:w="48"/><text x="5.0456%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (18 samples, 0.08%)</title><rect x="5.0144%" y="421" width="0.0821%" height="15" fill="rgb(228,143,12)" fg:x="1100" fg:w="18"/><text x="5.2644%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (13 samples, 0.06%)</title><rect x="5.0964%" y="421" width="0.0593%" height="15" fill="rgb(249,149,8)" fg:x="1118" fg:w="13"/><text x="5.3464%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (13 samples, 0.06%)</title><rect x="5.1557%" y="421" width="0.0593%" height="15" fill="rgb(243,35,44)" fg:x="1131" fg:w="13"/><text x="5.4057%" y="431.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (4 samples, 0.02%)</title><rect x="5.4246%" y="405" width="0.0182%" height="15" fill="rgb(246,89,9)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (4 samples, 0.02%)</title><rect x="5.4246%" y="389" width="0.0182%" height="15" fill="rgb(233,213,13)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="399.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (4 samples, 0.02%)</title><rect x="5.4246%" y="373" width="0.0182%" height="15" fill="rgb(233,141,41)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (4 samples, 0.02%)</title><rect x="5.4246%" y="357" width="0.0182%" height="15" fill="rgb(239,167,4)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.02%)</title><rect x="5.4246%" y="341" width="0.0182%" height="15" fill="rgb(209,217,16)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="351.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (4 samples, 0.02%)</title><rect x="5.4246%" y="325" width="0.0182%" height="15" fill="rgb(219,88,35)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.02%)</title><rect x="5.4246%" y="309" width="0.0182%" height="15" fill="rgb(220,193,23)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="319.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.02%)</title><rect x="5.4246%" y="293" width="0.0182%" height="15" fill="rgb(230,90,52)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="5.4246%" y="277" width="0.0182%" height="15" fill="rgb(252,106,19)" fg:x="1190" fg:w="4"/><text x="5.6746%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (6 samples, 0.03%)</title><rect x="7.6309%" y="325" width="0.0274%" height="15" fill="rgb(206,74,20)" fg:x="1674" fg:w="6"/><text x="7.8809%" y="335.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (6 samples, 0.03%)</title><rect x="7.6309%" y="309" width="0.0274%" height="15" fill="rgb(230,138,44)" fg:x="1674" fg:w="6"/><text x="7.8809%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.03%)</title><rect x="7.6309%" y="293" width="0.0274%" height="15" fill="rgb(235,182,43)" fg:x="1674" fg:w="6"/><text x="7.8809%" y="303.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.03%)</title><rect x="7.6309%" y="277" width="0.0274%" height="15" fill="rgb(242,16,51)" fg:x="1674" fg:w="6"/><text x="7.8809%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.03%)</title><rect x="7.6309%" y="261" width="0.0274%" height="15" fill="rgb(248,9,4)" fg:x="1674" fg:w="6"/><text x="7.8809%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (5 samples, 0.02%)</title><rect x="7.6583%" y="325" width="0.0228%" height="15" fill="rgb(210,31,22)" fg:x="1680" fg:w="5"/><text x="7.9083%" y="335.50"></text></g><g><title>IOKit`iokit_user_client_trap (5 samples, 0.02%)</title><rect x="7.6583%" y="309" width="0.0228%" height="15" fill="rgb(239,54,39)" fg:x="1680" fg:w="5"/><text x="7.9083%" y="319.50"></text></g><g><title>AGXMetalG13X`AGX::DataBufferAllocator&lt;34ul&gt;::grow (13 samples, 0.06%)</title><rect x="7.6264%" y="373" width="0.0593%" height="15" fill="rgb(230,99,41)" fg:x="1673" fg:w="13"/><text x="7.8764%" y="383.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (13 samples, 0.06%)</title><rect x="7.6264%" y="357" width="0.0593%" height="15" fill="rgb(253,106,12)" fg:x="1673" fg:w="13"/><text x="7.8764%" y="367.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (12 samples, 0.05%)</title><rect x="7.6309%" y="341" width="0.0547%" height="15" fill="rgb(213,46,41)" fg:x="1674" fg:w="12"/><text x="7.8809%" y="351.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (388 samples, 1.77%)</title><rect x="7.6856%" y="373" width="1.7687%" height="15" fill="rgb(215,133,35)" fg:x="1686" fg:w="388"/><text x="7.9356%" y="383.50"></text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (115 samples, 0.52%)</title><rect x="8.9301%" y="357" width="0.5242%" height="15" fill="rgb(213,28,5)" fg:x="1959" fg:w="115"/><text x="9.1801%" y="367.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (782 samples, 3.56%)</title><rect x="5.9261%" y="389" width="3.5648%" height="15" fill="rgb(215,77,49)" fg:x="1300" fg:w="782"/><text x="6.1761%" y="399.50">AGXM..</text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (8 samples, 0.04%)</title><rect x="9.4543%" y="373" width="0.0365%" height="15" fill="rgb(248,100,22)" fg:x="2074" fg:w="8"/><text x="9.7043%" y="383.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (8 samples, 0.04%)</title><rect x="9.4908%" y="389" width="0.0365%" height="15" fill="rgb(208,67,9)" fg:x="2082" fg:w="8"/><text x="9.7408%" y="399.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (1,121 samples, 5.11%)</title><rect x="5.4429%" y="405" width="5.1101%" height="15" fill="rgb(219,133,21)" fg:x="1194" fg:w="1121"/><text x="5.6929%" y="415.50">AGXMet..</text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::RenderDirtyBits (225 samples, 1.03%)</title><rect x="9.5273%" y="389" width="1.0257%" height="15" fill="rgb(246,46,29)" fg:x="2090" fg:w="225"/><text x="9.7773%" y="399.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext setVertexBufferOffset:atIndex:] (89 samples, 0.41%)</title><rect x="10.5529%" y="405" width="0.4057%" height="15" fill="rgb(246,185,52)" fg:x="2315" fg:w="89"/><text x="10.8029%" y="415.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeISPPrimitiveType (95 samples, 0.43%)</title><rect x="10.9678%" y="405" width="0.4331%" height="15" fill="rgb(252,136,11)" fg:x="2406" fg:w="95"/><text x="11.2178%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData activepipelines] (32 samples, 0.15%)</title><rect x="11.4008%" y="405" width="0.1459%" height="15" fill="rgb(219,138,53)" fg:x="2501" fg:w="32"/><text x="11.6508%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (15 samples, 0.07%)</title><rect x="11.5467%" y="405" width="0.0684%" height="15" fill="rgb(211,51,23)" fg:x="2533" fg:w="15"/><text x="11.7967%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (47 samples, 0.21%)</title><rect x="11.6151%" y="405" width="0.2142%" height="15" fill="rgb(247,221,28)" fg:x="2548" fg:w="47"/><text x="11.8651%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (41 samples, 0.19%)</title><rect x="11.8293%" y="405" width="0.1869%" height="15" fill="rgb(251,222,45)" fg:x="2595" fg:w="41"/><text x="12.0793%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (17 samples, 0.08%)</title><rect x="12.0162%" y="405" width="0.0775%" height="15" fill="rgb(217,162,53)" fg:x="2636" fg:w="17"/><text x="12.2662%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (25 samples, 0.11%)</title><rect x="12.0937%" y="405" width="0.1140%" height="15" fill="rgb(229,93,14)" fg:x="2653" fg:w="25"/><text x="12.3437%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (14 samples, 0.06%)</title><rect x="12.6863%" y="389" width="0.0638%" height="15" fill="rgb(209,67,49)" fg:x="2783" fg:w="14"/><text x="12.9363%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (31 samples, 0.14%)</title><rect x="12.7501%" y="389" width="0.1413%" height="15" fill="rgb(213,87,29)" fg:x="2797" fg:w="31"/><text x="13.0001%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (19 samples, 0.09%)</title><rect x="12.8915%" y="389" width="0.0866%" height="15" fill="rgb(205,151,52)" fg:x="2828" fg:w="19"/><text x="13.1415%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (15 samples, 0.07%)</title><rect x="12.9781%" y="389" width="0.0684%" height="15" fill="rgb(253,215,39)" fg:x="2847" fg:w="15"/><text x="13.2281%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (81 samples, 0.37%)</title><rect x="13.0465%" y="389" width="0.3692%" height="15" fill="rgb(221,220,41)" fg:x="2862" fg:w="81"/><text x="13.2965%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (55 samples, 0.25%)</title><rect x="13.1650%" y="373" width="0.2507%" height="15" fill="rgb(218,133,21)" fg:x="2888" fg:w="55"/><text x="13.4150%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (21 samples, 0.10%)</title><rect x="13.4157%" y="389" width="0.0957%" height="15" fill="rgb(221,193,43)" fg:x="2943" fg:w="21"/><text x="13.6657%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.05%)</title><rect x="13.5114%" y="389" width="0.0456%" height="15" fill="rgb(240,128,52)" fg:x="2964" fg:w="10"/><text x="13.7614%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_release (132 samples, 0.60%)</title><rect x="13.5570%" y="389" width="0.6017%" height="15" fill="rgb(253,114,12)" fg:x="2974" fg:w="132"/><text x="13.8070%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_retain (99 samples, 0.45%)</title><rect x="14.1587%" y="389" width="0.4513%" height="15" fill="rgb(215,223,47)" fg:x="3106" fg:w="99"/><text x="14.4087%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (606 samples, 2.76%)</title><rect x="12.2077%" y="405" width="2.7625%" height="15" fill="rgb(248,225,23)" fg:x="2678" fg:w="606"/><text x="12.4577%" y="415.50">li..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (79 samples, 0.36%)</title><rect x="14.6100%" y="389" width="0.3601%" height="15" fill="rgb(250,108,0)" fg:x="3205" fg:w="79"/><text x="14.8600%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$activepipelines (21 samples, 0.10%)</title><rect x="14.9701%" y="405" width="0.0957%" height="15" fill="rgb(228,208,7)" fg:x="3284" fg:w="21"/><text x="15.2201%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (18 samples, 0.08%)</title><rect x="15.0659%" y="405" width="0.0821%" height="15" fill="rgb(244,45,10)" fg:x="3305" fg:w="18"/><text x="15.3159%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$setVertexBufferOffset:atIndex: (10 samples, 0.05%)</title><rect x="15.1479%" y="405" width="0.0456%" height="15" fill="rgb(207,125,25)" fg:x="3323" fg:w="10"/><text x="15.3979%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (131 samples, 0.60%)</title><rect x="15.2026%" y="405" width="0.5972%" height="15" fill="rgb(210,195,18)" fg:x="3335" fg:w="131"/><text x="15.4526%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_release (206 samples, 0.94%)</title><rect x="15.7998%" y="405" width="0.9391%" height="15" fill="rgb(249,80,12)" fg:x="3466" fg:w="206"/><text x="16.0498%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_retain (194 samples, 0.88%)</title><rect x="16.7388%" y="405" width="0.8844%" height="15" fill="rgb(221,65,9)" fg:x="3672" fg:w="194"/><text x="16.9888%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (2,788 samples, 12.71%)</title><rect x="5.2149%" y="421" width="12.7091%" height="15" fill="rgb(235,49,36)" fg:x="1144" fg:w="2788"/><text x="5.4649%" y="431.50">libSDL2-2.0.0.dylib..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (66 samples, 0.30%)</title><rect x="17.6232%" y="405" width="0.3009%" height="15" fill="rgb(225,32,20)" fg:x="3866" fg:w="66"/><text x="17.8732%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (12 samples, 0.05%)</title><rect x="17.9241%" y="421" width="0.0547%" height="15" fill="rgb(215,141,46)" fg:x="3932" fg:w="12"/><text x="18.1741%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$drawPrimitives:vertexStart:vertexCount: (11 samples, 0.05%)</title><rect x="17.9788%" y="421" width="0.0501%" height="15" fill="rgb(250,160,47)" fg:x="3944" fg:w="11"/><text x="18.2288%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (9 samples, 0.04%)</title><rect x="18.0289%" y="421" width="0.0410%" height="15" fill="rgb(216,222,40)" fg:x="3955" fg:w="9"/><text x="18.2789%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (57 samples, 0.26%)</title><rect x="18.0699%" y="421" width="0.2598%" height="15" fill="rgb(234,217,39)" fg:x="3964" fg:w="57"/><text x="18.3199%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_release (24 samples, 0.11%)</title><rect x="18.3298%" y="421" width="0.1094%" height="15" fill="rgb(207,178,40)" fg:x="4021" fg:w="24"/><text x="18.5798%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_retain (18 samples, 0.08%)</title><rect x="18.4392%" y="421" width="0.0821%" height="15" fill="rgb(221,136,13)" fg:x="4045" fg:w="18"/><text x="18.6892%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (10 samples, 0.05%)</title><rect x="18.5212%" y="421" width="0.0456%" height="15" fill="rgb(249,199,10)" fg:x="4063" fg:w="10"/><text x="18.7712%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (3,224 samples, 14.70%)</title><rect x="4.7910%" y="437" width="14.6966%" height="15" fill="rgb(249,222,13)" fg:x="1051" fg:w="3224"/><text x="5.0410%" y="447.50">libSDL2-2.0.0.dylib`Fl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (202 samples, 0.92%)</title><rect x="18.5668%" y="421" width="0.9208%" height="15" fill="rgb(244,185,38)" fg:x="4073" fg:w="202"/><text x="18.8168%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RenderPresent (3 samples, 0.01%)</title><rect x="19.4876%" y="437" width="0.0137%" height="15" fill="rgb(236,202,9)" fg:x="4275" fg:w="3"/><text x="19.7376%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (3 samples, 0.01%)</title><rect x="19.5013%" y="405" width="0.0137%" height="15" fill="rgb(250,229,37)" fg:x="4278" fg:w="3"/><text x="19.7513%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (3 samples, 0.01%)</title><rect x="19.5013%" y="389" width="0.0137%" height="15" fill="rgb(206,174,23)" fg:x="4278" fg:w="3"/><text x="19.7513%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (3 samples, 0.01%)</title><rect x="19.5013%" y="373" width="0.0137%" height="15" fill="rgb(211,33,43)" fg:x="4278" fg:w="3"/><text x="19.7513%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (3 samples, 0.01%)</title><rect x="19.5013%" y="357" width="0.0137%" height="15" fill="rgb(245,58,50)" fg:x="4278" fg:w="3"/><text x="19.7513%" y="367.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (3 samples, 0.01%)</title><rect x="19.5013%" y="341" width="0.0137%" height="15" fill="rgb(244,68,36)" fg:x="4278" fg:w="3"/><text x="19.7513%" y="351.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (6 samples, 0.03%)</title><rect x="19.5241%" y="325" width="0.0274%" height="15" fill="rgb(232,229,15)" fg:x="4283" fg:w="6"/><text x="19.7741%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (12 samples, 0.05%)</title><rect x="19.5241%" y="357" width="0.0547%" height="15" fill="rgb(254,30,23)" fg:x="4283" fg:w="12"/><text x="19.7741%" y="367.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (12 samples, 0.05%)</title><rect x="19.5241%" y="341" width="0.0547%" height="15" fill="rgb(235,160,14)" fg:x="4283" fg:w="12"/><text x="19.7741%" y="351.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (6 samples, 0.03%)</title><rect x="19.5514%" y="325" width="0.0274%" height="15" fill="rgb(212,155,44)" fg:x="4289" fg:w="6"/><text x="19.8014%" y="335.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (3,246 samples, 14.80%)</title><rect x="4.7910%" y="453" width="14.7969%" height="15" fill="rgb(226,2,50)" fg:x="1051" fg:w="3246"/><text x="5.0410%" y="463.50">libSDL2-2.0.0.dylib`SDL..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (19 samples, 0.09%)</title><rect x="19.5013%" y="437" width="0.0866%" height="15" fill="rgb(234,177,6)" fg:x="4278" fg:w="19"/><text x="19.7513%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (19 samples, 0.09%)</title><rect x="19.5013%" y="421" width="0.0866%" height="15" fill="rgb(217,24,9)" fg:x="4278" fg:w="19"/><text x="19.7513%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (16 samples, 0.07%)</title><rect x="19.5150%" y="405" width="0.0729%" height="15" fill="rgb(220,13,46)" fg:x="4281" fg:w="16"/><text x="19.7650%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (16 samples, 0.07%)</title><rect x="19.5150%" y="389" width="0.0729%" height="15" fill="rgb(239,221,27)" fg:x="4281" fg:w="16"/><text x="19.7650%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (16 samples, 0.07%)</title><rect x="19.5150%" y="373" width="0.0729%" height="15" fill="rgb(222,198,25)" fg:x="4281" fg:w="16"/><text x="19.7650%" y="383.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::main_sim_loop (4,244 samples, 19.35%)</title><rect x="0.2872%" y="469" width="19.3463%" height="15" fill="rgb(211,99,13)" fg:x="63" fg:w="4244"/><text x="0.5372%" y="479.50">community_sim`community_sim::g..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor (10 samples, 0.05%)</title><rect x="19.5879%" y="453" width="0.0456%" height="15" fill="rgb(232,111,31)" fg:x="4297" fg:w="10"/><text x="19.8379%" y="463.50"></text></g><g><title>community_sim`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (14 samples, 0.06%)</title><rect x="19.6335%" y="453" width="0.0638%" height="15" fill="rgb(245,82,37)" fg:x="4307" fg:w="14"/><text x="19.8835%" y="463.50"></text></g><g><title>community_sim`community_sim::simulation::run_profile_from_yaml (4,323 samples, 19.71%)</title><rect x="0.0000%" y="517" width="19.7064%" height="15" fill="rgb(227,149,46)" fg:x="0" fg:w="4323"/><text x="0.2500%" y="527.50">community_sim`community_sim::si..</text></g><g><title>community_sim`community_sim::graphics::run_with_graphics_profile (4,323 samples, 19.71%)</title><rect x="0.0000%" y="501" width="19.7064%" height="15" fill="rgb(218,36,50)" fg:x="0" fg:w="4323"/><text x="0.2500%" y="511.50">community_sim`community_sim::gr..</text></g><g><title>community_sim`community_sim::graphics::sim_render::run_sim_render (4,323 samples, 19.71%)</title><rect x="0.0000%" y="485" width="19.7064%" height="15" fill="rgb(226,80,48)" fg:x="0" fg:w="4323"/><text x="0.2500%" y="495.50">community_sim`community_sim::gr..</text></g><g><title>community_sim`community_sim::map::Map::new (16 samples, 0.07%)</title><rect x="19.6335%" y="469" width="0.0729%" height="15" fill="rgb(238,224,15)" fg:x="4307" fg:w="16"/><text x="19.8835%" y="479.50"></text></g><g><title>dyld`start (4,324 samples, 19.71%)</title><rect x="0.0000%" y="613" width="19.7110%" height="15" fill="rgb(241,136,10)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>community_sim`main (4,324 samples, 19.71%)</title><rect x="0.0000%" y="597" width="19.7110%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="607.50">community_sim`main</text></g><g><title>community_sim`std::rt::lang_start_internal (4,324 samples, 19.71%)</title><rect x="0.0000%" y="581" width="19.7110%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="591.50">community_sim`std::rt::lang_sta..</text></g><g><title>community_sim`std::rt::lang_start::_{{closure}} (4,324 samples, 19.71%)</title><rect x="0.0000%" y="565" width="19.7110%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="575.50">community_sim`std::rt::lang_sta..</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (4,324 samples, 19.71%)</title><rect x="0.0000%" y="549" width="19.7110%" height="15" fill="rgb(245,177,15)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="559.50">community_sim`std::sys::backtra..</text></g><g><title>community_sim`community_sim::main (4,324 samples, 19.71%)</title><rect x="0.0000%" y="533" width="19.7110%" height="15" fill="rgb(206,64,50)" fg:x="0" fg:w="4324"/><text x="0.2500%" y="543.50">community_sim`community_sim::ma..</text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.02%)</title><rect x="19.7110%" y="613" width="0.0182%" height="15" fill="rgb(234,36,40)" fg:x="4324" fg:w="4"/><text x="19.9610%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (45 samples, 0.21%)</title><rect x="19.7611%" y="597" width="0.2051%" height="15" fill="rgb(213,64,8)" fg:x="4335" fg:w="45"/><text x="20.0111%" y="607.50"></text></g><g><title>CoreUI`BOMFileClose (3 samples, 0.01%)</title><rect x="19.9799%" y="421" width="0.0137%" height="15" fill="rgb(210,75,36)" fg:x="4383" fg:w="3"/><text x="20.2299%" y="431.50"></text></g><g><title>CoreUI`_freeBOMFile (3 samples, 0.01%)</title><rect x="19.9799%" y="405" width="0.0137%" height="15" fill="rgb(229,88,21)" fg:x="4383" fg:w="3"/><text x="20.2299%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.01%)</title><rect x="19.9799%" y="389" width="0.0137%" height="15" fill="rgb(252,204,47)" fg:x="4383" fg:w="3"/><text x="20.2299%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (3 samples, 0.01%)</title><rect x="19.9799%" y="373" width="0.0137%" height="15" fill="rgb(208,77,27)" fg:x="4383" fg:w="3"/><text x="20.2299%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.01%)</title><rect x="19.9799%" y="357" width="0.0137%" height="15" fill="rgb(221,76,26)" fg:x="4383" fg:w="3"/><text x="20.2299%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (4 samples, 0.02%)</title><rect x="19.9799%" y="581" width="0.0182%" height="15" fill="rgb(225,139,18)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (4 samples, 0.02%)</title><rect x="19.9799%" y="565" width="0.0182%" height="15" fill="rgb(230,137,11)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="575.50"></text></g><g><title>libdispatch.dylib`&lt;deduplicated_symbol&gt; (4 samples, 0.02%)</title><rect x="19.9799%" y="549" width="0.0182%" height="15" fill="rgb(212,28,1)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="19.9799%" y="533" width="0.0182%" height="15" fill="rgb(248,164,17)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (4 samples, 0.02%)</title><rect x="19.9799%" y="517" width="0.0182%" height="15" fill="rgb(222,171,42)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.02%)</title><rect x="19.9799%" y="501" width="0.0182%" height="15" fill="rgb(243,84,45)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="19.9799%" y="485" width="0.0182%" height="15" fill="rgb(252,49,23)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke3 (4 samples, 0.02%)</title><rect x="19.9799%" y="469" width="0.0182%" height="15" fill="rgb(215,19,7)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (4 samples, 0.02%)</title><rect x="19.9799%" y="453" width="0.0182%" height="15" fill="rgb(238,81,41)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="463.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (4 samples, 0.02%)</title><rect x="19.9799%" y="437" width="0.0182%" height="15" fill="rgb(210,199,37)" fg:x="4383" fg:w="4"/><text x="20.2299%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (3 samples, 0.01%)</title><rect x="19.9982%" y="565" width="0.0137%" height="15" fill="rgb(244,192,49)" fg:x="4387" fg:w="3"/><text x="20.2482%" y="575.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (3 samples, 0.01%)</title><rect x="20.0392%" y="469" width="0.0137%" height="15" fill="rgb(226,211,11)" fg:x="4396" fg:w="3"/><text x="20.2892%" y="479.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (8 samples, 0.04%)</title><rect x="20.0210%" y="501" width="0.0365%" height="15" fill="rgb(236,162,54)" fg:x="4392" fg:w="8"/><text x="20.2710%" y="511.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (7 samples, 0.03%)</title><rect x="20.0255%" y="485" width="0.0319%" height="15" fill="rgb(220,229,9)" fg:x="4393" fg:w="7"/><text x="20.2755%" y="495.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (3 samples, 0.01%)</title><rect x="20.0711%" y="485" width="0.0137%" height="15" fill="rgb(250,87,22)" fg:x="4403" fg:w="3"/><text x="20.3211%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (18 samples, 0.08%)</title><rect x="20.0164%" y="517" width="0.0821%" height="15" fill="rgb(239,43,17)" fg:x="4391" fg:w="18"/><text x="20.2664%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (9 samples, 0.04%)</title><rect x="20.0574%" y="501" width="0.0410%" height="15" fill="rgb(231,177,25)" fg:x="4400" fg:w="9"/><text x="20.3074%" y="511.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (4 samples, 0.02%)</title><rect x="20.1121%" y="373" width="0.0182%" height="15" fill="rgb(219,179,1)" fg:x="4412" fg:w="4"/><text x="20.3621%" y="383.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (4 samples, 0.02%)</title><rect x="20.1121%" y="357" width="0.0182%" height="15" fill="rgb(238,219,53)" fg:x="4412" fg:w="4"/><text x="20.3621%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="20.1121%" y="341" width="0.0182%" height="15" fill="rgb(232,167,36)" fg:x="4412" fg:w="4"/><text x="20.3621%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="20.1121%" y="325" width="0.0182%" height="15" fill="rgb(244,19,51)" fg:x="4412" fg:w="4"/><text x="20.3621%" y="335.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (8 samples, 0.04%)</title><rect x="20.1121%" y="389" width="0.0365%" height="15" fill="rgb(224,6,22)" fg:x="4412" fg:w="8"/><text x="20.3621%" y="399.50"></text></g><g><title>Metal`MTLDispatchListApply (4 samples, 0.02%)</title><rect x="20.1304%" y="373" width="0.0182%" height="15" fill="rgb(224,145,5)" fg:x="4416" fg:w="4"/><text x="20.3804%" y="383.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (4 samples, 0.02%)</title><rect x="20.1304%" y="357" width="0.0182%" height="15" fill="rgb(234,130,49)" fg:x="4416" fg:w="4"/><text x="20.3804%" y="367.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (4 samples, 0.02%)</title><rect x="20.1304%" y="341" width="0.0182%" height="15" fill="rgb(254,6,2)" fg:x="4416" fg:w="4"/><text x="20.3804%" y="351.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseExtraResources (8 samples, 0.04%)</title><rect x="20.1486%" y="325" width="0.0365%" height="15" fill="rgb(208,96,46)" fg:x="4420" fg:w="8"/><text x="20.3986%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.04%)</title><rect x="20.1486%" y="309" width="0.0365%" height="15" fill="rgb(239,3,39)" fg:x="4420" fg:w="8"/><text x="20.3986%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyBuffer dealloc] (4 samples, 0.02%)</title><rect x="20.1896%" y="293" width="0.0182%" height="15" fill="rgb(233,210,1)" fg:x="4429" fg:w="4"/><text x="20.4396%" y="303.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer dealloc] (4 samples, 0.02%)</title><rect x="20.1896%" y="277" width="0.0182%" height="15" fill="rgb(244,137,37)" fg:x="4429" fg:w="4"/><text x="20.4396%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (4 samples, 0.02%)</title><rect x="20.1896%" y="261" width="0.0182%" height="15" fill="rgb(240,136,2)" fg:x="4429" fg:w="4"/><text x="20.4396%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (3 samples, 0.01%)</title><rect x="20.1942%" y="245" width="0.0137%" height="15" fill="rgb(239,18,37)" fg:x="4430" fg:w="3"/><text x="20.4442%" y="255.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="20.2079%" y="229" width="0.0137%" height="15" fill="rgb(218,185,22)" fg:x="4433" fg:w="3"/><text x="20.4579%" y="239.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="20.2079%" y="213" width="0.0137%" height="15" fill="rgb(225,218,4)" fg:x="4433" fg:w="3"/><text x="20.4579%" y="223.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (9 samples, 0.04%)</title><rect x="20.1851%" y="325" width="0.0410%" height="15" fill="rgb(230,182,32)" fg:x="4428" fg:w="9"/><text x="20.4351%" y="335.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (9 samples, 0.04%)</title><rect x="20.1851%" y="309" width="0.0410%" height="15" fill="rgb(242,56,43)" fg:x="4428" fg:w="9"/><text x="20.4351%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (4 samples, 0.02%)</title><rect x="20.2079%" y="293" width="0.0182%" height="15" fill="rgb(233,99,24)" fg:x="4433" fg:w="4"/><text x="20.4579%" y="303.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (4 samples, 0.02%)</title><rect x="20.2079%" y="277" width="0.0182%" height="15" fill="rgb(234,209,42)" fg:x="4433" fg:w="4"/><text x="20.4579%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (4 samples, 0.02%)</title><rect x="20.2079%" y="261" width="0.0182%" height="15" fill="rgb(227,7,12)" fg:x="4433" fg:w="4"/><text x="20.4579%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (4 samples, 0.02%)</title><rect x="20.2079%" y="245" width="0.0182%" height="15" fill="rgb(245,203,43)" fg:x="4433" fg:w="4"/><text x="20.4579%" y="255.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (19 samples, 0.09%)</title><rect x="20.1486%" y="341" width="0.0866%" height="15" fill="rgb(238,205,33)" fg:x="4420" fg:w="19"/><text x="20.3986%" y="351.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (20 samples, 0.09%)</title><rect x="20.1486%" y="357" width="0.0912%" height="15" fill="rgb(231,56,7)" fg:x="4420" fg:w="20"/><text x="20.3986%" y="367.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (21 samples, 0.10%)</title><rect x="20.1486%" y="389" width="0.0957%" height="15" fill="rgb(244,186,29)" fg:x="4420" fg:w="21"/><text x="20.3986%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (21 samples, 0.10%)</title><rect x="20.1486%" y="373" width="0.0957%" height="15" fill="rgb(234,111,31)" fg:x="4420" fg:w="21"/><text x="20.3986%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (34 samples, 0.15%)</title><rect x="20.0985%" y="517" width="0.1550%" height="15" fill="rgb(241,149,10)" fg:x="4409" fg:w="34"/><text x="20.3485%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (34 samples, 0.15%)</title><rect x="20.0985%" y="501" width="0.1550%" height="15" fill="rgb(249,206,44)" fg:x="4409" fg:w="34"/><text x="20.3485%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (34 samples, 0.15%)</title><rect x="20.0985%" y="485" width="0.1550%" height="15" fill="rgb(251,153,30)" fg:x="4409" fg:w="34"/><text x="20.3485%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (33 samples, 0.15%)</title><rect x="20.1030%" y="469" width="0.1504%" height="15" fill="rgb(239,152,38)" fg:x="4410" fg:w="33"/><text x="20.3530%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (33 samples, 0.15%)</title><rect x="20.1030%" y="453" width="0.1504%" height="15" fill="rgb(249,139,47)" fg:x="4410" fg:w="33"/><text x="20.3530%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (31 samples, 0.14%)</title><rect x="20.1121%" y="437" width="0.1413%" height="15" fill="rgb(244,64,35)" fg:x="4412" fg:w="31"/><text x="20.3621%" y="447.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (31 samples, 0.14%)</title><rect x="20.1121%" y="421" width="0.1413%" height="15" fill="rgb(216,46,15)" fg:x="4412" fg:w="31"/><text x="20.3621%" y="431.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (31 samples, 0.14%)</title><rect x="20.1121%" y="405" width="0.1413%" height="15" fill="rgb(250,74,19)" fg:x="4412" fg:w="31"/><text x="20.3621%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (5 samples, 0.02%)</title><rect x="20.2671%" y="453" width="0.0228%" height="15" fill="rgb(249,42,33)" fg:x="4446" fg:w="5"/><text x="20.5171%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool updateResourcePurgeability] (5 samples, 0.02%)</title><rect x="20.2671%" y="437" width="0.0228%" height="15" fill="rgb(242,149,17)" fg:x="4446" fg:w="5"/><text x="20.5171%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (5 samples, 0.02%)</title><rect x="20.2671%" y="421" width="0.0228%" height="15" fill="rgb(244,29,21)" fg:x="4446" fg:w="5"/><text x="20.5171%" y="431.50"></text></g><g><title>IOKit`iokit_user_client_trap (4 samples, 0.02%)</title><rect x="20.2717%" y="405" width="0.0182%" height="15" fill="rgb(220,130,37)" fg:x="4447" fg:w="4"/><text x="20.5217%" y="415.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (137 samples, 0.62%)</title><rect x="20.2899%" y="453" width="0.6245%" height="15" fill="rgb(211,67,2)" fg:x="4451" fg:w="137"/><text x="20.5399%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (136 samples, 0.62%)</title><rect x="20.2945%" y="437" width="0.6200%" height="15" fill="rgb(235,68,52)" fg:x="4452" fg:w="136"/><text x="20.5445%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (136 samples, 0.62%)</title><rect x="20.2945%" y="421" width="0.6200%" height="15" fill="rgb(246,142,3)" fg:x="4452" fg:w="136"/><text x="20.5445%" y="431.50"></text></g><g><title>IOKit`iokit_user_client_trap (136 samples, 0.62%)</title><rect x="20.2945%" y="405" width="0.6200%" height="15" fill="rgb(241,25,7)" fg:x="4452" fg:w="136"/><text x="20.5445%" y="415.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (3 samples, 0.01%)</title><rect x="20.9190%" y="437" width="0.0137%" height="15" fill="rgb(242,119,39)" fg:x="4589" fg:w="3"/><text x="21.1690%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (202 samples, 0.92%)</title><rect x="20.0164%" y="533" width="0.9208%" height="15" fill="rgb(241,98,45)" fg:x="4391" fg:w="202"/><text x="20.2664%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (148 samples, 0.67%)</title><rect x="20.2626%" y="517" width="0.6747%" height="15" fill="rgb(254,28,30)" fg:x="4445" fg:w="148"/><text x="20.5126%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (147 samples, 0.67%)</title><rect x="20.2671%" y="501" width="0.6701%" height="15" fill="rgb(241,142,54)" fg:x="4446" fg:w="147"/><text x="20.5171%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (147 samples, 0.67%)</title><rect x="20.2671%" y="485" width="0.6701%" height="15" fill="rgb(222,85,15)" fg:x="4446" fg:w="147"/><text x="20.5171%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (147 samples, 0.67%)</title><rect x="20.2671%" y="469" width="0.6701%" height="15" fill="rgb(210,85,47)" fg:x="4446" fg:w="147"/><text x="20.5171%" y="479.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (5 samples, 0.02%)</title><rect x="20.9144%" y="453" width="0.0228%" height="15" fill="rgb(224,206,25)" fg:x="4588" fg:w="5"/><text x="21.1644%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (205 samples, 0.93%)</title><rect x="20.0119%" y="565" width="0.9345%" height="15" fill="rgb(243,201,19)" fg:x="4390" fg:w="205"/><text x="20.2619%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (205 samples, 0.93%)</title><rect x="20.0119%" y="549" width="0.9345%" height="15" fill="rgb(236,59,4)" fg:x="4390" fg:w="205"/><text x="20.2619%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (266 samples, 1.21%)</title><rect x="19.7383%" y="613" width="1.2126%" height="15" fill="rgb(254,179,45)" fg:x="4330" fg:w="266"/><text x="19.9883%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (216 samples, 0.98%)</title><rect x="19.9663%" y="597" width="0.9846%" height="15" fill="rgb(226,14,10)" fg:x="4380" fg:w="216"/><text x="20.2163%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (209 samples, 0.95%)</title><rect x="19.9982%" y="581" width="0.9527%" height="15" fill="rgb(244,27,41)" fg:x="4387" fg:w="209"/><text x="20.2482%" y="591.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.03%)</title><rect x="21.1059%" y="261" width="0.0274%" height="15" fill="rgb(235,35,32)" fg:x="4630" fg:w="6"/><text x="21.3559%" y="271.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (9 samples, 0.04%)</title><rect x="21.1332%" y="261" width="0.0410%" height="15" fill="rgb(218,68,31)" fg:x="4636" fg:w="9"/><text x="21.3832%" y="271.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="21.2016%" y="245" width="0.0137%" height="15" fill="rgb(207,120,37)" fg:x="4651" fg:w="3"/><text x="21.4516%" y="255.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (10 samples, 0.05%)</title><rect x="21.2153%" y="245" width="0.0456%" height="15" fill="rgb(227,98,0)" fg:x="4654" fg:w="10"/><text x="21.4653%" y="255.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="21.3019%" y="229" width="0.0228%" height="15" fill="rgb(207,7,3)" fg:x="4673" fg:w="5"/><text x="21.5519%" y="239.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="21.3247%" y="229" width="0.0137%" height="15" fill="rgb(206,98,19)" fg:x="4678" fg:w="3"/><text x="21.5747%" y="239.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.17%)</title><rect x="21.1743%" y="261" width="0.1687%" height="15" fill="rgb(217,5,26)" fg:x="4645" fg:w="37"/><text x="21.4243%" y="271.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.08%)</title><rect x="21.2609%" y="245" width="0.0821%" height="15" fill="rgb(235,190,38)" fg:x="4664" fg:w="18"/><text x="21.5109%" y="255.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (80 samples, 0.36%)</title><rect x="20.9828%" y="277" width="0.3647%" height="15" fill="rgb(247,86,24)" fg:x="4603" fg:w="80"/><text x="21.2328%" y="287.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (85 samples, 0.39%)</title><rect x="20.9828%" y="309" width="0.3875%" height="15" fill="rgb(205,101,16)" fg:x="4603" fg:w="85"/><text x="21.2328%" y="319.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (85 samples, 0.39%)</title><rect x="20.9828%" y="293" width="0.3875%" height="15" fill="rgb(246,168,33)" fg:x="4603" fg:w="85"/><text x="21.2328%" y="303.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="21.3475%" y="277" width="0.0228%" height="15" fill="rgb(231,114,1)" fg:x="4683" fg:w="5"/><text x="21.5975%" y="287.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (86 samples, 0.39%)</title><rect x="20.9828%" y="389" width="0.3920%" height="15" fill="rgb(207,184,53)" fg:x="4603" fg:w="86"/><text x="21.2328%" y="399.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.39%)</title><rect x="20.9828%" y="373" width="0.3920%" height="15" fill="rgb(224,95,51)" fg:x="4603" fg:w="86"/><text x="21.2328%" y="383.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (86 samples, 0.39%)</title><rect x="20.9828%" y="357" width="0.3920%" height="15" fill="rgb(212,188,45)" fg:x="4603" fg:w="86"/><text x="21.2328%" y="367.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (86 samples, 0.39%)</title><rect x="20.9828%" y="341" width="0.3920%" height="15" fill="rgb(223,154,38)" fg:x="4603" fg:w="86"/><text x="21.2328%" y="351.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (86 samples, 0.39%)</title><rect x="20.9828%" y="325" width="0.3920%" height="15" fill="rgb(251,22,52)" fg:x="4603" fg:w="86"/><text x="21.2328%" y="335.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.02%)</title><rect x="21.3748%" y="373" width="0.0182%" height="15" fill="rgb(229,209,22)" fg:x="4689" fg:w="4"/><text x="21.6248%" y="383.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="21.3748%" y="357" width="0.0182%" height="15" fill="rgb(234,138,34)" fg:x="4689" fg:w="4"/><text x="21.6248%" y="367.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.02%)</title><rect x="21.3748%" y="341" width="0.0182%" height="15" fill="rgb(212,95,11)" fg:x="4689" fg:w="4"/><text x="21.6248%" y="351.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (3 samples, 0.01%)</title><rect x="21.3794%" y="325" width="0.0137%" height="15" fill="rgb(240,179,47)" fg:x="4690" fg:w="3"/><text x="21.6294%" y="335.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.01%)</title><rect x="21.3794%" y="309" width="0.0137%" height="15" fill="rgb(240,163,11)" fg:x="4690" fg:w="3"/><text x="21.6294%" y="319.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (3 samples, 0.01%)</title><rect x="21.3794%" y="293" width="0.0137%" height="15" fill="rgb(236,37,12)" fg:x="4690" fg:w="3"/><text x="21.6294%" y="303.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (3 samples, 0.01%)</title><rect x="21.3794%" y="277" width="0.0137%" height="15" fill="rgb(232,164,16)" fg:x="4690" fg:w="3"/><text x="21.6294%" y="287.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.04%)</title><rect x="21.3748%" y="389" width="0.0365%" height="15" fill="rgb(244,205,15)" fg:x="4689" fg:w="8"/><text x="21.6248%" y="399.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (101 samples, 0.46%)</title><rect x="20.9783%" y="405" width="0.4604%" height="15" fill="rgb(223,117,47)" fg:x="4602" fg:w="101"/><text x="21.2283%" y="415.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (6 samples, 0.03%)</title><rect x="21.4113%" y="389" width="0.0274%" height="15" fill="rgb(244,107,35)" fg:x="4697" fg:w="6"/><text x="21.6613%" y="399.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (6 samples, 0.03%)</title><rect x="21.4113%" y="373" width="0.0274%" height="15" fill="rgb(205,140,8)" fg:x="4697" fg:w="6"/><text x="21.6613%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.01%)</title><rect x="21.4250%" y="357" width="0.0137%" height="15" fill="rgb(228,84,46)" fg:x="4700" fg:w="3"/><text x="21.6750%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.05%)</title><rect x="21.4523%" y="373" width="0.0456%" height="15" fill="rgb(254,188,9)" fg:x="4706" fg:w="10"/><text x="21.7023%" y="383.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (116 samples, 0.53%)</title><rect x="20.9737%" y="421" width="0.5288%" height="15" fill="rgb(206,112,54)" fg:x="4601" fg:w="116"/><text x="21.2237%" y="431.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (13 samples, 0.06%)</title><rect x="21.4432%" y="405" width="0.0593%" height="15" fill="rgb(216,84,49)" fg:x="4704" fg:w="13"/><text x="21.6932%" y="415.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (13 samples, 0.06%)</title><rect x="21.4432%" y="389" width="0.0593%" height="15" fill="rgb(214,194,35)" fg:x="4704" fg:w="13"/><text x="21.6932%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.02%)</title><rect x="21.5025%" y="389" width="0.0182%" height="15" fill="rgb(249,28,3)" fg:x="4717" fg:w="4"/><text x="21.7525%" y="399.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (123 samples, 0.56%)</title><rect x="20.9737%" y="437" width="0.5607%" height="15" fill="rgb(222,56,52)" fg:x="4601" fg:w="123"/><text x="21.2237%" y="447.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (7 samples, 0.03%)</title><rect x="21.5025%" y="421" width="0.0319%" height="15" fill="rgb(245,217,50)" fg:x="4717" fg:w="7"/><text x="21.7525%" y="431.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (7 samples, 0.03%)</title><rect x="21.5025%" y="405" width="0.0319%" height="15" fill="rgb(213,201,24)" fg:x="4717" fg:w="7"/><text x="21.7525%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.01%)</title><rect x="21.5207%" y="389" width="0.0137%" height="15" fill="rgb(248,116,28)" fg:x="4721" fg:w="3"/><text x="21.7707%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.01%)</title><rect x="21.5207%" y="373" width="0.0137%" height="15" fill="rgb(219,72,43)" fg:x="4721" fg:w="3"/><text x="21.7707%" y="383.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (124 samples, 0.57%)</title><rect x="20.9737%" y="485" width="0.5653%" height="15" fill="rgb(209,138,14)" fg:x="4601" fg:w="124"/><text x="21.2237%" y="495.50"></text></g><g><title>community_sim`legion::internals::systems::schedule::Executor::run_systems (124 samples, 0.57%)</title><rect x="20.9737%" y="469" width="0.5653%" height="15" fill="rgb(222,18,33)" fg:x="4601" fg:w="124"/><text x="21.2237%" y="479.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (124 samples, 0.57%)</title><rect x="20.9737%" y="453" width="0.5653%" height="15" fill="rgb(213,199,7)" fg:x="4601" fg:w="124"/><text x="21.2237%" y="463.50"></text></g><g><title>community_sim`&lt;deduplicated_symbol&gt; (126 samples, 0.57%)</title><rect x="20.9691%" y="501" width="0.5744%" height="15" fill="rgb(250,110,10)" fg:x="4600" fg:w="126"/><text x="21.2191%" y="511.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,558 samples, 7.10%)</title><rect x="46.9071%" y="373" width="7.1022%" height="15" fill="rgb(248,123,6)" fg:x="10290" fg:w="1558"/><text x="47.1571%" y="383.50">community_..</text></g><g><title>community_sim`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.01%)</title><rect x="54.0092%" y="373" width="0.0137%" height="15" fill="rgb(206,91,31)" fg:x="11848" fg:w="3"/><text x="54.2592%" y="383.50"></text></g><g><title>community_sim`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="54.0092%" y="357" width="0.0137%" height="15" fill="rgb(211,154,13)" fg:x="11848" fg:w="3"/><text x="54.2592%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="54.0092%" y="341" width="0.0137%" height="15" fill="rgb(225,148,7)" fg:x="11848" fg:w="3"/><text x="54.2592%" y="351.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,987 samples, 9.06%)</title><rect x="54.0229%" y="373" width="9.0578%" height="15" fill="rgb(220,160,43)" fg:x="11851" fg:w="1987"/><text x="54.2729%" y="383.50">community_sim..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (452 samples, 2.06%)</title><rect x="68.7970%" y="357" width="2.0604%" height="15" fill="rgb(213,52,39)" fg:x="15092" fg:w="452"/><text x="69.0470%" y="367.50">c..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,536 samples, 7.00%)</title><rect x="70.8575%" y="357" width="7.0019%" height="15" fill="rgb(243,137,7)" fg:x="15544" fg:w="1536"/><text x="71.1075%" y="367.50">community..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,337 samples, 6.09%)</title><rect x="83.5347%" y="341" width="6.0947%" height="15" fill="rgb(230,79,13)" fg:x="18325" fg:w="1337"/><text x="83.7847%" y="351.50">communit..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (871 samples, 3.97%)</title><rect x="89.6294%" y="341" width="3.9705%" height="15" fill="rgb(247,105,23)" fg:x="19662" fg:w="871"/><text x="89.8794%" y="351.50">comm..</text></g><g><title>libsystem_malloc.dylib`free_medium (41 samples, 0.19%)</title><rect x="93.6135%" y="341" width="0.1869%" height="15" fill="rgb(223,179,41)" fg:x="20536" fg:w="41"/><text x="93.8635%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (41 samples, 0.19%)</title><rect x="93.6135%" y="325" width="0.1869%" height="15" fill="rgb(218,9,34)" fg:x="20536" fg:w="41"/><text x="93.8635%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (41 samples, 0.19%)</title><rect x="93.6135%" y="309" width="0.1869%" height="15" fill="rgb(222,106,8)" fg:x="20536" fg:w="41"/><text x="93.8635%" y="319.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,501 samples, 15.96%)</title><rect x="77.8593%" y="357" width="15.9593%" height="15" fill="rgb(211,220,0)" fg:x="17080" fg:w="3501"/><text x="78.1093%" y="367.50">community_sim`hashbrown::..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,779 samples, 30.90%)</title><rect x="63.0806%" y="373" width="30.9021%" height="15" fill="rgb(229,52,16)" fg:x="13838" fg:w="6779"/><text x="63.3306%" y="383.50">community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::in..</text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.16%)</title><rect x="93.8187%" y="357" width="0.1641%" height="15" fill="rgb(212,155,18)" fg:x="20581" fg:w="36"/><text x="94.0687%" y="367.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (15,955 samples, 72.73%)</title><rect x="21.5709%" y="389" width="72.7310%" height="15" fill="rgb(242,21,14)" fg:x="4732" fg:w="15955"/><text x="21.8209%" y="399.50">community_sim`community_sim::navigation::pathfinding::a_star_path</text></g><g><title>libsystem_malloc.dylib`free_medium (69 samples, 0.31%)</title><rect x="93.9873%" y="373" width="0.3145%" height="15" fill="rgb(222,19,48)" fg:x="20618" fg:w="69"/><text x="94.2373%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (68 samples, 0.31%)</title><rect x="93.9919%" y="357" width="0.3100%" height="15" fill="rgb(232,45,27)" fg:x="20619" fg:w="68"/><text x="94.2419%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (67 samples, 0.31%)</title><rect x="93.9964%" y="341" width="0.3054%" height="15" fill="rgb(249,103,42)" fg:x="20620" fg:w="67"/><text x="94.2464%" y="351.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,045 samples, 4.76%)</title><rect x="94.3019%" y="389" width="4.7636%" height="15" fill="rgb(246,81,33)" fg:x="20687" fg:w="1045"/><text x="94.5519%" y="399.50">commun..</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (17,080 samples, 77.86%)</title><rect x="21.5481%" y="421" width="77.8593%" height="15" fill="rgb(252,33,42)" fg:x="4727" fg:w="17080"/><text x="21.7981%" y="431.50">community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (17,080 samples, 77.86%)</title><rect x="21.5481%" y="405" width="77.8593%" height="15" fill="rgb(209,212,41)" fg:x="4727" fg:w="17080"/><text x="21.7981%" y="415.50">community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (75 samples, 0.34%)</title><rect x="99.0655%" y="389" width="0.3419%" height="15" fill="rgb(207,154,6)" fg:x="21732" fg:w="75"/><text x="99.3155%" y="399.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.08%)</title><rect x="99.4894%" y="229" width="0.0775%" height="15" fill="rgb(223,64,47)" fg:x="21825" fg:w="17"/><text x="99.7394%" y="239.50"></text></g><g><title>community_sim`&lt;fern::log_impl::File as log::Log&gt;::log (6 samples, 0.03%)</title><rect x="99.5669%" y="181" width="0.0274%" height="15" fill="rgb(211,161,38)" fg:x="21842" fg:w="6"/><text x="99.8169%" y="191.50"></text></g><g><title>community_sim`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.03%)</title><rect x="99.5669%" y="165" width="0.0274%" height="15" fill="rgb(219,138,40)" fg:x="21842" fg:w="6"/><text x="99.8169%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.03%)</title><rect x="99.5669%" y="149" width="0.0274%" height="15" fill="rgb(241,228,46)" fg:x="21842" fg:w="6"/><text x="99.8169%" y="159.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (8 samples, 0.04%)</title><rect x="99.5669%" y="213" width="0.0365%" height="15" fill="rgb(223,209,38)" fg:x="21842" fg:w="8"/><text x="99.8169%" y="223.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (8 samples, 0.04%)</title><rect x="99.5669%" y="197" width="0.0365%" height="15" fill="rgb(236,164,45)" fg:x="21842" fg:w="8"/><text x="99.8169%" y="207.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (9 samples, 0.04%)</title><rect x="99.5669%" y="229" width="0.0410%" height="15" fill="rgb(231,15,5)" fg:x="21842" fg:w="9"/><text x="99.8169%" y="239.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (45 samples, 0.21%)</title><rect x="99.4074%" y="389" width="0.2051%" height="15" fill="rgb(252,35,15)" fg:x="21807" fg:w="45"/><text x="99.6574%" y="399.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (45 samples, 0.21%)</title><rect x="99.4074%" y="373" width="0.2051%" height="15" fill="rgb(248,181,18)" fg:x="21807" fg:w="45"/><text x="99.6574%" y="383.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (45 samples, 0.21%)</title><rect x="99.4074%" y="357" width="0.2051%" height="15" fill="rgb(233,39,42)" fg:x="21807" fg:w="45"/><text x="99.6574%" y="367.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (44 samples, 0.20%)</title><rect x="99.4120%" y="341" width="0.2006%" height="15" fill="rgb(238,110,33)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="351.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (44 samples, 0.20%)</title><rect x="99.4120%" y="325" width="0.2006%" height="15" fill="rgb(233,195,10)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="335.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (44 samples, 0.20%)</title><rect x="99.4120%" y="309" width="0.2006%" height="15" fill="rgb(254,105,3)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="319.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (44 samples, 0.20%)</title><rect x="99.4120%" y="293" width="0.2006%" height="15" fill="rgb(221,225,9)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="303.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (44 samples, 0.20%)</title><rect x="99.4120%" y="277" width="0.2006%" height="15" fill="rgb(224,227,45)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="287.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (44 samples, 0.20%)</title><rect x="99.4120%" y="261" width="0.2006%" height="15" fill="rgb(229,198,43)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="271.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (44 samples, 0.20%)</title><rect x="99.4120%" y="245" width="0.2006%" height="15" fill="rgb(206,209,35)" fg:x="21808" fg:w="44"/><text x="99.6620%" y="255.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (17,128 samples, 78.08%)</title><rect x="21.5435%" y="469" width="78.0781%" height="15" fill="rgb(245,195,53)" fg:x="4726" fg:w="17128"/><text x="21.7935%" y="479.50">community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (17,127 samples, 78.07%)</title><rect x="21.5481%" y="453" width="78.0736%" height="15" fill="rgb(240,92,26)" fg:x="4727" fg:w="17127"/><text x="21.7981%" y="463.50">community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17,127 samples, 78.07%)</title><rect x="21.5481%" y="437" width="78.0736%" height="15" fill="rgb(207,40,23)" fg:x="4727" fg:w="17127"/><text x="21.7981%" y="447.50">community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (47 samples, 0.21%)</title><rect x="99.4074%" y="421" width="0.2142%" height="15" fill="rgb(223,111,35)" fg:x="21807" fg:w="47"/><text x="99.6574%" y="431.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (47 samples, 0.21%)</title><rect x="99.4074%" y="405" width="0.2142%" height="15" fill="rgb(229,147,28)" fg:x="21807" fg:w="47"/><text x="99.6574%" y="415.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17,133 samples, 78.10%)</title><rect x="21.5435%" y="501" width="78.1009%" height="15" fill="rgb(211,29,28)" fg:x="4726" fg:w="17133"/><text x="21.7935%" y="511.50">community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (17,133 samples, 78.10%)</title><rect x="21.5435%" y="485" width="78.1009%" height="15" fill="rgb(228,72,33)" fg:x="4726" fg:w="17133"/><text x="21.7935%" y="495.50">community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (3 samples, 0.01%)</title><rect x="99.6308%" y="469" width="0.0137%" height="15" fill="rgb(205,214,31)" fg:x="21856" fg:w="3"/><text x="99.8808%" y="479.50"></text></g><g><title>community_sim`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="99.6536%" y="485" width="0.0228%" height="15" fill="rgb(224,111,15)" fg:x="21861" fg:w="5"/><text x="99.9036%" y="495.50"></text></g><g><title>community_sim`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (3 samples, 0.01%)</title><rect x="99.6627%" y="469" width="0.0137%" height="15" fill="rgb(253,21,26)" fg:x="21863" fg:w="3"/><text x="99.9127%" y="479.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::find_work (9 samples, 0.04%)</title><rect x="99.6444%" y="501" width="0.0410%" height="15" fill="rgb(245,139,43)" fg:x="21859" fg:w="9"/><text x="99.8944%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (20 samples, 0.09%)</title><rect x="99.6991%" y="485" width="0.0912%" height="15" fill="rgb(252,170,7)" fg:x="21871" fg:w="20"/><text x="99.9491%" y="495.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::sleep (24 samples, 0.11%)</title><rect x="99.6855%" y="501" width="0.1094%" height="15" fill="rgb(231,118,14)" fg:x="21868" fg:w="24"/><text x="99.9355%" y="511.50"></text></g><g><title>community_sim`std::sys::pal::unix::sync::mutex::Mutex::lock (14 samples, 0.06%)</title><rect x="99.7949%" y="469" width="0.0638%" height="15" fill="rgb(238,83,0)" fg:x="21892" fg:w="14"/><text x="100.0449%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (14 samples, 0.06%)</title><rect x="99.7949%" y="453" width="0.0638%" height="15" fill="rgb(221,39,39)" fg:x="21892" fg:w="14"/><text x="100.0449%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (14 samples, 0.06%)</title><rect x="99.7949%" y="437" width="0.0638%" height="15" fill="rgb(222,119,46)" fg:x="21892" fg:w="14"/><text x="100.0449%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (8 samples, 0.04%)</title><rect x="99.8587%" y="469" width="0.0365%" height="15" fill="rgb(222,165,49)" fg:x="21906" fg:w="8"/><text x="100.1087%" y="479.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (25 samples, 0.11%)</title><rect x="99.7949%" y="501" width="0.1140%" height="15" fill="rgb(219,113,52)" fg:x="21892" fg:w="25"/><text x="100.0449%" y="511.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (25 samples, 0.11%)</title><rect x="99.7949%" y="485" width="0.1140%" height="15" fill="rgb(214,7,15)" fg:x="21892" fg:w="25"/><text x="100.0449%" y="495.50"></text></g><g><title>all (21,937 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="21937"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (17,341 samples, 79.05%)</title><rect x="20.9509%" y="613" width="79.0491%" height="15" fill="rgb(238,90,54)" fg:x="4596" fg:w="17341"/><text x="21.2009%" y="623.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (17,341 samples, 79.05%)</title><rect x="20.9509%" y="597" width="79.0491%" height="15" fill="rgb(213,208,19)" fg:x="4596" fg:w="17341"/><text x="21.2009%" y="607.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>community_sim`std::sys::pal::unix::thread::Thread::new::thread_start (17,339 samples, 79.04%)</title><rect x="20.9600%" y="581" width="79.0400%" height="15" fill="rgb(233,156,4)" fg:x="4598" fg:w="17339"/><text x="21.2100%" y="591.50">community_sim`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}} (17,339 samples, 79.04%)</title><rect x="20.9600%" y="565" width="79.0400%" height="15" fill="rgb(207,194,5)" fg:x="4598" fg:w="17339"/><text x="21.2100%" y="575.50">community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (17,339 samples, 79.04%)</title><rect x="20.9600%" y="549" width="79.0400%" height="15" fill="rgb(206,111,30)" fg:x="4598" fg:w="17339"/><text x="21.2100%" y="559.50">community_sim`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>community_sim`rayon_core::registry::ThreadBuilder::run (17,339 samples, 79.04%)</title><rect x="20.9600%" y="533" width="79.0400%" height="15" fill="rgb(243,70,54)" fg:x="4598" fg:w="17339"/><text x="21.2100%" y="543.50">community_sim`rayon_core::registry::ThreadBuilder::run</text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (17,339 samples, 79.04%)</title><rect x="20.9600%" y="517" width="79.0400%" height="15" fill="rgb(242,28,8)" fg:x="4598" fg:w="17339"/><text x="21.2100%" y="527.50">community_sim`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>libsystem_kernel.dylib`swtch_pri (19 samples, 0.09%)</title><rect x="99.9134%" y="501" width="0.0866%" height="15" fill="rgb(219,106,18)" fg:x="21918" fg:w="19"/><text x="100.1634%" y="511.50"></text></g></svg></svg>