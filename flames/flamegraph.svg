<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="22538"><g><title>libSDL2-2.0.0.dylib`METAL_CreateRenderer (3 samples, 0.01%)</title><rect x="0.0133%" y="437" width="0.0133%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="3"/><text x="0.2633%" y="447.50"></text></g><g><title>community_sim`sdl2::render::CanvasBuilder::build (4 samples, 0.02%)</title><rect x="0.0133%" y="469" width="0.0177%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="4"/><text x="0.2633%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRenderer_REAL (4 samples, 0.02%)</title><rect x="0.0133%" y="453" width="0.0177%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="4"/><text x="0.2633%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _tileTitlebarAndRedisplay:] (3 samples, 0.01%)</title><rect x="0.0488%" y="197" width="0.0133%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="3"/><text x="0.2988%" y="207.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (5 samples, 0.02%)</title><rect x="0.0444%" y="325" width="0.0222%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="5"/><text x="0.2944%" y="335.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (5 samples, 0.02%)</title><rect x="0.0444%" y="309" width="0.0222%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="5"/><text x="0.2944%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="0.0444%" y="293" width="0.0222%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="5"/><text x="0.2944%" y="303.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (5 samples, 0.02%)</title><rect x="0.0444%" y="277" width="0.0222%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="5"/><text x="0.2944%" y="287.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (5 samples, 0.02%)</title><rect x="0.0444%" y="261" width="0.0222%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="5"/><text x="0.2944%" y="271.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (5 samples, 0.02%)</title><rect x="0.0444%" y="245" width="0.0222%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="5"/><text x="0.2944%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (5 samples, 0.02%)</title><rect x="0.0444%" y="229" width="0.0222%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="5"/><text x="0.2944%" y="239.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="0.0444%" y="213" width="0.0222%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="5"/><text x="0.2944%" y="223.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (7 samples, 0.03%)</title><rect x="0.0444%" y="341" width="0.0311%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="7"/><text x="0.2944%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.06%)</title><rect x="0.0444%" y="357" width="0.0577%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="13"/><text x="0.2944%" y="367.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (6 samples, 0.03%)</title><rect x="0.0754%" y="341" width="0.0266%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="6"/><text x="0.3254%" y="351.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (6 samples, 0.03%)</title><rect x="0.0754%" y="325" width="0.0266%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="6"/><text x="0.3254%" y="335.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (5 samples, 0.02%)</title><rect x="0.0799%" y="309" width="0.0222%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="5"/><text x="0.3299%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (4 samples, 0.02%)</title><rect x="0.1109%" y="357" width="0.0177%" height="15" fill="rgb(210,31,41)" fg:x="25" fg:w="4"/><text x="0.3609%" y="367.50"></text></g><g><title>AppKit`_NXCreateWindow (3 samples, 0.01%)</title><rect x="0.1154%" y="341" width="0.0133%" height="15" fill="rgb(221,200,47)" fg:x="26" fg:w="3"/><text x="0.3654%" y="351.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (3 samples, 0.01%)</title><rect x="0.1154%" y="325" width="0.0133%" height="15" fill="rgb(226,26,5)" fg:x="26" fg:w="3"/><text x="0.3654%" y="335.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (3 samples, 0.01%)</title><rect x="0.1154%" y="309" width="0.0133%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="3"/><text x="0.3654%" y="319.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (3 samples, 0.01%)</title><rect x="0.1154%" y="293" width="0.0133%" height="15" fill="rgb(235,183,28)" fg:x="26" fg:w="3"/><text x="0.3654%" y="303.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (3 samples, 0.01%)</title><rect x="0.1154%" y="277" width="0.0133%" height="15" fill="rgb(221,5,38)" fg:x="26" fg:w="3"/><text x="0.3654%" y="287.50"></text></g><g><title>Metal`MTLCopyAllDevices (3 samples, 0.01%)</title><rect x="0.1154%" y="261" width="0.0133%" height="15" fill="rgb(247,18,42)" fg:x="26" fg:w="3"/><text x="0.3654%" y="271.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:screen:] (22 samples, 0.10%)</title><rect x="0.0399%" y="421" width="0.0976%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="22"/><text x="0.2899%" y="431.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (22 samples, 0.10%)</title><rect x="0.0399%" y="405" width="0.0976%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="22"/><text x="0.2899%" y="415.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (22 samples, 0.10%)</title><rect x="0.0399%" y="389" width="0.0976%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="22"/><text x="0.2899%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (21 samples, 0.09%)</title><rect x="0.0444%" y="373" width="0.0932%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="21"/><text x="0.2944%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateWindow (24 samples, 0.11%)</title><rect x="0.0355%" y="437" width="0.1065%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="24"/><text x="0.2855%" y="447.50"></text></g><g><title>community_sim`sdl2::video::WindowBuilder::build (27 samples, 0.12%)</title><rect x="0.0355%" y="469" width="0.1198%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="27"/><text x="0.2855%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateWindow_REAL (27 samples, 0.12%)</title><rect x="0.0355%" y="453" width="0.1198%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="27"/><text x="0.2855%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_ShowWindow_REAL (3 samples, 0.01%)</title><rect x="0.1420%" y="437" width="0.0133%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="3"/><text x="0.3920%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_ShowWindow (3 samples, 0.01%)</title><rect x="0.1420%" y="421" width="0.0133%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="3"/><text x="0.3920%" y="431.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (3 samples, 0.01%)</title><rect x="0.1420%" y="405" width="0.0133%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="3"/><text x="0.3920%" y="415.50"></text></g><g><title>AppKit`_NSInitializeAppContext (5 samples, 0.02%)</title><rect x="0.1775%" y="373" width="0.0222%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="5"/><text x="0.4275%" y="383.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (5 samples, 0.02%)</title><rect x="0.1775%" y="357" width="0.0222%" height="15" fill="rgb(233,36,39)" fg:x="40" fg:w="5"/><text x="0.4275%" y="367.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isVisible] (3 samples, 0.01%)</title><rect x="0.1864%" y="341" width="0.0133%" height="15" fill="rgb(226,3,54)" fg:x="42" fg:w="3"/><text x="0.4364%" y="351.50"></text></g><g><title>AppKit`_NSGetAggregateUIMode (3 samples, 0.01%)</title><rect x="0.1864%" y="325" width="0.0133%" height="15" fill="rgb(245,192,40)" fg:x="42" fg:w="3"/><text x="0.4364%" y="335.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _getAggregateUIMode:withOptions:] (3 samples, 0.01%)</title><rect x="0.1864%" y="309" width="0.0133%" height="15" fill="rgb(238,167,29)" fg:x="42" fg:w="3"/><text x="0.4364%" y="319.50"></text></g><g><title>HIServices`GetCurrentProcess (3 samples, 0.01%)</title><rect x="0.1864%" y="293" width="0.0133%" height="15" fill="rgb(232,182,51)" fg:x="42" fg:w="3"/><text x="0.4364%" y="303.50"></text></g><g><title>HIServices`_RegisterApplication (3 samples, 0.01%)</title><rect x="0.1864%" y="277" width="0.0133%" height="15" fill="rgb(231,60,39)" fg:x="42" fg:w="3"/><text x="0.4364%" y="287.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (13 samples, 0.06%)</title><rect x="0.1553%" y="405" width="0.0577%" height="15" fill="rgb(208,69,12)" fg:x="35" fg:w="13"/><text x="0.4053%" y="415.50"></text></g><g><title>AppKit`-[NSApplication init] (13 samples, 0.06%)</title><rect x="0.1553%" y="389" width="0.0577%" height="15" fill="rgb(235,93,37)" fg:x="35" fg:w="13"/><text x="0.4053%" y="399.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (3 samples, 0.01%)</title><rect x="0.2130%" y="405" width="0.0133%" height="15" fill="rgb(213,116,39)" fg:x="48" fg:w="3"/><text x="0.4630%" y="415.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (3 samples, 0.01%)</title><rect x="0.2130%" y="389" width="0.0133%" height="15" fill="rgb(222,207,29)" fg:x="48" fg:w="3"/><text x="0.4630%" y="399.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (3 samples, 0.01%)</title><rect x="0.2130%" y="373" width="0.0133%" height="15" fill="rgb(206,96,30)" fg:x="48" fg:w="3"/><text x="0.4630%" y="383.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.01%)</title><rect x="0.2130%" y="357" width="0.0133%" height="15" fill="rgb(218,138,4)" fg:x="48" fg:w="3"/><text x="0.4630%" y="367.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.01%)</title><rect x="0.2130%" y="341" width="0.0133%" height="15" fill="rgb(250,191,14)" fg:x="48" fg:w="3"/><text x="0.4630%" y="351.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.01%)</title><rect x="0.2130%" y="325" width="0.0133%" height="15" fill="rgb(239,60,40)" fg:x="48" fg:w="3"/><text x="0.4630%" y="335.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.01%)</title><rect x="0.2130%" y="309" width="0.0133%" height="15" fill="rgb(206,27,48)" fg:x="48" fg:w="3"/><text x="0.4630%" y="319.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (5 samples, 0.02%)</title><rect x="0.2307%" y="277" width="0.0222%" height="15" fill="rgb(225,35,8)" fg:x="52" fg:w="5"/><text x="0.4807%" y="287.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)::$_0::operator() (4 samples, 0.02%)</title><rect x="0.2352%" y="261" width="0.0177%" height="15" fill="rgb(250,213,24)" fg:x="53" fg:w="4"/><text x="0.4852%" y="271.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.02%)</title><rect x="0.2352%" y="245" width="0.0177%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="4"/><text x="0.4852%" y="255.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.02%)</title><rect x="0.2352%" y="229" width="0.0177%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="4"/><text x="0.4852%" y="239.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (6 samples, 0.03%)</title><rect x="0.2307%" y="341" width="0.0266%" height="15" fill="rgb(231,145,46)" fg:x="52" fg:w="6"/><text x="0.4807%" y="351.50"></text></g><g><title>SoftLinking`_sl_dlopen (6 samples, 0.03%)</title><rect x="0.2307%" y="325" width="0.0266%" height="15" fill="rgb(251,118,11)" fg:x="52" fg:w="6"/><text x="0.4807%" y="335.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (6 samples, 0.03%)</title><rect x="0.2307%" y="309" width="0.0266%" height="15" fill="rgb(217,147,25)" fg:x="52" fg:w="6"/><text x="0.4807%" y="319.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (6 samples, 0.03%)</title><rect x="0.2307%" y="293" width="0.0266%" height="15" fill="rgb(247,81,37)" fg:x="52" fg:w="6"/><text x="0.4807%" y="303.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (7 samples, 0.03%)</title><rect x="0.2307%" y="389" width="0.0311%" height="15" fill="rgb(209,12,38)" fg:x="52" fg:w="7"/><text x="0.4807%" y="399.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (7 samples, 0.03%)</title><rect x="0.2307%" y="373" width="0.0311%" height="15" fill="rgb(227,1,9)" fg:x="52" fg:w="7"/><text x="0.4807%" y="383.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (7 samples, 0.03%)</title><rect x="0.2307%" y="357" width="0.0311%" height="15" fill="rgb(248,47,43)" fg:x="52" fg:w="7"/><text x="0.4807%" y="367.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (9 samples, 0.04%)</title><rect x="0.2263%" y="405" width="0.0399%" height="15" fill="rgb(221,10,30)" fg:x="51" fg:w="9"/><text x="0.4763%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateDevice (27 samples, 0.12%)</title><rect x="0.1553%" y="437" width="0.1198%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="27"/><text x="0.4053%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_RegisterApp (27 samples, 0.12%)</title><rect x="0.1553%" y="421" width="0.1198%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="27"/><text x="0.4053%" y="431.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::init_sdl2 (63 samples, 0.28%)</title><rect x="0.0133%" y="485" width="0.2795%" height="15" fill="rgb(234,67,33)" fg:x="3" fg:w="63"/><text x="0.2633%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InitSubSystem_REAL (31 samples, 0.14%)</title><rect x="0.1553%" y="469" width="0.1375%" height="15" fill="rgb(247,98,35)" fg:x="35" fg:w="31"/><text x="0.4053%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_VideoInit_REAL (31 samples, 0.14%)</title><rect x="0.1553%" y="453" width="0.1375%" height="15" fill="rgb(247,138,52)" fg:x="35" fg:w="31"/><text x="0.4053%" y="463.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_RenderFillRect (3 samples, 0.01%)</title><rect x="0.3017%" y="469" width="0.0133%" height="15" fill="rgb(213,79,30)" fg:x="68" fg:w="3"/><text x="0.5517%" y="479.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_SetRenderDrawColor (10 samples, 0.04%)</title><rect x="0.3150%" y="469" width="0.0444%" height="15" fill="rgb(246,177,23)" fg:x="71" fg:w="10"/><text x="0.5650%" y="479.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (3 samples, 0.01%)</title><rect x="0.3638%" y="341" width="0.0133%" height="15" fill="rgb(230,62,27)" fg:x="82" fg:w="3"/><text x="0.6138%" y="351.50"></text></g><g><title>AE`aeProcessAppleEvent (3 samples, 0.01%)</title><rect x="0.3638%" y="325" width="0.0133%" height="15" fill="rgb(216,154,8)" fg:x="82" fg:w="3"/><text x="0.6138%" y="335.50"></text></g><g><title>AE`0x000000019b70aa50 (3 samples, 0.01%)</title><rect x="0.3638%" y="309" width="0.0133%" height="15" fill="rgb(244,35,45)" fg:x="82" fg:w="3"/><text x="0.6138%" y="319.50"></text></g><g><title>AE`0x000000019b70aafc (3 samples, 0.01%)</title><rect x="0.3638%" y="293" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="82" fg:w="3"/><text x="0.6138%" y="303.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (3 samples, 0.01%)</title><rect x="0.3638%" y="277" width="0.0133%" height="15" fill="rgb(240,54,50)" fg:x="82" fg:w="3"/><text x="0.6138%" y="287.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (3 samples, 0.01%)</title><rect x="0.3638%" y="261" width="0.0133%" height="15" fill="rgb(233,84,52)" fg:x="82" fg:w="3"/><text x="0.6138%" y="271.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (3 samples, 0.01%)</title><rect x="0.3638%" y="245" width="0.0133%" height="15" fill="rgb(207,117,47)" fg:x="82" fg:w="3"/><text x="0.6138%" y="255.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (3 samples, 0.01%)</title><rect x="0.3638%" y="229" width="0.0133%" height="15" fill="rgb(249,43,39)" fg:x="82" fg:w="3"/><text x="0.6138%" y="239.50"></text></g><g><title>libicucore.A.dylib`ulocdata_getExemplarSet (4 samples, 0.02%)</title><rect x="0.3949%" y="149" width="0.0177%" height="15" fill="rgb(209,38,44)" fg:x="89" fg:w="4"/><text x="0.6449%" y="159.50"></text></g><g><title>libicucore.A.dylib`uset_openPatternOptions (4 samples, 0.02%)</title><rect x="0.3949%" y="133" width="0.0177%" height="15" fill="rgb(236,212,23)" fg:x="89" fg:w="4"/><text x="0.6449%" y="143.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (4 samples, 0.02%)</title><rect x="0.3949%" y="117" width="0.0177%" height="15" fill="rgb(242,79,21)" fg:x="89" fg:w="4"/><text x="0.6449%" y="127.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (4 samples, 0.02%)</title><rect x="0.3949%" y="101" width="0.0177%" height="15" fill="rgb(211,96,35)" fg:x="89" fg:w="4"/><text x="0.6449%" y="111.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (4 samples, 0.02%)</title><rect x="0.3949%" y="85" width="0.0177%" height="15" fill="rgb(253,215,40)" fg:x="89" fg:w="4"/><text x="0.6449%" y="95.50"></text></g><g><title>AppKit`__46-[NSIATextInputActionsContext updateInputMode]_block_invoke (7 samples, 0.03%)</title><rect x="0.3949%" y="213" width="0.0311%" height="15" fill="rgb(211,81,21)" fg:x="89" fg:w="7"/><text x="0.6449%" y="223.50"></text></g><g><title>HIToolbox`TSMGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.3949%" y="197" width="0.0311%" height="15" fill="rgb(208,190,38)" fg:x="89" fg:w="7"/><text x="0.6449%" y="207.50"></text></g><g><title>HIToolbox`islGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.3949%" y="181" width="0.0311%" height="15" fill="rgb(235,213,38)" fg:x="89" fg:w="7"/><text x="0.6449%" y="191.50"></text></g><g><title>HIToolbox`TISCreatePropertyInputSourceLanguages (7 samples, 0.03%)</title><rect x="0.3949%" y="165" width="0.0311%" height="15" fill="rgb(237,122,38)" fg:x="89" fg:w="7"/><text x="0.6449%" y="175.50"></text></g><g><title>AppKit`__80-[NSWMWindowCoordinator clientWindowManager:requestMakeKeyWindowWithIdentifier:]_block_invoke (4 samples, 0.02%)</title><rect x="0.4259%" y="213" width="0.0177%" height="15" fill="rgb(244,218,35)" fg:x="96" fg:w="4"/><text x="0.6759%" y="223.50"></text></g><g><title>AppKit`-[NSWindow makeKeyWindow] (4 samples, 0.02%)</title><rect x="0.4259%" y="197" width="0.0177%" height="15" fill="rgb(240,68,47)" fg:x="96" fg:w="4"/><text x="0.6759%" y="207.50"></text></g><g><title>AppKit`-[NSWindow _changeKeyAndMainLimitedOK:] (4 samples, 0.02%)</title><rect x="0.4259%" y="181" width="0.0177%" height="15" fill="rgb(210,16,53)" fg:x="96" fg:w="4"/><text x="0.6759%" y="191.50"></text></g><g><title>AppKit`-[NSWindow resignKeyWindow] (3 samples, 0.01%)</title><rect x="0.4304%" y="165" width="0.0133%" height="15" fill="rgb(235,124,12)" fg:x="97" fg:w="3"/><text x="0.6804%" y="175.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (12 samples, 0.05%)</title><rect x="0.3949%" y="229" width="0.0532%" height="15" fill="rgb(224,169,11)" fg:x="89" fg:w="12"/><text x="0.6449%" y="239.50"></text></g><g><title>ViewBridge`-[NSRemoteView _advanceToConfigPhase:] (3 samples, 0.01%)</title><rect x="0.4481%" y="181" width="0.0133%" height="15" fill="rgb(250,166,2)" fg:x="101" fg:w="3"/><text x="0.6981%" y="191.50"></text></g><g><title>ViewBridge`-[NSRemoteView _informAuxServiceOfSelf:] (3 samples, 0.01%)</title><rect x="0.4481%" y="165" width="0.0133%" height="15" fill="rgb(242,216,29)" fg:x="101" fg:w="3"/><text x="0.6981%" y="175.50"></text></g><g><title>ViewBridge`-[NSRemoteView _auxiliaryProxyWithSemaphore:attemptingTo:withCompletion:] (3 samples, 0.01%)</title><rect x="0.4481%" y="149" width="0.0133%" height="15" fill="rgb(230,116,27)" fg:x="101" fg:w="3"/><text x="0.6981%" y="159.50"></text></g><g><title>ViewBridge`auxiliaryProxyFor (3 samples, 0.01%)</title><rect x="0.4481%" y="133" width="0.0133%" height="15" fill="rgb(228,99,48)" fg:x="101" fg:w="3"/><text x="0.6981%" y="143.50"></text></g><g><title>ViewBridge`__auxiliaryProxyFor_block_invoke (3 samples, 0.01%)</title><rect x="0.4481%" y="117" width="0.0133%" height="15" fill="rgb(253,11,6)" fg:x="101" fg:w="3"/><text x="0.6981%" y="127.50"></text></g><g><title>ViewBridge`__45-[NSRemoteView advanceToConfigPhaseIfNeeded:]_block_invoke_2 (4 samples, 0.02%)</title><rect x="0.4481%" y="197" width="0.0177%" height="15" fill="rgb(247,143,39)" fg:x="101" fg:w="4"/><text x="0.6981%" y="207.50"></text></g><g><title>ViewBridge`-[NSRemoteView _lastCallImpliedByAdvancingToPhase:] (4 samples, 0.02%)</title><rect x="0.4659%" y="149" width="0.0177%" height="15" fill="rgb(236,97,10)" fg:x="105" fg:w="4"/><text x="0.7159%" y="159.50"></text></g><g><title>ViewBridge`-[NSRemoteViewControllerAuxiliary viewDidAdvanceToRunPhase:] (4 samples, 0.02%)</title><rect x="0.4659%" y="133" width="0.0177%" height="15" fill="rgb(233,208,19)" fg:x="105" fg:w="4"/><text x="0.7159%" y="143.50"></text></g><g><title>TextInputUIMacHelper`__36-[TUINSCursorUIController activate:]_block_invoke.128 (4 samples, 0.02%)</title><rect x="0.4659%" y="117" width="0.0177%" height="15" fill="rgb(216,164,2)" fg:x="105" fg:w="4"/><text x="0.7159%" y="127.50"></text></g><g><title>TextInputUIMacHelper`-[TUINSWindow setRemoteViewController:] (3 samples, 0.01%)</title><rect x="0.4703%" y="101" width="0.0133%" height="15" fill="rgb(220,129,5)" fg:x="106" fg:w="3"/><text x="0.7203%" y="111.50"></text></g><g><title>AppKit`-[NSView addSubview:] (3 samples, 0.01%)</title><rect x="0.4703%" y="85" width="0.0133%" height="15" fill="rgb(242,17,10)" fg:x="106" fg:w="3"/><text x="0.7203%" y="95.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (7 samples, 0.03%)</title><rect x="0.4659%" y="181" width="0.0311%" height="15" fill="rgb(242,107,0)" fg:x="105" fg:w="7"/><text x="0.7159%" y="191.50"></text></g><g><title>CoreFoundation`__invoking___ (7 samples, 0.03%)</title><rect x="0.4659%" y="165" width="0.0311%" height="15" fill="rgb(251,28,31)" fg:x="105" fg:w="7"/><text x="0.7159%" y="175.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (25 samples, 0.11%)</title><rect x="0.3905%" y="261" width="0.1109%" height="15" fill="rgb(233,223,10)" fg:x="88" fg:w="25"/><text x="0.6405%" y="271.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (24 samples, 0.11%)</title><rect x="0.3949%" y="245" width="0.1065%" height="15" fill="rgb(215,21,27)" fg:x="89" fg:w="24"/><text x="0.6449%" y="255.50"></text></g><g><title>ViewBridge`deferredBlockOpportunity_block_invoke_2 (12 samples, 0.05%)</title><rect x="0.4481%" y="229" width="0.0532%" height="15" fill="rgb(232,23,21)" fg:x="101" fg:w="12"/><text x="0.6981%" y="239.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (12 samples, 0.05%)</title><rect x="0.4481%" y="213" width="0.0532%" height="15" fill="rgb(244,5,23)" fg:x="101" fg:w="12"/><text x="0.6981%" y="223.50"></text></g><g><title>ViewBridge`__deferNSXPCInvocationOntoMainThread_block_invoke (8 samples, 0.04%)</title><rect x="0.4659%" y="197" width="0.0355%" height="15" fill="rgb(226,81,46)" fg:x="105" fg:w="8"/><text x="0.7159%" y="207.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (3 samples, 0.01%)</title><rect x="0.5014%" y="165" width="0.0133%" height="15" fill="rgb(247,70,30)" fg:x="113" fg:w="3"/><text x="0.7514%" y="175.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (4 samples, 0.02%)</title><rect x="0.5014%" y="213" width="0.0177%" height="15" fill="rgb(212,68,19)" fg:x="113" fg:w="4"/><text x="0.7514%" y="223.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (4 samples, 0.02%)</title><rect x="0.5014%" y="197" width="0.0177%" height="15" fill="rgb(240,187,13)" fg:x="113" fg:w="4"/><text x="0.7514%" y="207.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.02%)</title><rect x="0.5014%" y="181" width="0.0177%" height="15" fill="rgb(223,113,26)" fg:x="113" fg:w="4"/><text x="0.7514%" y="191.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (7 samples, 0.03%)</title><rect x="0.5324%" y="133" width="0.0311%" height="15" fill="rgb(206,192,2)" fg:x="120" fg:w="7"/><text x="0.7824%" y="143.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (7 samples, 0.03%)</title><rect x="0.5324%" y="117" width="0.0311%" height="15" fill="rgb(241,108,4)" fg:x="120" fg:w="7"/><text x="0.7824%" y="127.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (7 samples, 0.03%)</title><rect x="0.5324%" y="101" width="0.0311%" height="15" fill="rgb(247,173,49)" fg:x="120" fg:w="7"/><text x="0.7824%" y="111.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (7 samples, 0.03%)</title><rect x="0.5324%" y="85" width="0.0311%" height="15" fill="rgb(224,114,35)" fg:x="120" fg:w="7"/><text x="0.7824%" y="95.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (5 samples, 0.02%)</title><rect x="0.5413%" y="69" width="0.0222%" height="15" fill="rgb(245,159,27)" fg:x="122" fg:w="5"/><text x="0.7913%" y="79.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (8 samples, 0.04%)</title><rect x="0.5324%" y="149" width="0.0355%" height="15" fill="rgb(245,172,44)" fg:x="120" fg:w="8"/><text x="0.7824%" y="159.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (11 samples, 0.05%)</title><rect x="0.5280%" y="165" width="0.0488%" height="15" fill="rgb(236,23,11)" fg:x="119" fg:w="11"/><text x="0.7780%" y="175.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (14 samples, 0.06%)</title><rect x="0.5236%" y="181" width="0.0621%" height="15" fill="rgb(205,117,38)" fg:x="118" fg:w="14"/><text x="0.7736%" y="191.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (3 samples, 0.01%)</title><rect x="0.5857%" y="133" width="0.0133%" height="15" fill="rgb(237,72,25)" fg:x="132" fg:w="3"/><text x="0.8357%" y="143.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (3 samples, 0.01%)</title><rect x="0.5857%" y="117" width="0.0133%" height="15" fill="rgb(244,70,9)" fg:x="132" fg:w="3"/><text x="0.8357%" y="127.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="0.5857%" y="101" width="0.0133%" height="15" fill="rgb(217,125,39)" fg:x="132" fg:w="3"/><text x="0.8357%" y="111.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="0.5857%" y="85" width="0.0133%" height="15" fill="rgb(235,36,10)" fg:x="132" fg:w="3"/><text x="0.8357%" y="95.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="0.5857%" y="69" width="0.0133%" height="15" fill="rgb(251,123,47)" fg:x="132" fg:w="3"/><text x="0.8357%" y="79.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="0.5857%" y="53" width="0.0133%" height="15" fill="rgb(221,13,13)" fg:x="132" fg:w="3"/><text x="0.8357%" y="63.50"></text></g><g><title>AppKit`-[NSView _updateVibrancy] (3 samples, 0.01%)</title><rect x="0.5857%" y="37" width="0.0133%" height="15" fill="rgb(238,131,9)" fg:x="132" fg:w="3"/><text x="0.8357%" y="47.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (7 samples, 0.03%)</title><rect x="0.5857%" y="181" width="0.0311%" height="15" fill="rgb(211,50,8)" fg:x="132" fg:w="7"/><text x="0.8357%" y="191.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (7 samples, 0.03%)</title><rect x="0.5857%" y="165" width="0.0311%" height="15" fill="rgb(245,182,24)" fg:x="132" fg:w="7"/><text x="0.8357%" y="175.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (7 samples, 0.03%)</title><rect x="0.5857%" y="149" width="0.0311%" height="15" fill="rgb(242,14,37)" fg:x="132" fg:w="7"/><text x="0.8357%" y="159.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (27 samples, 0.12%)</title><rect x="0.5014%" y="261" width="0.1198%" height="15" fill="rgb(246,228,12)" fg:x="113" fg:w="27"/><text x="0.7514%" y="271.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (27 samples, 0.12%)</title><rect x="0.5014%" y="245" width="0.1198%" height="15" fill="rgb(213,55,15)" fg:x="113" fg:w="27"/><text x="0.7514%" y="255.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (27 samples, 0.12%)</title><rect x="0.5014%" y="229" width="0.1198%" height="15" fill="rgb(209,9,3)" fg:x="113" fg:w="27"/><text x="0.7514%" y="239.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (23 samples, 0.10%)</title><rect x="0.5191%" y="213" width="0.1020%" height="15" fill="rgb(230,59,30)" fg:x="117" fg:w="23"/><text x="0.7691%" y="223.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (22 samples, 0.10%)</title><rect x="0.5236%" y="197" width="0.0976%" height="15" fill="rgb(209,121,21)" fg:x="118" fg:w="22"/><text x="0.7736%" y="207.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (57 samples, 0.25%)</title><rect x="0.3771%" y="293" width="0.2529%" height="15" fill="rgb(220,109,13)" fg:x="85" fg:w="57"/><text x="0.6271%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (56 samples, 0.25%)</title><rect x="0.3816%" y="277" width="0.2485%" height="15" fill="rgb(232,18,1)" fg:x="86" fg:w="56"/><text x="0.6316%" y="287.50"></text></g><g><title>AppKit`_DPSNextEvent (63 samples, 0.28%)</title><rect x="0.3638%" y="357" width="0.2795%" height="15" fill="rgb(215,41,42)" fg:x="82" fg:w="63"/><text x="0.6138%" y="367.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (60 samples, 0.27%)</title><rect x="0.3771%" y="341" width="0.2662%" height="15" fill="rgb(224,123,36)" fg:x="85" fg:w="60"/><text x="0.6271%" y="351.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (60 samples, 0.27%)</title><rect x="0.3771%" y="325" width="0.2662%" height="15" fill="rgb(240,125,3)" fg:x="85" fg:w="60"/><text x="0.6271%" y="335.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (60 samples, 0.27%)</title><rect x="0.3771%" y="309" width="0.2662%" height="15" fill="rgb(205,98,50)" fg:x="85" fg:w="60"/><text x="0.6271%" y="319.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (67 samples, 0.30%)</title><rect x="0.3594%" y="373" width="0.2973%" height="15" fill="rgb(205,185,37)" fg:x="81" fg:w="67"/><text x="0.6094%" y="383.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.6567%" y="325" width="0.0133%" height="15" fill="rgb(238,207,15)" fg:x="148" fg:w="3"/><text x="0.9067%" y="335.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (3 samples, 0.01%)</title><rect x="0.6567%" y="309" width="0.0133%" height="15" fill="rgb(213,199,42)" fg:x="148" fg:w="3"/><text x="0.9067%" y="319.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (3 samples, 0.01%)</title><rect x="0.6567%" y="293" width="0.0133%" height="15" fill="rgb(235,201,11)" fg:x="148" fg:w="3"/><text x="0.9067%" y="303.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (3 samples, 0.01%)</title><rect x="0.6567%" y="277" width="0.0133%" height="15" fill="rgb(207,46,11)" fg:x="148" fg:w="3"/><text x="0.9067%" y="287.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (4 samples, 0.02%)</title><rect x="0.6567%" y="341" width="0.0177%" height="15" fill="rgb(241,35,35)" fg:x="148" fg:w="4"/><text x="0.9067%" y="351.50"></text></g><g><title>AppKit`getServiceEntries (3 samples, 0.01%)</title><rect x="0.7010%" y="53" width="0.0133%" height="15" fill="rgb(243,32,47)" fg:x="158" fg:w="3"/><text x="0.9510%" y="63.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (5 samples, 0.02%)</title><rect x="0.6966%" y="213" width="0.0222%" height="15" fill="rgb(247,202,23)" fg:x="157" fg:w="5"/><text x="0.9466%" y="223.50"></text></g><g><title>AppKit`_populateMenu (5 samples, 0.02%)</title><rect x="0.6966%" y="197" width="0.0222%" height="15" fill="rgb(219,102,11)" fg:x="157" fg:w="5"/><text x="0.9466%" y="207.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:incomplete:] (5 samples, 0.02%)</title><rect x="0.6966%" y="181" width="0.0222%" height="15" fill="rgb(243,110,44)" fg:x="157" fg:w="5"/><text x="0.9466%" y="191.50"></text></g><g><title>AppKit`-[NSMenu _withUpdateFlags:do:] (5 samples, 0.02%)</title><rect x="0.6966%" y="165" width="0.0222%" height="15" fill="rgb(222,74,54)" fg:x="157" fg:w="5"/><text x="0.9466%" y="175.50"></text></g><g><title>AppKit`__49-[NSMenu _populateWithFlags:eventRef:incomplete:]_block_invoke (5 samples, 0.02%)</title><rect x="0.6966%" y="149" width="0.0222%" height="15" fill="rgb(216,99,12)" fg:x="157" fg:w="5"/><text x="0.9466%" y="159.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (5 samples, 0.02%)</title><rect x="0.6966%" y="133" width="0.0222%" height="15" fill="rgb(226,22,26)" fg:x="157" fg:w="5"/><text x="0.9466%" y="143.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (5 samples, 0.02%)</title><rect x="0.6966%" y="117" width="0.0222%" height="15" fill="rgb(217,163,10)" fg:x="157" fg:w="5"/><text x="0.9466%" y="127.50"></text></g><g><title>AppKit`-[_NSServicesPrincipalMenuUpdater updateMenu:withEvent:withFlags:] (5 samples, 0.02%)</title><rect x="0.6966%" y="101" width="0.0222%" height="15" fill="rgb(213,25,53)" fg:x="157" fg:w="5"/><text x="0.9466%" y="111.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] (5 samples, 0.02%)</title><rect x="0.6966%" y="85" width="0.0222%" height="15" fill="rgb(252,105,26)" fg:x="157" fg:w="5"/><text x="0.9466%" y="95.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] (4 samples, 0.02%)</title><rect x="0.7010%" y="69" width="0.0177%" height="15" fill="rgb(220,39,43)" fg:x="158" fg:w="4"/><text x="0.9510%" y="79.50"></text></g><g><title>AppKit`routeKeyEquivalent (11 samples, 0.05%)</title><rect x="0.6966%" y="341" width="0.0488%" height="15" fill="rgb(229,68,48)" fg:x="157" fg:w="11"/><text x="0.9466%" y="351.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (11 samples, 0.05%)</title><rect x="0.6966%" y="325" width="0.0488%" height="15" fill="rgb(252,8,32)" fg:x="157" fg:w="11"/><text x="0.9466%" y="335.50"></text></g><g><title>AppKit`_NSFindMenuItemMatchingCommandKeyEvent (11 samples, 0.05%)</title><rect x="0.6966%" y="309" width="0.0488%" height="15" fill="rgb(223,20,43)" fg:x="157" fg:w="11"/><text x="0.9466%" y="319.50"></text></g><g><title>AppKit`_NSWrappedSearchReturn (11 samples, 0.05%)</title><rect x="0.6966%" y="293" width="0.0488%" height="15" fill="rgb(229,81,49)" fg:x="157" fg:w="11"/><text x="0.9466%" y="303.50"></text></g><g><title>AppKit`+[NSCocoaMenuImpl(KeyEvents) _menuItemWithKeyEquivalentMatchingEvent:inMenu:includingDisabledItems:] (11 samples, 0.05%)</title><rect x="0.6966%" y="277" width="0.0488%" height="15" fill="rgb(236,28,36)" fg:x="157" fg:w="11"/><text x="0.9466%" y="287.50"></text></g><g><title>AppKit`NSIsMenuKeyEvent (11 samples, 0.05%)</title><rect x="0.6966%" y="261" width="0.0488%" height="15" fill="rgb(249,185,26)" fg:x="157" fg:w="11"/><text x="0.9466%" y="271.50"></text></g><g><title>AppKit`_checkMenusForKeyEvent (11 samples, 0.05%)</title><rect x="0.6966%" y="245" width="0.0488%" height="15" fill="rgb(249,174,33)" fg:x="157" fg:w="11"/><text x="0.9466%" y="255.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (11 samples, 0.05%)</title><rect x="0.6966%" y="229" width="0.0488%" height="15" fill="rgb(233,201,37)" fg:x="157" fg:w="11"/><text x="0.9466%" y="239.50"></text></g><g><title>AppKit`_populateMenu (6 samples, 0.03%)</title><rect x="0.7188%" y="213" width="0.0266%" height="15" fill="rgb(221,78,26)" fg:x="162" fg:w="6"/><text x="0.9688%" y="223.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:incomplete:] (6 samples, 0.03%)</title><rect x="0.7188%" y="197" width="0.0266%" height="15" fill="rgb(250,127,30)" fg:x="162" fg:w="6"/><text x="0.9688%" y="207.50"></text></g><g><title>AppKit`-[NSMenu _withUpdateFlags:do:] (6 samples, 0.03%)</title><rect x="0.7188%" y="181" width="0.0266%" height="15" fill="rgb(230,49,44)" fg:x="162" fg:w="6"/><text x="0.9688%" y="191.50"></text></g><g><title>AppKit`__49-[NSMenu _populateWithFlags:eventRef:incomplete:]_block_invoke (6 samples, 0.03%)</title><rect x="0.7188%" y="165" width="0.0266%" height="15" fill="rgb(229,67,23)" fg:x="162" fg:w="6"/><text x="0.9688%" y="175.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (6 samples, 0.03%)</title><rect x="0.7188%" y="149" width="0.0266%" height="15" fill="rgb(249,83,47)" fg:x="162" fg:w="6"/><text x="0.9688%" y="159.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (6 samples, 0.03%)</title><rect x="0.7188%" y="133" width="0.0266%" height="15" fill="rgb(215,43,3)" fg:x="162" fg:w="6"/><text x="0.9688%" y="143.50"></text></g><g><title>AppKit`-[NSMenu _populateFromSidebandUpdatersOfSign:] (6 samples, 0.03%)</title><rect x="0.7188%" y="117" width="0.0266%" height="15" fill="rgb(238,154,13)" fg:x="162" fg:w="6"/><text x="0.9688%" y="127.50"></text></g><g><title>AppKit`-[NSMenu _performSidebandUpdatersPassingTest:] (6 samples, 0.03%)</title><rect x="0.7188%" y="101" width="0.0266%" height="15" fill="rgb(219,56,2)" fg:x="162" fg:w="6"/><text x="0.9688%" y="111.50"></text></g><g><title>AppKit`-[NSMenu _forEachCachedSidebandUpdaterDo:] (6 samples, 0.03%)</title><rect x="0.7188%" y="85" width="0.0266%" height="15" fill="rgb(233,0,4)" fg:x="162" fg:w="6"/><text x="0.9688%" y="95.50"></text></g><g><title>AppKit`__46-[NSMenu _performSidebandUpdatersPassingTest:]_block_invoke (6 samples, 0.03%)</title><rect x="0.7188%" y="69" width="0.0266%" height="15" fill="rgb(235,30,7)" fg:x="162" fg:w="6"/><text x="0.9688%" y="79.50"></text></g><g><title>AppKit`__47-[NSApplication(NSWindowsMenu) setWindowsMenu:]_block_invoke (6 samples, 0.03%)</title><rect x="0.7188%" y="53" width="0.0266%" height="15" fill="rgb(250,79,13)" fg:x="162" fg:w="6"/><text x="0.9688%" y="63.50"></text></g><g><title>AppKit`_NSWindowMenuAddDefaultSidecarItems (5 samples, 0.02%)</title><rect x="0.7232%" y="37" width="0.0222%" height="15" fill="rgb(211,146,34)" fg:x="163" fg:w="5"/><text x="0.9732%" y="47.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEvents (89 samples, 0.39%)</title><rect x="0.3594%" y="405" width="0.3949%" height="15" fill="rgb(228,22,38)" fg:x="81" fg:w="89"/><text x="0.6094%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEventsUntilDate (89 samples, 0.39%)</title><rect x="0.3594%" y="389" width="0.3949%" height="15" fill="rgb(235,168,5)" fg:x="81" fg:w="89"/><text x="0.6094%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (22 samples, 0.10%)</title><rect x="0.6567%" y="373" width="0.0976%" height="15" fill="rgb(221,155,16)" fg:x="148" fg:w="22"/><text x="0.9067%" y="383.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (22 samples, 0.10%)</title><rect x="0.6567%" y="357" width="0.0976%" height="15" fill="rgb(215,215,53)" fg:x="148" fg:w="22"/><text x="0.9067%" y="367.50"></text></g><g><title>community_sim`community_sim::graphics::input::collect_input_events (90 samples, 0.40%)</title><rect x="0.3594%" y="469" width="0.3993%" height="15" fill="rgb(223,4,10)" fg:x="81" fg:w="90"/><text x="0.6094%" y="479.50"></text></g><g><title>community_sim`&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.40%)</title><rect x="0.3594%" y="453" width="0.3993%" height="15" fill="rgb(234,103,6)" fg:x="81" fg:w="90"/><text x="0.6094%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_WaitEventTimeout_REAL (90 samples, 0.40%)</title><rect x="0.3594%" y="437" width="0.3993%" height="15" fill="rgb(227,97,0)" fg:x="81" fg:w="90"/><text x="0.6094%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_PumpEventsInternal (90 samples, 0.40%)</title><rect x="0.3594%" y="421" width="0.3993%" height="15" fill="rgb(234,150,53)" fg:x="81" fg:w="90"/><text x="0.6094%" y="431.50"></text></g><g><title>community_sim`community_sim::graphics::input_systems::process_input_intents (3 samples, 0.01%)</title><rect x="0.7587%" y="469" width="0.0133%" height="15" fill="rgb(228,201,54)" fg:x="171" fg:w="3"/><text x="1.0087%" y="479.50"></text></g><g><title>community_sim`std::sys::backtrace::lock (3 samples, 0.01%)</title><rect x="0.7587%" y="453" width="0.0133%" height="15" fill="rgb(222,22,37)" fg:x="171" fg:w="3"/><text x="1.0087%" y="463.50"></text></g><g><title>community_sim`std::alloc::rust_oom (3 samples, 0.01%)</title><rect x="0.7587%" y="437" width="0.0133%" height="15" fill="rgb(237,53,32)" fg:x="171" fg:w="3"/><text x="1.0087%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.01%)</title><rect x="0.7587%" y="421" width="0.0133%" height="15" fill="rgb(233,25,53)" fg:x="171" fg:w="3"/><text x="1.0087%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (3 samples, 0.01%)</title><rect x="0.7853%" y="453" width="0.0133%" height="15" fill="rgb(210,40,34)" fg:x="177" fg:w="3"/><text x="1.0353%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (3 samples, 0.01%)</title><rect x="0.7853%" y="437" width="0.0133%" height="15" fill="rgb(241,220,44)" fg:x="177" fg:w="3"/><text x="1.0353%" y="447.50"></text></g><g><title>community_sim`community_sim::graphics::render::agent_system::agent_render (7 samples, 0.03%)</title><rect x="0.7720%" y="469" width="0.0311%" height="15" fill="rgb(235,28,35)" fg:x="174" fg:w="7"/><text x="1.0220%" y="479.50"></text></g><g><title>community_sim`community_sim::graphics::render::food_system::food_render (5 samples, 0.02%)</title><rect x="0.8031%" y="469" width="0.0222%" height="15" fill="rgb(210,56,17)" fg:x="181" fg:w="5"/><text x="1.0531%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRect_REAL (5 samples, 0.02%)</title><rect x="0.8031%" y="453" width="0.0222%" height="15" fill="rgb(224,130,29)" fg:x="181" fg:w="5"/><text x="1.0531%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRectF_REAL (5 samples, 0.02%)</title><rect x="0.8031%" y="437" width="0.0222%" height="15" fill="rgb(235,212,8)" fg:x="181" fg:w="5"/><text x="1.0531%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawLinesF_REAL (5 samples, 0.02%)</title><rect x="0.8031%" y="421" width="0.0222%" height="15" fill="rgb(223,33,50)" fg:x="181" fg:w="5"/><text x="1.0531%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`RenderDrawLinesWithRectsF (5 samples, 0.02%)</title><rect x="0.8031%" y="405" width="0.0222%" height="15" fill="rgb(219,149,13)" fg:x="181" fg:w="5"/><text x="1.0531%" y="415.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (3 samples, 0.01%)</title><rect x="0.8386%" y="357" width="0.0133%" height="15" fill="rgb(250,156,29)" fg:x="189" fg:w="3"/><text x="1.0886%" y="367.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="0.8386%" y="341" width="0.0133%" height="15" fill="rgb(216,193,19)" fg:x="189" fg:w="3"/><text x="1.0886%" y="351.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="0.8386%" y="325" width="0.0133%" height="15" fill="rgb(216,135,14)" fg:x="189" fg:w="3"/><text x="1.0886%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="0.8386%" y="309" width="0.0133%" height="15" fill="rgb(241,47,5)" fg:x="189" fg:w="3"/><text x="1.0886%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.02%)</title><rect x="0.8386%" y="373" width="0.0177%" height="15" fill="rgb(233,42,35)" fg:x="189" fg:w="4"/><text x="1.0886%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (5 samples, 0.02%)</title><rect x="0.8386%" y="389" width="0.0222%" height="15" fill="rgb(231,13,6)" fg:x="189" fg:w="5"/><text x="1.0886%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTexture_REAL (7 samples, 0.03%)</title><rect x="0.8341%" y="437" width="0.0311%" height="15" fill="rgb(207,181,40)" fg:x="188" fg:w="7"/><text x="1.0841%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_CreateTexture (7 samples, 0.03%)</title><rect x="0.8341%" y="421" width="0.0311%" height="15" fill="rgb(254,173,49)" fg:x="188" fg:w="7"/><text x="1.0841%" y="431.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (7 samples, 0.03%)</title><rect x="0.8341%" y="405" width="0.0311%" height="15" fill="rgb(221,1,38)" fg:x="188" fg:w="7"/><text x="1.0841%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTextureFromSurface_REAL (8 samples, 0.04%)</title><rect x="0.8341%" y="453" width="0.0355%" height="15" fill="rgb(206,124,46)" fg:x="188" fg:w="8"/><text x="1.0841%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (6 samples, 0.03%)</title><rect x="0.8696%" y="453" width="0.0266%" height="15" fill="rgb(249,21,11)" fg:x="196" fg:w="6"/><text x="1.1196%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (6 samples, 0.03%)</title><rect x="0.8696%" y="437" width="0.0266%" height="15" fill="rgb(222,201,40)" fg:x="196" fg:w="6"/><text x="1.1196%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (6 samples, 0.03%)</title><rect x="0.8696%" y="421" width="0.0266%" height="15" fill="rgb(235,61,29)" fg:x="196" fg:w="6"/><text x="1.1196%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (4 samples, 0.02%)</title><rect x="0.8785%" y="405" width="0.0177%" height="15" fill="rgb(219,207,3)" fg:x="198" fg:w="4"/><text x="1.1285%" y="415.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (3 samples, 0.01%)</title><rect x="0.8830%" y="389" width="0.0133%" height="15" fill="rgb(222,56,46)" fg:x="199" fg:w="3"/><text x="1.1330%" y="399.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (3 samples, 0.01%)</title><rect x="0.8830%" y="373" width="0.0133%" height="15" fill="rgb(239,76,54)" fg:x="199" fg:w="3"/><text x="1.1330%" y="383.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_event_log_window (19 samples, 0.08%)</title><rect x="0.8253%" y="469" width="0.0843%" height="15" fill="rgb(231,124,27)" fg:x="186" fg:w="19"/><text x="1.0753%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (4 samples, 0.02%)</title><rect x="0.9229%" y="453" width="0.0177%" height="15" fill="rgb(249,195,6)" fg:x="208" fg:w="4"/><text x="1.1729%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (4 samples, 0.02%)</title><rect x="0.9229%" y="437" width="0.0177%" height="15" fill="rgb(237,174,47)" fg:x="208" fg:w="4"/><text x="1.1729%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SW_RunCommandQueue (4 samples, 0.02%)</title><rect x="0.9229%" y="421" width="0.0177%" height="15" fill="rgb(206,201,31)" fg:x="208" fg:w="4"/><text x="1.1729%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_FillRect4 (4 samples, 0.02%)</title><rect x="0.9229%" y="405" width="0.0177%" height="15" fill="rgb(231,57,52)" fg:x="208" fg:w="4"/><text x="1.1729%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (6 samples, 0.03%)</title><rect x="0.9451%" y="405" width="0.0266%" height="15" fill="rgb(248,177,22)" fg:x="213" fg:w="6"/><text x="1.1951%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (6 samples, 0.03%)</title><rect x="0.9451%" y="389" width="0.0266%" height="15" fill="rgb(215,211,37)" fg:x="213" fg:w="6"/><text x="1.1951%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (6 samples, 0.03%)</title><rect x="0.9451%" y="373" width="0.0266%" height="15" fill="rgb(241,128,51)" fg:x="213" fg:w="6"/><text x="1.1951%" y="383.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (4 samples, 0.02%)</title><rect x="0.9539%" y="357" width="0.0177%" height="15" fill="rgb(227,165,31)" fg:x="215" fg:w="4"/><text x="1.2039%" y="367.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (4 samples, 0.02%)</title><rect x="0.9539%" y="341" width="0.0177%" height="15" fill="rgb(228,167,24)" fg:x="215" fg:w="4"/><text x="1.2039%" y="351.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (3 samples, 0.01%)</title><rect x="0.9584%" y="325" width="0.0133%" height="15" fill="rgb(228,143,12)" fg:x="216" fg:w="3"/><text x="1.2084%" y="335.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (3 samples, 0.01%)</title><rect x="0.9584%" y="309" width="0.0133%" height="15" fill="rgb(249,149,8)" fg:x="216" fg:w="3"/><text x="1.2084%" y="319.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (8 samples, 0.04%)</title><rect x="0.9806%" y="325" width="0.0355%" height="15" fill="rgb(243,35,44)" fg:x="221" fg:w="8"/><text x="1.2306%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (11 samples, 0.05%)</title><rect x="0.9806%" y="357" width="0.0488%" height="15" fill="rgb(246,89,9)" fg:x="221" fg:w="11"/><text x="1.2306%" y="367.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (11 samples, 0.05%)</title><rect x="0.9806%" y="341" width="0.0488%" height="15" fill="rgb(233,213,13)" fg:x="221" fg:w="11"/><text x="1.2306%" y="351.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (3 samples, 0.01%)</title><rect x="1.0161%" y="325" width="0.0133%" height="15" fill="rgb(233,141,41)" fg:x="229" fg:w="3"/><text x="1.2661%" y="335.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_stats_window (34 samples, 0.15%)</title><rect x="0.9096%" y="469" width="0.1509%" height="15" fill="rgb(239,167,4)" fg:x="205" fg:w="34"/><text x="1.1596%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (26 samples, 0.12%)</title><rect x="0.9451%" y="453" width="0.1154%" height="15" fill="rgb(209,217,16)" fg:x="213" fg:w="26"/><text x="1.1951%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (26 samples, 0.12%)</title><rect x="0.9451%" y="437" width="0.1154%" height="15" fill="rgb(219,88,35)" fg:x="213" fg:w="26"/><text x="1.1951%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (26 samples, 0.12%)</title><rect x="0.9451%" y="421" width="0.1154%" height="15" fill="rgb(220,193,23)" fg:x="213" fg:w="26"/><text x="1.1951%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (20 samples, 0.09%)</title><rect x="0.9717%" y="405" width="0.0887%" height="15" fill="rgb(230,90,52)" fg:x="219" fg:w="20"/><text x="1.2217%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (20 samples, 0.09%)</title><rect x="0.9717%" y="389" width="0.0887%" height="15" fill="rgb(252,106,19)" fg:x="219" fg:w="20"/><text x="1.2217%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (20 samples, 0.09%)</title><rect x="0.9717%" y="373" width="0.0887%" height="15" fill="rgb(206,74,20)" fg:x="219" fg:w="20"/><text x="1.2217%" y="383.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (7 samples, 0.03%)</title><rect x="1.0294%" y="357" width="0.0311%" height="15" fill="rgb(230,138,44)" fg:x="232" fg:w="7"/><text x="1.2794%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (6 samples, 0.03%)</title><rect x="1.0338%" y="341" width="0.0266%" height="15" fill="rgb(235,182,43)" fg:x="233" fg:w="6"/><text x="1.2838%" y="351.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (6 samples, 0.03%)</title><rect x="1.0338%" y="325" width="0.0266%" height="15" fill="rgb(242,16,51)" fg:x="233" fg:w="6"/><text x="1.2838%" y="335.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (6 samples, 0.03%)</title><rect x="1.0338%" y="309" width="0.0266%" height="15" fill="rgb(248,9,4)" fg:x="233" fg:w="6"/><text x="1.2838%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.03%)</title><rect x="1.0338%" y="293" width="0.0266%" height="15" fill="rgb(210,31,22)" fg:x="233" fg:w="6"/><text x="1.2838%" y="303.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.03%)</title><rect x="1.0338%" y="277" width="0.0266%" height="15" fill="rgb(239,54,39)" fg:x="233" fg:w="6"/><text x="1.2838%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.03%)</title><rect x="1.0338%" y="261" width="0.0266%" height="15" fill="rgb(230,99,41)" fg:x="233" fg:w="6"/><text x="1.2838%" y="271.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (10 samples, 0.04%)</title><rect x="1.3710%" y="437" width="0.0444%" height="15" fill="rgb(253,106,12)" fg:x="309" fg:w="10"/><text x="1.6210%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (38 samples, 0.17%)</title><rect x="1.7837%" y="421" width="0.1686%" height="15" fill="rgb(213,46,41)" fg:x="402" fg:w="38"/><text x="2.0337%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (26 samples, 0.12%)</title><rect x="1.9523%" y="421" width="0.1154%" height="15" fill="rgb(215,133,35)" fg:x="440" fg:w="26"/><text x="2.2023%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (7 samples, 0.03%)</title><rect x="2.4181%" y="405" width="0.0311%" height="15" fill="rgb(213,28,5)" fg:x="545" fg:w="7"/><text x="2.6681%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (218 samples, 0.97%)</title><rect x="2.4492%" y="405" width="0.9673%" height="15" fill="rgb(215,77,49)" fg:x="552" fg:w="218"/><text x="2.6992%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (36 samples, 0.16%)</title><rect x="3.2567%" y="389" width="0.1597%" height="15" fill="rgb(248,100,22)" fg:x="734" fg:w="36"/><text x="3.5067%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_calloc_REAL (8 samples, 0.04%)</title><rect x="3.6782%" y="373" width="0.0355%" height="15" fill="rgb(208,67,9)" fg:x="829" fg:w="8"/><text x="3.9282%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (8 samples, 0.04%)</title><rect x="3.6782%" y="357" width="0.0355%" height="15" fill="rgb(219,133,21)" fg:x="829" fg:w="8"/><text x="3.9282%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (6 samples, 0.03%)</title><rect x="3.6871%" y="341" width="0.0266%" height="15" fill="rgb(246,46,29)" fg:x="831" fg:w="6"/><text x="3.9371%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.02%)</title><rect x="3.6915%" y="325" width="0.0222%" height="15" fill="rgb(246,185,52)" fg:x="832" fg:w="5"/><text x="3.9415%" y="335.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (31 samples, 0.14%)</title><rect x="3.5851%" y="389" width="0.1375%" height="15" fill="rgb(252,136,11)" fg:x="808" fg:w="31"/><text x="3.8351%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (70 samples, 0.31%)</title><rect x="3.4165%" y="405" width="0.3106%" height="15" fill="rgb(219,138,53)" fg:x="770" fg:w="70"/><text x="3.6665%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (386 samples, 1.71%)</title><rect x="2.0676%" y="421" width="1.7127%" height="15" fill="rgb(211,51,23)" fg:x="466" fg:w="386"/><text x="2.3176%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (12 samples, 0.05%)</title><rect x="3.7270%" y="405" width="0.0532%" height="15" fill="rgb(247,221,28)" fg:x="840" fg:w="12"/><text x="3.9770%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (601 samples, 2.67%)</title><rect x="1.4154%" y="437" width="2.6666%" height="15" fill="rgb(251,222,45)" fg:x="319" fg:w="601"/><text x="1.6654%" y="447.50">li..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (68 samples, 0.30%)</title><rect x="3.7803%" y="421" width="0.3017%" height="15" fill="rgb(217,162,53)" fg:x="852" fg:w="68"/><text x="4.0303%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (693 samples, 3.07%)</title><rect x="1.2157%" y="453" width="3.0748%" height="15" fill="rgb(229,93,14)" fg:x="274" fg:w="693"/><text x="1.4657%" y="463.50">lib..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (47 samples, 0.21%)</title><rect x="4.0820%" y="437" width="0.2085%" height="15" fill="rgb(209,67,49)" fg:x="920" fg:w="47"/><text x="4.3320%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (9 samples, 0.04%)</title><rect x="4.2905%" y="453" width="0.0399%" height="15" fill="rgb(213,87,29)" fg:x="967" fg:w="9"/><text x="4.5405%" y="463.50"></text></g><g><title>community_sim`community_sim::graphics::render::terrain::draw_terrain (754 samples, 3.35%)</title><rect x="1.0604%" y="469" width="3.3455%" height="15" fill="rgb(205,151,52)" fg:x="239" fg:w="754"/><text x="1.3104%" y="479.50">com..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor_REAL (17 samples, 0.08%)</title><rect x="4.3305%" y="453" width="0.0754%" height="15" fill="rgb(253,215,39)" fg:x="976" fg:w="17"/><text x="4.5805%" y="463.50"></text></g><g><title>community_sim`legion::internals::systems::schedule::Schedule::execute (5 samples, 0.02%)</title><rect x="4.4059%" y="469" width="0.0222%" height="15" fill="rgb(221,220,41)" fg:x="993" fg:w="5"/><text x="4.6559%" y="479.50"></text></g><g><title>community_sim`rayon_core::registry::in_worker (5 samples, 0.02%)</title><rect x="4.4059%" y="453" width="0.0222%" height="15" fill="rgb(218,133,21)" fg:x="993" fg:w="5"/><text x="4.6559%" y="463.50"></text></g><g><title>community_sim`std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="4.4103%" y="437" width="0.0177%" height="15" fill="rgb(221,193,43)" fg:x="994" fg:w="4"/><text x="4.6603%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect (3 samples, 0.01%)</title><rect x="4.4281%" y="469" width="0.0133%" height="15" fill="rgb(240,128,52)" fg:x="998" fg:w="3"/><text x="4.6781%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (4 samples, 0.02%)</title><rect x="4.4414%" y="469" width="0.0177%" height="15" fill="rgb(253,114,12)" fg:x="1001" fg:w="4"/><text x="4.6914%" y="479.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (53 samples, 0.24%)</title><rect x="4.4636%" y="437" width="0.2352%" height="15" fill="rgb(215,223,47)" fg:x="1006" fg:w="53"/><text x="4.7136%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (16 samples, 0.07%)</title><rect x="4.6987%" y="437" width="0.0710%" height="15" fill="rgb(248,225,23)" fg:x="1059" fg:w="16"/><text x="4.9487%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (6 samples, 0.03%)</title><rect x="4.7697%" y="437" width="0.0266%" height="15" fill="rgb(250,108,0)" fg:x="1075" fg:w="6"/><text x="5.0197%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (8 samples, 0.04%)</title><rect x="4.7963%" y="437" width="0.0355%" height="15" fill="rgb(228,208,7)" fg:x="1081" fg:w="8"/><text x="5.0463%" y="447.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (3 samples, 0.01%)</title><rect x="4.9960%" y="421" width="0.0133%" height="15" fill="rgb(244,45,10)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="431.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (3 samples, 0.01%)</title><rect x="4.9960%" y="405" width="0.0133%" height="15" fill="rgb(207,125,25)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (3 samples, 0.01%)</title><rect x="4.9960%" y="389" width="0.0133%" height="15" fill="rgb(210,195,18)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:gpuTag:args:argsSize:deallocator:] (3 samples, 0.01%)</title><rect x="4.9960%" y="373" width="0.0133%" height="15" fill="rgb(249,80,12)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (3 samples, 0.01%)</title><rect x="4.9960%" y="357" width="0.0133%" height="15" fill="rgb(221,65,9)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="367.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (3 samples, 0.01%)</title><rect x="4.9960%" y="341" width="0.0133%" height="15" fill="rgb(235,49,36)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="351.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="4.9960%" y="325" width="0.0133%" height="15" fill="rgb(225,32,20)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="335.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="4.9960%" y="309" width="0.0133%" height="15" fill="rgb(215,141,46)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="4.9960%" y="293" width="0.0133%" height="15" fill="rgb(250,160,47)" fg:x="1126" fg:w="3"/><text x="5.2460%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.04%)</title><rect x="6.9083%" y="341" width="0.0355%" height="15" fill="rgb(216,222,40)" fg:x="1557" fg:w="8"/><text x="7.1583%" y="351.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (8 samples, 0.04%)</title><rect x="6.9083%" y="325" width="0.0355%" height="15" fill="rgb(234,217,39)" fg:x="1557" fg:w="8"/><text x="7.1583%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (8 samples, 0.04%)</title><rect x="6.9083%" y="309" width="0.0355%" height="15" fill="rgb(207,178,40)" fg:x="1557" fg:w="8"/><text x="7.1583%" y="319.50"></text></g><g><title>IOKit`io_connect_method (8 samples, 0.04%)</title><rect x="6.9083%" y="293" width="0.0355%" height="15" fill="rgb(221,136,13)" fg:x="1557" fg:w="8"/><text x="7.1583%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.04%)</title><rect x="6.9083%" y="277" width="0.0355%" height="15" fill="rgb(249,199,10)" fg:x="1557" fg:w="8"/><text x="7.1583%" y="287.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (13 samples, 0.06%)</title><rect x="6.9083%" y="357" width="0.0577%" height="15" fill="rgb(249,222,13)" fg:x="1557" fg:w="13"/><text x="7.1583%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (5 samples, 0.02%)</title><rect x="6.9438%" y="341" width="0.0222%" height="15" fill="rgb(244,185,38)" fg:x="1565" fg:w="5"/><text x="7.1938%" y="351.50"></text></g><g><title>IOKit`iokit_user_client_trap (5 samples, 0.02%)</title><rect x="6.9438%" y="325" width="0.0222%" height="15" fill="rgb(236,202,9)" fg:x="1565" fg:w="5"/><text x="7.1938%" y="335.50"></text></g><g><title>AGXMetalG13X`AGX::DataBufferAllocator&lt;34ul&gt;::grow (15 samples, 0.07%)</title><rect x="6.9083%" y="389" width="0.0666%" height="15" fill="rgb(250,229,37)" fg:x="1557" fg:w="15"/><text x="7.1583%" y="399.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (15 samples, 0.07%)</title><rect x="6.9083%" y="373" width="0.0666%" height="15" fill="rgb(206,174,23)" fg:x="1557" fg:w="15"/><text x="7.1583%" y="383.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (328 samples, 1.46%)</title><rect x="6.9749%" y="389" width="1.4553%" height="15" fill="rgb(211,33,43)" fg:x="1572" fg:w="328"/><text x="7.2249%" y="399.50"></text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (103 samples, 0.46%)</title><rect x="7.9732%" y="373" width="0.4570%" height="15" fill="rgb(245,58,50)" fg:x="1797" fg:w="103"/><text x="8.2232%" y="383.50"></text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (7 samples, 0.03%)</title><rect x="8.4302%" y="389" width="0.0311%" height="15" fill="rgb(244,68,36)" fg:x="1900" fg:w="7"/><text x="8.6802%" y="399.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (705 samples, 3.13%)</title><rect x="5.3377%" y="405" width="3.1281%" height="15" fill="rgb(232,229,15)" fg:x="1203" fg:w="705"/><text x="5.5877%" y="415.50">AGX..</text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (6 samples, 0.03%)</title><rect x="8.4657%" y="405" width="0.0266%" height="15" fill="rgb(254,30,23)" fg:x="1908" fg:w="6"/><text x="8.7157%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (993 samples, 4.41%)</title><rect x="5.0093%" y="421" width="4.4059%" height="15" fill="rgb(235,160,14)" fg:x="1129" fg:w="993"/><text x="5.2593%" y="431.50">AGXMe..</text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::RenderDirtyBits (208 samples, 0.92%)</title><rect x="8.4923%" y="405" width="0.9229%" height="15" fill="rgb(212,155,44)" fg:x="1914" fg:w="208"/><text x="8.7423%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext setVertexBufferOffset:atIndex:] (86 samples, 0.38%)</title><rect x="9.4152%" y="421" width="0.3816%" height="15" fill="rgb(226,2,50)" fg:x="2122" fg:w="86"/><text x="9.6652%" y="431.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (5 samples, 0.02%)</title><rect x="9.7968%" y="421" width="0.0222%" height="15" fill="rgb(234,177,6)" fg:x="2208" fg:w="5"/><text x="10.0468%" y="431.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeISPPrimitiveType (78 samples, 0.35%)</title><rect x="9.8190%" y="421" width="0.3461%" height="15" fill="rgb(217,24,9)" fg:x="2213" fg:w="78"/><text x="10.0690%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData activepipelines] (19 samples, 0.08%)</title><rect x="10.1651%" y="421" width="0.0843%" height="15" fill="rgb(220,13,46)" fg:x="2291" fg:w="19"/><text x="10.4151%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (10 samples, 0.04%)</title><rect x="10.2494%" y="421" width="0.0444%" height="15" fill="rgb(239,221,27)" fg:x="2310" fg:w="10"/><text x="10.4994%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (39 samples, 0.17%)</title><rect x="10.2937%" y="421" width="0.1730%" height="15" fill="rgb(222,198,25)" fg:x="2320" fg:w="39"/><text x="10.5437%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (52 samples, 0.23%)</title><rect x="10.4668%" y="421" width="0.2307%" height="15" fill="rgb(211,99,13)" fg:x="2359" fg:w="52"/><text x="10.7168%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (7 samples, 0.03%)</title><rect x="10.6975%" y="421" width="0.0311%" height="15" fill="rgb(232,111,31)" fg:x="2411" fg:w="7"/><text x="10.9475%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (19 samples, 0.08%)</title><rect x="10.7285%" y="421" width="0.0843%" height="15" fill="rgb(245,82,37)" fg:x="2418" fg:w="19"/><text x="10.9785%" y="431.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (4 samples, 0.02%)</title><rect x="10.7951%" y="405" width="0.0177%" height="15" fill="rgb(227,149,46)" fg:x="2433" fg:w="4"/><text x="11.0451%" y="415.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (4 samples, 0.02%)</title><rect x="10.7951%" y="389" width="0.0177%" height="15" fill="rgb(218,36,50)" fg:x="2433" fg:w="4"/><text x="11.0451%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (7 samples, 0.03%)</title><rect x="11.2699%" y="405" width="0.0311%" height="15" fill="rgb(226,80,48)" fg:x="2540" fg:w="7"/><text x="11.5199%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (24 samples, 0.11%)</title><rect x="11.3009%" y="405" width="0.1065%" height="15" fill="rgb(238,224,15)" fg:x="2547" fg:w="24"/><text x="11.5509%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (18 samples, 0.08%)</title><rect x="11.4074%" y="405" width="0.0799%" height="15" fill="rgb(241,136,10)" fg:x="2571" fg:w="18"/><text x="11.6574%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (11 samples, 0.05%)</title><rect x="11.4873%" y="405" width="0.0488%" height="15" fill="rgb(208,32,45)" fg:x="2589" fg:w="11"/><text x="11.7373%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (67 samples, 0.30%)</title><rect x="11.5361%" y="405" width="0.2973%" height="15" fill="rgb(207,135,9)" fg:x="2600" fg:w="67"/><text x="11.7861%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (47 samples, 0.21%)</title><rect x="11.6248%" y="389" width="0.2085%" height="15" fill="rgb(206,86,44)" fg:x="2620" fg:w="47"/><text x="11.8748%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (7 samples, 0.03%)</title><rect x="11.8333%" y="405" width="0.0311%" height="15" fill="rgb(245,177,15)" fg:x="2667" fg:w="7"/><text x="12.0833%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.06%)</title><rect x="11.8644%" y="405" width="0.0621%" height="15" fill="rgb(206,64,50)" fg:x="2674" fg:w="14"/><text x="12.1144%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_release (109 samples, 0.48%)</title><rect x="11.9265%" y="405" width="0.4836%" height="15" fill="rgb(234,36,40)" fg:x="2688" fg:w="109"/><text x="12.1765%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_retain (67 samples, 0.30%)</title><rect x="12.4102%" y="405" width="0.2973%" height="15" fill="rgb(213,64,8)" fg:x="2797" fg:w="67"/><text x="12.6602%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (508 samples, 2.25%)</title><rect x="10.8128%" y="421" width="2.2540%" height="15" fill="rgb(210,75,36)" fg:x="2437" fg:w="508"/><text x="11.0628%" y="431.50">l..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (81 samples, 0.36%)</title><rect x="12.7074%" y="405" width="0.3594%" height="15" fill="rgb(229,88,21)" fg:x="2864" fg:w="81"/><text x="12.9574%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$activepipelines (25 samples, 0.11%)</title><rect x="13.0668%" y="421" width="0.1109%" height="15" fill="rgb(252,204,47)" fg:x="2945" fg:w="25"/><text x="13.3168%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (18 samples, 0.08%)</title><rect x="13.1777%" y="421" width="0.0799%" height="15" fill="rgb(208,77,27)" fg:x="2970" fg:w="18"/><text x="13.4277%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$setVertexBufferOffset:atIndex: (8 samples, 0.04%)</title><rect x="13.2576%" y="421" width="0.0355%" height="15" fill="rgb(221,76,26)" fg:x="2988" fg:w="8"/><text x="13.5076%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (111 samples, 0.49%)</title><rect x="13.2931%" y="421" width="0.4925%" height="15" fill="rgb(225,139,18)" fg:x="2996" fg:w="111"/><text x="13.5431%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_release (184 samples, 0.82%)</title><rect x="13.7856%" y="421" width="0.8164%" height="15" fill="rgb(230,137,11)" fg:x="3107" fg:w="184"/><text x="14.0356%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_retain (184 samples, 0.82%)</title><rect x="14.6020%" y="421" width="0.8164%" height="15" fill="rgb(212,28,1)" fg:x="3291" fg:w="184"/><text x="14.8520%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (2,466 samples, 10.94%)</title><rect x="4.8318%" y="437" width="10.9415%" height="15" fill="rgb(248,164,17)" fg:x="1089" fg:w="2466"/><text x="5.0818%" y="447.50">libSDL2-2.0.0.dy..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (80 samples, 0.35%)</title><rect x="15.4184%" y="421" width="0.3550%" height="15" fill="rgb(222,171,42)" fg:x="3475" fg:w="80"/><text x="15.6684%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (16 samples, 0.07%)</title><rect x="15.7734%" y="437" width="0.0710%" height="15" fill="rgb(243,84,45)" fg:x="3555" fg:w="16"/><text x="16.0234%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$drawPrimitives:vertexStart:vertexCount: (7 samples, 0.03%)</title><rect x="15.8444%" y="437" width="0.0311%" height="15" fill="rgb(252,49,23)" fg:x="3571" fg:w="7"/><text x="16.0944%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (4 samples, 0.02%)</title><rect x="15.8754%" y="437" width="0.0177%" height="15" fill="rgb(215,19,7)" fg:x="3578" fg:w="4"/><text x="16.1254%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (50 samples, 0.22%)</title><rect x="15.8932%" y="437" width="0.2218%" height="15" fill="rgb(238,81,41)" fg:x="3582" fg:w="50"/><text x="16.1432%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_release (31 samples, 0.14%)</title><rect x="16.1150%" y="437" width="0.1375%" height="15" fill="rgb(210,199,37)" fg:x="3632" fg:w="31"/><text x="16.3650%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_retain (17 samples, 0.08%)</title><rect x="16.2526%" y="437" width="0.0754%" height="15" fill="rgb(244,192,49)" fg:x="3663" fg:w="17"/><text x="16.5026%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (4 samples, 0.02%)</title><rect x="16.3280%" y="437" width="0.0177%" height="15" fill="rgb(226,211,11)" fg:x="3680" fg:w="4"/><text x="16.5780%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (2,856 samples, 12.67%)</title><rect x="4.4636%" y="453" width="12.6719%" height="15" fill="rgb(236,162,54)" fg:x="1006" fg:w="2856"/><text x="4.7136%" y="463.50">libSDL2-2.0.0.dylib..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (178 samples, 0.79%)</title><rect x="16.3457%" y="437" width="0.7898%" height="15" fill="rgb(220,229,9)" fg:x="3684" fg:w="178"/><text x="16.5957%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (4 samples, 0.02%)</title><rect x="17.1444%" y="421" width="0.0177%" height="15" fill="rgb(250,87,22)" fg:x="3864" fg:w="4"/><text x="17.3944%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (4 samples, 0.02%)</title><rect x="17.1444%" y="405" width="0.0177%" height="15" fill="rgb(239,43,17)" fg:x="3864" fg:w="4"/><text x="17.3944%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (4 samples, 0.02%)</title><rect x="17.1444%" y="389" width="0.0177%" height="15" fill="rgb(231,177,25)" fg:x="3864" fg:w="4"/><text x="17.3944%" y="399.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (3 samples, 0.01%)</title><rect x="17.1488%" y="373" width="0.0133%" height="15" fill="rgb(219,179,1)" fg:x="3865" fg:w="3"/><text x="17.3988%" y="383.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (4 samples, 0.02%)</title><rect x="17.1710%" y="341" width="0.0177%" height="15" fill="rgb(238,219,53)" fg:x="3870" fg:w="4"/><text x="17.4210%" y="351.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (8 samples, 0.04%)</title><rect x="17.1710%" y="373" width="0.0355%" height="15" fill="rgb(232,167,36)" fg:x="3870" fg:w="8"/><text x="17.4210%" y="383.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (8 samples, 0.04%)</title><rect x="17.1710%" y="357" width="0.0355%" height="15" fill="rgb(244,19,51)" fg:x="3870" fg:w="8"/><text x="17.4210%" y="367.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (4 samples, 0.02%)</title><rect x="17.1887%" y="341" width="0.0177%" height="15" fill="rgb(224,6,22)" fg:x="3874" fg:w="4"/><text x="17.4387%" y="351.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (2,875 samples, 12.76%)</title><rect x="4.4591%" y="469" width="12.7562%" height="15" fill="rgb(224,145,5)" fg:x="1005" fg:w="2875"/><text x="4.7091%" y="479.50">libSDL2-2.0.0.dylib..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (16 samples, 0.07%)</title><rect x="17.1444%" y="453" width="0.0710%" height="15" fill="rgb(234,130,49)" fg:x="3864" fg:w="16"/><text x="17.3944%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (16 samples, 0.07%)</title><rect x="17.1444%" y="437" width="0.0710%" height="15" fill="rgb(254,6,2)" fg:x="3864" fg:w="16"/><text x="17.3944%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (12 samples, 0.05%)</title><rect x="17.1621%" y="421" width="0.0532%" height="15" fill="rgb(208,96,46)" fg:x="3868" fg:w="12"/><text x="17.4121%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (12 samples, 0.05%)</title><rect x="17.1621%" y="405" width="0.0532%" height="15" fill="rgb(239,3,39)" fg:x="3868" fg:w="12"/><text x="17.4121%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (12 samples, 0.05%)</title><rect x="17.1621%" y="389" width="0.0532%" height="15" fill="rgb(233,210,1)" fg:x="3868" fg:w="12"/><text x="17.4121%" y="399.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::main_sim_loop (3,824 samples, 16.97%)</title><rect x="0.2928%" y="485" width="16.9669%" height="15" fill="rgb(244,137,37)" fg:x="66" fg:w="3824"/><text x="0.5428%" y="495.50">community_sim`community_si..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor (10 samples, 0.04%)</title><rect x="17.2154%" y="469" width="0.0444%" height="15" fill="rgb(240,136,2)" fg:x="3880" fg:w="10"/><text x="17.4654%" y="479.50"></text></g><g><title>community_sim`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (12 samples, 0.05%)</title><rect x="17.2597%" y="469" width="0.0532%" height="15" fill="rgb(239,18,37)" fg:x="3890" fg:w="12"/><text x="17.5097%" y="479.50"></text></g><g><title>community_sim`community_sim::simulation::run_profile_from_yaml (3,906 samples, 17.33%)</title><rect x="0.0000%" y="533" width="17.3307%" height="15" fill="rgb(218,185,22)" fg:x="0" fg:w="3906"/><text x="0.2500%" y="543.50">community_sim`community_sim..</text></g><g><title>community_sim`community_sim::graphics::run_with_graphics_profile (3,906 samples, 17.33%)</title><rect x="0.0000%" y="517" width="17.3307%" height="15" fill="rgb(225,218,4)" fg:x="0" fg:w="3906"/><text x="0.2500%" y="527.50">community_sim`community_sim..</text></g><g><title>community_sim`community_sim::graphics::sim_render::run_sim_render (3,906 samples, 17.33%)</title><rect x="0.0000%" y="501" width="17.3307%" height="15" fill="rgb(230,182,32)" fg:x="0" fg:w="3906"/><text x="0.2500%" y="511.50">community_sim`community_sim..</text></g><g><title>community_sim`community_sim::map::Map::new (16 samples, 0.07%)</title><rect x="17.2597%" y="485" width="0.0710%" height="15" fill="rgb(242,56,43)" fg:x="3890" fg:w="16"/><text x="17.5097%" y="495.50"></text></g><g><title>community_sim`community_sim::terrain::generator::generate_terrain (4 samples, 0.02%)</title><rect x="17.3130%" y="469" width="0.0177%" height="15" fill="rgb(233,99,24)" fg:x="3902" fg:w="4"/><text x="17.5630%" y="479.50"></text></g><g><title>dyld`start (3,907 samples, 17.34%)</title><rect x="0.0000%" y="629" width="17.3352%" height="15" fill="rgb(234,209,42)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="639.50">dyld`start</text></g><g><title>community_sim`main (3,907 samples, 17.34%)</title><rect x="0.0000%" y="613" width="17.3352%" height="15" fill="rgb(227,7,12)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="623.50">community_sim`main</text></g><g><title>community_sim`std::rt::lang_start_internal (3,907 samples, 17.34%)</title><rect x="0.0000%" y="597" width="17.3352%" height="15" fill="rgb(245,203,43)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="607.50">community_sim`std::rt::lang..</text></g><g><title>community_sim`std::rt::lang_start::_{{closure}} (3,907 samples, 17.34%)</title><rect x="0.0000%" y="581" width="17.3352%" height="15" fill="rgb(238,205,33)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="591.50">community_sim`std::rt::lang..</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (3,907 samples, 17.34%)</title><rect x="0.0000%" y="565" width="17.3352%" height="15" fill="rgb(231,56,7)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="575.50">community_sim`std::sys::bac..</text></g><g><title>community_sim`community_sim::main (3,907 samples, 17.34%)</title><rect x="0.0000%" y="549" width="17.3352%" height="15" fill="rgb(244,186,29)" fg:x="0" fg:w="3907"/><text x="0.2500%" y="559.50">community_sim`community_sim..</text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.02%)</title><rect x="17.3352%" y="629" width="0.0177%" height="15" fill="rgb(234,111,31)" fg:x="3907" fg:w="4"/><text x="17.5852%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (22 samples, 0.10%)</title><rect x="17.3574%" y="613" width="0.0976%" height="15" fill="rgb(241,149,10)" fg:x="3912" fg:w="22"/><text x="17.6074%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (3 samples, 0.01%)</title><rect x="17.4594%" y="597" width="0.0133%" height="15" fill="rgb(249,206,44)" fg:x="3935" fg:w="3"/><text x="17.7094%" y="607.50"></text></g><g><title>libdispatch.dylib`&lt;deduplicated_symbol&gt; (5 samples, 0.02%)</title><rect x="17.4727%" y="565" width="0.0222%" height="15" fill="rgb(251,153,30)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.02%)</title><rect x="17.4727%" y="549" width="0.0222%" height="15" fill="rgb(239,152,38)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (5 samples, 0.02%)</title><rect x="17.4727%" y="533" width="0.0222%" height="15" fill="rgb(249,139,47)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.02%)</title><rect x="17.4727%" y="517" width="0.0222%" height="15" fill="rgb(244,64,35)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.02%)</title><rect x="17.4727%" y="501" width="0.0222%" height="15" fill="rgb(216,46,15)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke3 (5 samples, 0.02%)</title><rect x="17.4727%" y="485" width="0.0222%" height="15" fill="rgb(250,74,19)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (5 samples, 0.02%)</title><rect x="17.4727%" y="469" width="0.0222%" height="15" fill="rgb(249,42,33)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="479.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (5 samples, 0.02%)</title><rect x="17.4727%" y="453" width="0.0222%" height="15" fill="rgb(242,149,17)" fg:x="3938" fg:w="5"/><text x="17.7227%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (6 samples, 0.03%)</title><rect x="17.4727%" y="597" width="0.0266%" height="15" fill="rgb(244,29,21)" fg:x="3938" fg:w="6"/><text x="17.7227%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (6 samples, 0.03%)</title><rect x="17.4727%" y="581" width="0.0266%" height="15" fill="rgb(220,130,37)" fg:x="3938" fg:w="6"/><text x="17.7227%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (3 samples, 0.01%)</title><rect x="17.5038%" y="581" width="0.0133%" height="15" fill="rgb(211,67,2)" fg:x="3945" fg:w="3"/><text x="17.7538%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (3 samples, 0.01%)</title><rect x="17.5038%" y="565" width="0.0133%" height="15" fill="rgb(235,68,52)" fg:x="3945" fg:w="3"/><text x="17.7538%" y="575.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (3 samples, 0.01%)</title><rect x="17.5215%" y="501" width="0.0133%" height="15" fill="rgb(246,142,3)" fg:x="3949" fg:w="3"/><text x="17.7715%" y="511.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (5 samples, 0.02%)</title><rect x="17.5215%" y="517" width="0.0222%" height="15" fill="rgb(241,25,7)" fg:x="3949" fg:w="5"/><text x="17.7715%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (9 samples, 0.04%)</title><rect x="17.5215%" y="533" width="0.0399%" height="15" fill="rgb(242,119,39)" fg:x="3949" fg:w="9"/><text x="17.7715%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (4 samples, 0.02%)</title><rect x="17.5437%" y="517" width="0.0177%" height="15" fill="rgb(241,98,45)" fg:x="3954" fg:w="4"/><text x="17.7937%" y="527.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (5 samples, 0.02%)</title><rect x="17.5659%" y="389" width="0.0222%" height="15" fill="rgb(254,28,30)" fg:x="3959" fg:w="5"/><text x="17.8159%" y="399.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (5 samples, 0.02%)</title><rect x="17.5659%" y="373" width="0.0222%" height="15" fill="rgb(241,142,54)" fg:x="3959" fg:w="5"/><text x="17.8159%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.02%)</title><rect x="17.5659%" y="357" width="0.0222%" height="15" fill="rgb(222,85,15)" fg:x="3959" fg:w="5"/><text x="17.8159%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.02%)</title><rect x="17.5659%" y="341" width="0.0222%" height="15" fill="rgb(210,85,47)" fg:x="3959" fg:w="5"/><text x="17.8159%" y="351.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (7 samples, 0.03%)</title><rect x="17.5659%" y="405" width="0.0311%" height="15" fill="rgb(224,206,25)" fg:x="3959" fg:w="7"/><text x="17.8159%" y="415.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseExtraResources (6 samples, 0.03%)</title><rect x="17.6014%" y="341" width="0.0266%" height="15" fill="rgb(243,201,19)" fg:x="3967" fg:w="6"/><text x="17.8514%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.03%)</title><rect x="17.6014%" y="325" width="0.0266%" height="15" fill="rgb(236,59,4)" fg:x="3967" fg:w="6"/><text x="17.8514%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyBuffer dealloc] (3 samples, 0.01%)</title><rect x="17.6280%" y="309" width="0.0133%" height="15" fill="rgb(254,179,45)" fg:x="3973" fg:w="3"/><text x="17.8780%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer dealloc] (3 samples, 0.01%)</title><rect x="17.6280%" y="293" width="0.0133%" height="15" fill="rgb(226,14,10)" fg:x="3973" fg:w="3"/><text x="17.8780%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (3 samples, 0.01%)</title><rect x="17.6280%" y="277" width="0.0133%" height="15" fill="rgb(244,27,41)" fg:x="3973" fg:w="3"/><text x="17.8780%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (3 samples, 0.01%)</title><rect x="17.6280%" y="261" width="0.0133%" height="15" fill="rgb(235,35,32)" fg:x="3973" fg:w="3"/><text x="17.8780%" y="271.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (16 samples, 0.07%)</title><rect x="17.5969%" y="373" width="0.0710%" height="15" fill="rgb(218,68,31)" fg:x="3966" fg:w="16"/><text x="17.8469%" y="383.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (16 samples, 0.07%)</title><rect x="17.5969%" y="357" width="0.0710%" height="15" fill="rgb(207,120,37)" fg:x="3966" fg:w="16"/><text x="17.8469%" y="367.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (9 samples, 0.04%)</title><rect x="17.6280%" y="341" width="0.0399%" height="15" fill="rgb(227,98,0)" fg:x="3973" fg:w="9"/><text x="17.8780%" y="351.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (9 samples, 0.04%)</title><rect x="17.6280%" y="325" width="0.0399%" height="15" fill="rgb(207,7,3)" fg:x="3973" fg:w="9"/><text x="17.8780%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (6 samples, 0.03%)</title><rect x="17.6413%" y="309" width="0.0266%" height="15" fill="rgb(206,98,19)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="319.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (6 samples, 0.03%)</title><rect x="17.6413%" y="293" width="0.0266%" height="15" fill="rgb(217,5,26)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (6 samples, 0.03%)</title><rect x="17.6413%" y="277" width="0.0266%" height="15" fill="rgb(235,190,38)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (6 samples, 0.03%)</title><rect x="17.6413%" y="261" width="0.0266%" height="15" fill="rgb(247,86,24)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="271.50"></text></g><g><title>CoreFoundation`_CFRelease (6 samples, 0.03%)</title><rect x="17.6413%" y="245" width="0.0266%" height="15" fill="rgb(205,101,16)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="255.50"></text></g><g><title>IOKit`iokit_user_client_trap (6 samples, 0.03%)</title><rect x="17.6413%" y="229" width="0.0266%" height="15" fill="rgb(246,168,33)" fg:x="3976" fg:w="6"/><text x="17.8913%" y="239.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (17 samples, 0.08%)</title><rect x="17.5969%" y="405" width="0.0754%" height="15" fill="rgb(231,114,1)" fg:x="3966" fg:w="17"/><text x="17.8469%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (17 samples, 0.08%)</title><rect x="17.5969%" y="389" width="0.0754%" height="15" fill="rgb(207,184,53)" fg:x="3966" fg:w="17"/><text x="17.8469%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (26 samples, 0.12%)</title><rect x="17.5615%" y="533" width="0.1154%" height="15" fill="rgb(224,95,51)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (26 samples, 0.12%)</title><rect x="17.5615%" y="517" width="0.1154%" height="15" fill="rgb(212,188,45)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (26 samples, 0.12%)</title><rect x="17.5615%" y="501" width="0.1154%" height="15" fill="rgb(223,154,38)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (26 samples, 0.12%)</title><rect x="17.5615%" y="485" width="0.1154%" height="15" fill="rgb(251,22,52)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (26 samples, 0.12%)</title><rect x="17.5615%" y="469" width="0.1154%" height="15" fill="rgb(229,209,22)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (26 samples, 0.12%)</title><rect x="17.5615%" y="453" width="0.1154%" height="15" fill="rgb(234,138,34)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="463.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (26 samples, 0.12%)</title><rect x="17.5615%" y="437" width="0.1154%" height="15" fill="rgb(212,95,11)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="447.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (26 samples, 0.12%)</title><rect x="17.5615%" y="421" width="0.1154%" height="15" fill="rgb(240,179,47)" fg:x="3958" fg:w="26"/><text x="17.8115%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (3 samples, 0.01%)</title><rect x="17.6812%" y="485" width="0.0133%" height="15" fill="rgb(240,163,11)" fg:x="3985" fg:w="3"/><text x="17.9312%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (5 samples, 0.02%)</title><rect x="17.6768%" y="517" width="0.0222%" height="15" fill="rgb(236,37,12)" fg:x="3984" fg:w="5"/><text x="17.9268%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (4 samples, 0.02%)</title><rect x="17.6812%" y="501" width="0.0177%" height="15" fill="rgb(232,164,16)" fg:x="3985" fg:w="4"/><text x="17.9312%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (6 samples, 0.03%)</title><rect x="17.6768%" y="533" width="0.0266%" height="15" fill="rgb(244,205,15)" fg:x="3984" fg:w="6"/><text x="17.9268%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (3 samples, 0.01%)</title><rect x="17.7034%" y="469" width="0.0133%" height="15" fill="rgb(223,117,47)" fg:x="3990" fg:w="3"/><text x="17.9534%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool updateResourcePurgeability] (3 samples, 0.01%)</title><rect x="17.7034%" y="453" width="0.0133%" height="15" fill="rgb(244,107,35)" fg:x="3990" fg:w="3"/><text x="17.9534%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (3 samples, 0.01%)</title><rect x="17.7034%" y="437" width="0.0133%" height="15" fill="rgb(205,140,8)" fg:x="3990" fg:w="3"/><text x="17.9534%" y="447.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="17.7034%" y="421" width="0.0133%" height="15" fill="rgb(228,84,46)" fg:x="3990" fg:w="3"/><text x="17.9534%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (118 samples, 0.52%)</title><rect x="17.7167%" y="469" width="0.5236%" height="15" fill="rgb(254,188,9)" fg:x="3993" fg:w="118"/><text x="17.9667%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (117 samples, 0.52%)</title><rect x="17.7212%" y="453" width="0.5191%" height="15" fill="rgb(206,112,54)" fg:x="3994" fg:w="117"/><text x="17.9712%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (117 samples, 0.52%)</title><rect x="17.7212%" y="437" width="0.5191%" height="15" fill="rgb(216,84,49)" fg:x="3994" fg:w="117"/><text x="17.9712%" y="447.50"></text></g><g><title>IOKit`iokit_user_client_trap (117 samples, 0.52%)</title><rect x="17.7212%" y="421" width="0.5191%" height="15" fill="rgb(214,194,35)" fg:x="3994" fg:w="117"/><text x="17.9712%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (127 samples, 0.56%)</title><rect x="17.7034%" y="533" width="0.5635%" height="15" fill="rgb(249,28,3)" fg:x="3990" fg:w="127"/><text x="17.9534%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (127 samples, 0.56%)</title><rect x="17.7034%" y="517" width="0.5635%" height="15" fill="rgb(222,56,52)" fg:x="3990" fg:w="127"/><text x="17.9534%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (127 samples, 0.56%)</title><rect x="17.7034%" y="501" width="0.5635%" height="15" fill="rgb(245,217,50)" fg:x="3990" fg:w="127"/><text x="17.9534%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (127 samples, 0.56%)</title><rect x="17.7034%" y="485" width="0.5635%" height="15" fill="rgb(213,201,24)" fg:x="3990" fg:w="127"/><text x="17.9534%" y="495.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (5 samples, 0.02%)</title><rect x="18.2447%" y="469" width="0.0222%" height="15" fill="rgb(248,116,28)" fg:x="4112" fg:w="5"/><text x="18.4947%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (207 samples, 0.92%)</title><rect x="17.3529%" y="629" width="0.9184%" height="15" fill="rgb(219,72,43)" fg:x="3911" fg:w="207"/><text x="17.6029%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (183 samples, 0.81%)</title><rect x="17.4594%" y="613" width="0.8120%" height="15" fill="rgb(209,138,14)" fg:x="3935" fg:w="183"/><text x="17.7094%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (174 samples, 0.77%)</title><rect x="17.4993%" y="597" width="0.7720%" height="15" fill="rgb(222,18,33)" fg:x="3944" fg:w="174"/><text x="17.7493%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (169 samples, 0.75%)</title><rect x="17.5215%" y="581" width="0.7498%" height="15" fill="rgb(213,199,7)" fg:x="3949" fg:w="169"/><text x="17.7715%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (169 samples, 0.75%)</title><rect x="17.5215%" y="565" width="0.7498%" height="15" fill="rgb(250,110,10)" fg:x="3949" fg:w="169"/><text x="17.7715%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (169 samples, 0.75%)</title><rect x="17.5215%" y="549" width="0.7498%" height="15" fill="rgb(248,123,6)" fg:x="3949" fg:w="169"/><text x="17.7715%" y="559.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="18.3379%" y="293" width="0.0133%" height="15" fill="rgb(206,91,31)" fg:x="4133" fg:w="3"/><text x="18.5879%" y="303.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (3 samples, 0.01%)</title><rect x="18.3379%" y="277" width="0.0133%" height="15" fill="rgb(211,154,13)" fg:x="4133" fg:w="3"/><text x="18.5879%" y="287.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (3 samples, 0.01%)</title><rect x="18.3379%" y="261" width="0.0133%" height="15" fill="rgb(225,148,7)" fg:x="4133" fg:w="3"/><text x="18.5879%" y="271.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="18.3379%" y="245" width="0.0133%" height="15" fill="rgb(220,160,43)" fg:x="4133" fg:w="3"/><text x="18.5879%" y="255.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (3 samples, 0.01%)</title><rect x="18.3379%" y="229" width="0.0133%" height="15" fill="rgb(213,52,39)" fg:x="4133" fg:w="3"/><text x="18.5879%" y="239.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (8 samples, 0.04%)</title><rect x="18.3246%" y="389" width="0.0355%" height="15" fill="rgb(243,137,7)" fg:x="4130" fg:w="8"/><text x="18.5746%" y="399.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.03%)</title><rect x="18.3290%" y="373" width="0.0311%" height="15" fill="rgb(230,79,13)" fg:x="4131" fg:w="7"/><text x="18.5790%" y="383.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (7 samples, 0.03%)</title><rect x="18.3290%" y="357" width="0.0311%" height="15" fill="rgb(247,105,23)" fg:x="4131" fg:w="7"/><text x="18.5790%" y="367.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.03%)</title><rect x="18.3290%" y="341" width="0.0311%" height="15" fill="rgb(223,179,41)" fg:x="4131" fg:w="7"/><text x="18.5790%" y="351.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.03%)</title><rect x="18.3290%" y="325" width="0.0311%" height="15" fill="rgb(218,9,34)" fg:x="4131" fg:w="7"/><text x="18.5790%" y="335.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (7 samples, 0.03%)</title><rect x="18.3290%" y="309" width="0.0311%" height="15" fill="rgb(222,106,8)" fg:x="4131" fg:w="7"/><text x="18.5790%" y="319.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (9 samples, 0.04%)</title><rect x="18.3246%" y="405" width="0.0399%" height="15" fill="rgb(211,220,0)" fg:x="4130" fg:w="9"/><text x="18.5746%" y="415.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (10 samples, 0.04%)</title><rect x="18.3246%" y="421" width="0.0444%" height="15" fill="rgb(229,52,16)" fg:x="4130" fg:w="10"/><text x="18.5746%" y="431.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (20 samples, 0.09%)</title><rect x="18.2980%" y="469" width="0.0887%" height="15" fill="rgb(212,155,18)" fg:x="4124" fg:w="20"/><text x="18.5480%" y="479.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (19 samples, 0.08%)</title><rect x="18.3024%" y="453" width="0.0843%" height="15" fill="rgb(242,21,14)" fg:x="4125" fg:w="19"/><text x="18.5524%" y="463.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (16 samples, 0.07%)</title><rect x="18.3157%" y="437" width="0.0710%" height="15" fill="rgb(222,19,48)" fg:x="4128" fg:w="16"/><text x="18.5657%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="18.3690%" y="421" width="0.0177%" height="15" fill="rgb(232,45,27)" fg:x="4140" fg:w="4"/><text x="18.6190%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="18.3690%" y="405" width="0.0177%" height="15" fill="rgb(249,103,42)" fg:x="4140" fg:w="4"/><text x="18.6190%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="18.3690%" y="389" width="0.0177%" height="15" fill="rgb(246,81,33)" fg:x="4140" fg:w="4"/><text x="18.6190%" y="399.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (25 samples, 0.11%)</title><rect x="18.2847%" y="501" width="0.1109%" height="15" fill="rgb(252,33,42)" fg:x="4121" fg:w="25"/><text x="18.5347%" y="511.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (25 samples, 0.11%)</title><rect x="18.2847%" y="485" width="0.1109%" height="15" fill="rgb(209,212,41)" fg:x="4121" fg:w="25"/><text x="18.5347%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (29 samples, 0.13%)</title><rect x="18.2758%" y="549" width="0.1287%" height="15" fill="rgb(207,154,6)" fg:x="4119" fg:w="29"/><text x="18.5258%" y="559.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (29 samples, 0.13%)</title><rect x="18.2758%" y="533" width="0.1287%" height="15" fill="rgb(223,64,47)" fg:x="4119" fg:w="29"/><text x="18.5258%" y="543.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (29 samples, 0.13%)</title><rect x="18.2758%" y="517" width="0.1287%" height="15" fill="rgb(211,161,38)" fg:x="4119" fg:w="29"/><text x="18.5258%" y="527.50"></text></g><g><title>AppKit`_NSEventThread (31 samples, 0.14%)</title><rect x="18.2714%" y="597" width="0.1375%" height="15" fill="rgb(219,138,40)" fg:x="4118" fg:w="31"/><text x="18.5214%" y="607.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (31 samples, 0.14%)</title><rect x="18.2714%" y="581" width="0.1375%" height="15" fill="rgb(241,228,46)" fg:x="4118" fg:w="31"/><text x="18.5214%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (31 samples, 0.14%)</title><rect x="18.2714%" y="565" width="0.1375%" height="15" fill="rgb(223,209,38)" fg:x="4118" fg:w="31"/><text x="18.5214%" y="575.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 samples, 0.71%)</title><rect x="20.9513%" y="277" width="0.7143%" height="15" fill="rgb(236,164,45)" fg:x="4722" fg:w="161"/><text x="21.2013%" y="287.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (232 samples, 1.03%)</title><rect x="21.6656%" y="277" width="1.0294%" height="15" fill="rgb(231,15,5)" fg:x="4883" fg:w="232"/><text x="21.9156%" y="287.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.23%)</title><rect x="23.1964%" y="261" width="0.2307%" height="15" fill="rgb(252,35,15)" fg:x="5228" fg:w="52"/><text x="23.4464%" y="271.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (170 samples, 0.75%)</title><rect x="23.4271%" y="261" width="0.7543%" height="15" fill="rgb(248,181,18)" fg:x="5280" fg:w="170"/><text x="23.6771%" y="271.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (122 samples, 0.54%)</title><rect x="24.7404%" y="245" width="0.5413%" height="15" fill="rgb(233,39,42)" fg:x="5576" fg:w="122"/><text x="24.9904%" y="255.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (94 samples, 0.42%)</title><rect x="25.2817%" y="245" width="0.4171%" height="15" fill="rgb(238,110,33)" fg:x="5698" fg:w="94"/><text x="25.5317%" y="255.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (346 samples, 1.54%)</title><rect x="24.1814%" y="261" width="1.5352%" height="15" fill="rgb(233,195,10)" fg:x="5450" fg:w="346"/><text x="24.4314%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (4 samples, 0.02%)</title><rect x="25.6988%" y="245" width="0.0177%" height="15" fill="rgb(254,105,3)" fg:x="5792" fg:w="4"/><text x="25.9488%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (4 samples, 0.02%)</title><rect x="25.6988%" y="229" width="0.0177%" height="15" fill="rgb(221,225,9)" fg:x="5792" fg:w="4"/><text x="25.9488%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.02%)</title><rect x="25.6988%" y="213" width="0.0177%" height="15" fill="rgb(224,227,45)" fg:x="5792" fg:w="4"/><text x="25.9488%" y="223.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (683 samples, 3.03%)</title><rect x="22.6950%" y="277" width="3.0304%" height="15" fill="rgb(229,198,43)" fg:x="5115" fg:w="683"/><text x="22.9450%" y="287.50">com..</text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (1,654 samples, 7.34%)</title><rect x="18.4133%" y="293" width="7.3387%" height="15" fill="rgb(206,209,35)" fg:x="4150" fg:w="1654"/><text x="18.6633%" y="303.50">community_..</text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.03%)</title><rect x="25.7254%" y="277" width="0.0266%" height="15" fill="rgb(245,195,53)" fg:x="5798" fg:w="6"/><text x="25.9754%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (6 samples, 0.03%)</title><rect x="25.7254%" y="261" width="0.0266%" height="15" fill="rgb(240,92,26)" fg:x="5798" fg:w="6"/><text x="25.9754%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.03%)</title><rect x="25.7254%" y="245" width="0.0266%" height="15" fill="rgb(207,40,23)" fg:x="5798" fg:w="6"/><text x="25.9754%" y="255.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (131 samples, 0.58%)</title><rect x="25.7521%" y="293" width="0.5812%" height="15" fill="rgb(223,111,35)" fg:x="5804" fg:w="131"/><text x="26.0021%" y="303.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (1,790 samples, 7.94%)</title><rect x="18.4089%" y="325" width="7.9421%" height="15" fill="rgb(229,147,28)" fg:x="4149" fg:w="1790"/><text x="18.6589%" y="335.50">community_s..</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (1,790 samples, 7.94%)</title><rect x="18.4089%" y="309" width="7.9421%" height="15" fill="rgb(211,29,28)" fg:x="4149" fg:w="1790"/><text x="18.6589%" y="319.50">community_s..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="26.3333%" y="293" width="0.0177%" height="15" fill="rgb(228,72,33)" fg:x="5935" fg:w="4"/><text x="26.5833%" y="303.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.04%)</title><rect x="26.3511%" y="245" width="0.0399%" height="15" fill="rgb(205,214,31)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="255.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.04%)</title><rect x="26.3511%" y="229" width="0.0399%" height="15" fill="rgb(224,111,15)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="239.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.04%)</title><rect x="26.3511%" y="213" width="0.0399%" height="15" fill="rgb(253,21,26)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="223.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (9 samples, 0.04%)</title><rect x="26.3511%" y="197" width="0.0399%" height="15" fill="rgb(245,139,43)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="207.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.04%)</title><rect x="26.3511%" y="181" width="0.0399%" height="15" fill="rgb(252,170,7)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="191.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (9 samples, 0.04%)</title><rect x="26.3511%" y="165" width="0.0399%" height="15" fill="rgb(231,118,14)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="175.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (9 samples, 0.04%)</title><rect x="26.3511%" y="149" width="0.0399%" height="15" fill="rgb(238,83,0)" fg:x="5939" fg:w="9"/><text x="26.6011%" y="159.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="26.3732%" y="133" width="0.0177%" height="15" fill="rgb(221,39,39)" fg:x="5944" fg:w="4"/><text x="26.6232%" y="143.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,800 samples, 7.99%)</title><rect x="18.4089%" y="405" width="7.9865%" height="15" fill="rgb(222,119,46)" fg:x="4149" fg:w="1800"/><text x="18.6589%" y="415.50">community_s..</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (1,800 samples, 7.99%)</title><rect x="18.4089%" y="389" width="7.9865%" height="15" fill="rgb(222,165,49)" fg:x="4149" fg:w="1800"/><text x="18.6589%" y="399.50">community_s..</text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1,800 samples, 7.99%)</title><rect x="18.4089%" y="373" width="7.9865%" height="15" fill="rgb(219,113,52)" fg:x="4149" fg:w="1800"/><text x="18.6589%" y="383.50">community_s..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1,800 samples, 7.99%)</title><rect x="18.4089%" y="357" width="7.9865%" height="15" fill="rgb(214,7,15)" fg:x="4149" fg:w="1800"/><text x="18.6589%" y="367.50">community_s..</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,800 samples, 7.99%)</title><rect x="18.4089%" y="341" width="7.9865%" height="15" fill="rgb(235,32,4)" fg:x="4149" fg:w="1800"/><text x="18.6589%" y="351.50">community_s..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (10 samples, 0.04%)</title><rect x="26.3511%" y="325" width="0.0444%" height="15" fill="rgb(238,90,54)" fg:x="5939" fg:w="10"/><text x="26.6011%" y="335.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (10 samples, 0.04%)</title><rect x="26.3511%" y="309" width="0.0444%" height="15" fill="rgb(213,208,19)" fg:x="5939" fg:w="10"/><text x="26.6011%" y="319.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.04%)</title><rect x="26.3511%" y="293" width="0.0444%" height="15" fill="rgb(233,156,4)" fg:x="5939" fg:w="10"/><text x="26.6011%" y="303.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.04%)</title><rect x="26.3511%" y="277" width="0.0444%" height="15" fill="rgb(207,194,5)" fg:x="5939" fg:w="10"/><text x="26.6011%" y="287.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (10 samples, 0.04%)</title><rect x="26.3511%" y="261" width="0.0444%" height="15" fill="rgb(206,111,30)" fg:x="5939" fg:w="10"/><text x="26.6011%" y="271.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1,801 samples, 7.99%)</title><rect x="18.4089%" y="469" width="7.9909%" height="15" fill="rgb(243,70,54)" fg:x="4149" fg:w="1801"/><text x="18.6589%" y="479.50">community_s..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (1,801 samples, 7.99%)</title><rect x="18.4089%" y="453" width="7.9909%" height="15" fill="rgb(242,28,8)" fg:x="4149" fg:w="1801"/><text x="18.6589%" y="463.50">community_s..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (1,801 samples, 7.99%)</title><rect x="18.4089%" y="437" width="7.9909%" height="15" fill="rgb(219,106,18)" fg:x="4149" fg:w="1801"/><text x="18.6589%" y="447.50">community_s..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (1,801 samples, 7.99%)</title><rect x="18.4089%" y="421" width="7.9909%" height="15" fill="rgb(244,222,10)" fg:x="4149" fg:w="1801"/><text x="18.6589%" y="431.50">community_s..</text></g><g><title>community_sim`&lt;deduplicated_symbol&gt; (1,802 samples, 8.00%)</title><rect x="18.4089%" y="517" width="7.9954%" height="15" fill="rgb(236,179,52)" fg:x="4149" fg:w="1802"/><text x="18.6589%" y="527.50">community_s..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (1,802 samples, 8.00%)</title><rect x="18.4089%" y="501" width="7.9954%" height="15" fill="rgb(213,23,39)" fg:x="4149" fg:w="1802"/><text x="18.6589%" y="511.50">community_s..</text></g><g><title>community_sim`legion::internals::systems::schedule::Executor::run_systems (1,802 samples, 8.00%)</title><rect x="18.4089%" y="485" width="7.9954%" height="15" fill="rgb(238,48,10)" fg:x="4149" fg:w="1802"/><text x="18.6589%" y="495.50">community_s..</text></g><g><title>community_sim`alloc::fmt::format::format_inner (3 samples, 0.01%)</title><rect x="26.4176%" y="405" width="0.0133%" height="15" fill="rgb(251,196,23)" fg:x="5954" fg:w="3"/><text x="26.6676%" y="415.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,572 samples, 6.97%)</title><rect x="49.5962%" y="389" width="6.9749%" height="15" fill="rgb(250,152,24)" fg:x="11178" fg:w="1572"/><text x="49.8462%" y="399.50">community..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.01%)</title><rect x="56.5711%" y="325" width="0.0133%" height="15" fill="rgb(209,150,17)" fg:x="12750" fg:w="3"/><text x="56.8211%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.01%)</title><rect x="56.5711%" y="309" width="0.0133%" height="15" fill="rgb(234,202,34)" fg:x="12750" fg:w="3"/><text x="56.8211%" y="319.50"></text></g><g><title>community_sim`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.02%)</title><rect x="56.5711%" y="389" width="0.0177%" height="15" fill="rgb(253,148,53)" fg:x="12750" fg:w="4"/><text x="56.8211%" y="399.50"></text></g><g><title>community_sim`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="56.5711%" y="373" width="0.0177%" height="15" fill="rgb(218,129,16)" fg:x="12750" fg:w="4"/><text x="56.8211%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="56.5711%" y="357" width="0.0177%" height="15" fill="rgb(216,85,19)" fg:x="12750" fg:w="4"/><text x="56.8211%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="56.5711%" y="341" width="0.0177%" height="15" fill="rgb(235,228,7)" fg:x="12750" fg:w="4"/><text x="56.8211%" y="351.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (2,007 samples, 8.90%)</title><rect x="56.5889%" y="389" width="8.9050%" height="15" fill="rgb(245,175,0)" fg:x="12754" fg:w="2007"/><text x="56.8389%" y="399.50">community_sim..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (433 samples, 1.92%)</title><rect x="71.0267%" y="373" width="1.9212%" height="15" fill="rgb(208,168,36)" fg:x="16008" fg:w="433"/><text x="71.2767%" y="383.50">c..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,401 samples, 6.22%)</title><rect x="72.9479%" y="373" width="6.2162%" height="15" fill="rgb(246,171,24)" fg:x="16441" fg:w="1401"/><text x="73.1979%" y="383.50">communit..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,262 samples, 5.60%)</title><rect x="84.4751%" y="357" width="5.5994%" height="15" fill="rgb(215,142,24)" fg:x="19039" fg:w="1262"/><text x="84.7251%" y="367.50">communi..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (822 samples, 3.65%)</title><rect x="90.0745%" y="357" width="3.6472%" height="15" fill="rgb(250,187,7)" fg:x="20301" fg:w="822"/><text x="90.3245%" y="367.50">comm..</text></g><g><title>libsystem_malloc.dylib`free_medium (47 samples, 0.21%)</title><rect x="93.7217%" y="357" width="0.2085%" height="15" fill="rgb(228,66,33)" fg:x="21123" fg:w="47"/><text x="93.9717%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (46 samples, 0.20%)</title><rect x="93.7262%" y="341" width="0.2041%" height="15" fill="rgb(234,215,21)" fg:x="21124" fg:w="46"/><text x="93.9762%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (46 samples, 0.20%)</title><rect x="93.7262%" y="325" width="0.2041%" height="15" fill="rgb(222,191,20)" fg:x="21124" fg:w="46"/><text x="93.9762%" y="335.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,337 samples, 14.81%)</title><rect x="79.1641%" y="373" width="14.8061%" height="15" fill="rgb(245,79,54)" fg:x="17842" fg:w="3337"/><text x="79.4141%" y="383.50">community_sim`hashbrown..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.03%)</title><rect x="93.9391%" y="357" width="0.0311%" height="15" fill="rgb(240,10,37)" fg:x="21172" fg:w="7"/><text x="94.1891%" y="367.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,462 samples, 28.67%)</title><rect x="65.4938%" y="389" width="28.6716%" height="15" fill="rgb(214,192,32)" fg:x="14761" fg:w="6462"/><text x="65.7438%" y="399.50">community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;..</text></g><g><title>libsystem_platform.dylib`_platform_memset (44 samples, 0.20%)</title><rect x="93.9702%" y="373" width="0.1952%" height="15" fill="rgb(209,36,54)" fg:x="21179" fg:w="44"/><text x="94.2202%" y="383.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (15,351 samples, 68.11%)</title><rect x="26.4398%" y="405" width="68.1116%" height="15" fill="rgb(220,10,11)" fg:x="5959" fg:w="15351"/><text x="26.6898%" y="415.50">community_sim`community_sim::navigation::pathfinding::a_star_path</text></g><g><title>libsystem_malloc.dylib`free_medium (87 samples, 0.39%)</title><rect x="94.1654%" y="389" width="0.3860%" height="15" fill="rgb(221,106,17)" fg:x="21223" fg:w="87"/><text x="94.4154%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (87 samples, 0.39%)</title><rect x="94.1654%" y="373" width="0.3860%" height="15" fill="rgb(251,142,44)" fg:x="21223" fg:w="87"/><text x="94.4154%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (87 samples, 0.39%)</title><rect x="94.1654%" y="357" width="0.3860%" height="15" fill="rgb(238,13,15)" fg:x="21223" fg:w="87"/><text x="94.4154%" y="367.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,070 samples, 4.75%)</title><rect x="94.5514%" y="405" width="4.7475%" height="15" fill="rgb(208,107,27)" fg:x="21310" fg:w="1070"/><text x="94.8014%" y="415.50">commun..</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (16,497 samples, 73.20%)</title><rect x="26.4087%" y="437" width="73.1964%" height="15" fill="rgb(205,136,37)" fg:x="5952" fg:w="16497"/><text x="26.6587%" y="447.50">community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_u..</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (16,497 samples, 73.20%)</title><rect x="26.4087%" y="421" width="73.1964%" height="15" fill="rgb(250,205,27)" fg:x="5952" fg:w="16497"/><text x="26.6587%" y="431.50">community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (69 samples, 0.31%)</title><rect x="99.2990%" y="405" width="0.3061%" height="15" fill="rgb(210,80,43)" fg:x="22380" fg:w="69"/><text x="99.5490%" y="415.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.07%)</title><rect x="99.6362%" y="245" width="0.0710%" height="15" fill="rgb(247,160,36)" fg:x="22456" fg:w="16"/><text x="99.8862%" y="255.50"></text></g><g><title>community_sim`&lt;fern::log_impl::File as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="99.7116%" y="197" width="0.0133%" height="15" fill="rgb(234,13,49)" fg:x="22473" fg:w="3"/><text x="99.9616%" y="207.50"></text></g><g><title>community_sim`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.01%)</title><rect x="99.7116%" y="181" width="0.0133%" height="15" fill="rgb(234,122,0)" fg:x="22473" fg:w="3"/><text x="99.9616%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.01%)</title><rect x="99.7116%" y="165" width="0.0133%" height="15" fill="rgb(207,146,38)" fg:x="22473" fg:w="3"/><text x="99.9616%" y="175.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (16,528 samples, 73.33%)</title><rect x="26.4043%" y="485" width="73.3339%" height="15" fill="rgb(207,177,25)" fg:x="5951" fg:w="16528"/><text x="26.6543%" y="495.50">community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (16,527 samples, 73.33%)</title><rect x="26.4087%" y="469" width="73.3295%" height="15" fill="rgb(211,178,42)" fg:x="5952" fg:w="16527"/><text x="26.6587%" y="479.50">community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (16,527 samples, 73.33%)</title><rect x="26.4087%" y="453" width="73.3295%" height="15" fill="rgb(230,69,54)" fg:x="5952" fg:w="16527"/><text x="26.6587%" y="463.50">community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (30 samples, 0.13%)</title><rect x="99.6051%" y="437" width="0.1331%" height="15" fill="rgb(214,135,41)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="447.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (30 samples, 0.13%)</title><rect x="99.6051%" y="421" width="0.1331%" height="15" fill="rgb(237,67,25)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="431.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (30 samples, 0.13%)</title><rect x="99.6051%" y="405" width="0.1331%" height="15" fill="rgb(222,189,50)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="415.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.13%)</title><rect x="99.6051%" y="389" width="0.1331%" height="15" fill="rgb(245,148,34)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="399.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (30 samples, 0.13%)</title><rect x="99.6051%" y="373" width="0.1331%" height="15" fill="rgb(222,29,6)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="383.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (30 samples, 0.13%)</title><rect x="99.6051%" y="357" width="0.1331%" height="15" fill="rgb(221,189,43)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="367.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.13%)</title><rect x="99.6051%" y="341" width="0.1331%" height="15" fill="rgb(207,36,27)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="351.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (30 samples, 0.13%)</title><rect x="99.6051%" y="325" width="0.1331%" height="15" fill="rgb(217,90,24)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="335.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (30 samples, 0.13%)</title><rect x="99.6051%" y="309" width="0.1331%" height="15" fill="rgb(224,66,35)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="319.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (30 samples, 0.13%)</title><rect x="99.6051%" y="293" width="0.1331%" height="15" fill="rgb(221,13,50)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="303.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (30 samples, 0.13%)</title><rect x="99.6051%" y="277" width="0.1331%" height="15" fill="rgb(236,68,49)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="287.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (30 samples, 0.13%)</title><rect x="99.6051%" y="261" width="0.1331%" height="15" fill="rgb(229,146,28)" fg:x="22449" fg:w="30"/><text x="99.8551%" y="271.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (7 samples, 0.03%)</title><rect x="99.7072%" y="245" width="0.0311%" height="15" fill="rgb(225,31,38)" fg:x="22472" fg:w="7"/><text x="99.9572%" y="255.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (7 samples, 0.03%)</title><rect x="99.7072%" y="229" width="0.0311%" height="15" fill="rgb(250,208,3)" fg:x="22472" fg:w="7"/><text x="99.9572%" y="239.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (6 samples, 0.03%)</title><rect x="99.7116%" y="213" width="0.0266%" height="15" fill="rgb(246,54,23)" fg:x="22473" fg:w="6"/><text x="99.9616%" y="223.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Stdout as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="99.7249%" y="197" width="0.0133%" height="15" fill="rgb(243,76,11)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="207.50"></text></g><g><title>community_sim`std::io::Write::write_fmt (3 samples, 0.01%)</title><rect x="99.7249%" y="181" width="0.0133%" height="15" fill="rgb(245,21,50)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="191.50"></text></g><g><title>community_sim`core::fmt::write (3 samples, 0.01%)</title><rect x="99.7249%" y="165" width="0.0133%" height="15" fill="rgb(228,9,43)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="175.50"></text></g><g><title>community_sim`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="99.7249%" y="149" width="0.0133%" height="15" fill="rgb(208,100,47)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="159.50"></text></g><g><title>community_sim`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="99.7249%" y="133" width="0.0133%" height="15" fill="rgb(232,26,8)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="143.50"></text></g><g><title>community_sim`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="99.7249%" y="117" width="0.0133%" height="15" fill="rgb(216,166,38)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.01%)</title><rect x="99.7249%" y="101" width="0.0133%" height="15" fill="rgb(251,202,51)" fg:x="22476" fg:w="3"/><text x="99.9749%" y="111.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="99.7959%" y="325" width="0.0177%" height="15" fill="rgb(254,216,34)" fg:x="22492" fg:w="4"/><text x="100.0459%" y="335.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.03%)</title><rect x="99.8181%" y="325" width="0.0311%" height="15" fill="rgb(251,32,27)" fg:x="22497" fg:w="7"/><text x="100.0681%" y="335.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="99.8314%" y="309" width="0.0177%" height="15" fill="rgb(208,127,28)" fg:x="22500" fg:w="4"/><text x="100.0814%" y="319.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (24 samples, 0.11%)</title><rect x="99.7471%" y="341" width="0.1065%" height="15" fill="rgb(224,137,22)" fg:x="22481" fg:w="24"/><text x="99.9971%" y="351.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (26 samples, 0.12%)</title><rect x="99.7471%" y="373" width="0.1154%" height="15" fill="rgb(254,70,32)" fg:x="22481" fg:w="26"/><text x="99.9971%" y="383.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (26 samples, 0.12%)</title><rect x="99.7471%" y="357" width="0.1154%" height="15" fill="rgb(229,75,37)" fg:x="22481" fg:w="26"/><text x="99.9971%" y="367.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (16,558 samples, 73.47%)</title><rect x="26.4043%" y="517" width="73.4670%" height="15" fill="rgb(252,64,23)" fg:x="5951" fg:w="16558"/><text x="26.6543%" y="527.50">community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (16,558 samples, 73.47%)</title><rect x="26.4043%" y="501" width="73.4670%" height="15" fill="rgb(232,162,48)" fg:x="5951" fg:w="16558"/><text x="26.6543%" y="511.50">community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (28 samples, 0.12%)</title><rect x="99.7471%" y="485" width="0.1242%" height="15" fill="rgb(246,160,12)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="495.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (28 samples, 0.12%)</title><rect x="99.7471%" y="469" width="0.1242%" height="15" fill="rgb(247,166,0)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="479.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (28 samples, 0.12%)</title><rect x="99.7471%" y="453" width="0.1242%" height="15" fill="rgb(249,219,21)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="463.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (28 samples, 0.12%)</title><rect x="99.7471%" y="437" width="0.1242%" height="15" fill="rgb(205,209,3)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="447.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (28 samples, 0.12%)</title><rect x="99.7471%" y="421" width="0.1242%" height="15" fill="rgb(243,44,1)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="431.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (28 samples, 0.12%)</title><rect x="99.7471%" y="405" width="0.1242%" height="15" fill="rgb(206,159,16)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="415.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (28 samples, 0.12%)</title><rect x="99.7471%" y="389" width="0.1242%" height="15" fill="rgb(244,77,30)" fg:x="22481" fg:w="28"/><text x="99.9971%" y="399.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::sleep (15 samples, 0.07%)</title><rect x="99.8713%" y="517" width="0.0666%" height="15" fill="rgb(218,69,12)" fg:x="22509" fg:w="15"/><text x="100.1213%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (14 samples, 0.06%)</title><rect x="99.8758%" y="501" width="0.0621%" height="15" fill="rgb(212,87,7)" fg:x="22510" fg:w="14"/><text x="100.1258%" y="511.50"></text></g><g><title>all (22,538 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(245,114,25)" fg:x="0" fg:w="22538"/><text x="0.2500%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (18,420 samples, 81.73%)</title><rect x="18.2714%" y="629" width="81.7286%" height="15" fill="rgb(210,61,42)" fg:x="4118" fg:w="18420"/><text x="18.5214%" y="639.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (18,420 samples, 81.73%)</title><rect x="18.2714%" y="613" width="81.7286%" height="15" fill="rgb(211,52,33)" fg:x="4118" fg:w="18420"/><text x="18.5214%" y="623.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>community_sim`std::sys::pal::unix::thread::Thread::new::thread_start (18,389 samples, 81.59%)</title><rect x="18.4089%" y="597" width="81.5911%" height="15" fill="rgb(234,58,33)" fg:x="4149" fg:w="18389"/><text x="18.6589%" y="607.50">community_sim`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}} (18,389 samples, 81.59%)</title><rect x="18.4089%" y="581" width="81.5911%" height="15" fill="rgb(220,115,36)" fg:x="4149" fg:w="18389"/><text x="18.6589%" y="591.50">community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (18,389 samples, 81.59%)</title><rect x="18.4089%" y="565" width="81.5911%" height="15" fill="rgb(243,153,54)" fg:x="4149" fg:w="18389"/><text x="18.6589%" y="575.50">community_sim`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>community_sim`rayon_core::registry::ThreadBuilder::run (18,389 samples, 81.59%)</title><rect x="18.4089%" y="549" width="81.5911%" height="15" fill="rgb(251,47,18)" fg:x="4149" fg:w="18389"/><text x="18.6589%" y="559.50">community_sim`rayon_core::registry::ThreadBuilder::run</text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (18,389 samples, 81.59%)</title><rect x="18.4089%" y="533" width="81.5911%" height="15" fill="rgb(242,102,42)" fg:x="4149" fg:w="18389"/><text x="18.6589%" y="543.50">community_sim`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>libsystem_kernel.dylib`swtch_pri (13 samples, 0.06%)</title><rect x="99.9423%" y="517" width="0.0577%" height="15" fill="rgb(234,31,38)" fg:x="22525" fg:w="13"/><text x="100.1923%" y="527.50"></text></g></svg></svg>