<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="28868"><g><title>libSDL2-2.0.0.dylib`METAL_CreateRenderer (3 samples, 0.01%)</title><rect x="0.0035%" y="533" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="3"/><text x="0.2535%" y="543.50"></text></g><g><title>community_sim`sdl2::render::CanvasBuilder::build (4 samples, 0.01%)</title><rect x="0.0035%" y="565" width="0.0139%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.2535%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRenderer_REAL (4 samples, 0.01%)</title><rect x="0.0035%" y="549" width="0.0139%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.2535%" y="559.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (3 samples, 0.01%)</title><rect x="0.0346%" y="293" width="0.0104%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="3"/><text x="0.2846%" y="303.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (3 samples, 0.01%)</title><rect x="0.0346%" y="277" width="0.0104%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="3"/><text x="0.2846%" y="287.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (3 samples, 0.01%)</title><rect x="0.0346%" y="261" width="0.0104%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="3"/><text x="0.2846%" y="271.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (3 samples, 0.01%)</title><rect x="0.0346%" y="245" width="0.0104%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="3"/><text x="0.2846%" y="255.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (3 samples, 0.01%)</title><rect x="0.0346%" y="229" width="0.0104%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="3"/><text x="0.2846%" y="239.50"></text></g><g><title>AppKit`-[NSButtonCell init] (3 samples, 0.01%)</title><rect x="0.0346%" y="213" width="0.0104%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="3"/><text x="0.2846%" y="223.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (3 samples, 0.01%)</title><rect x="0.0346%" y="197" width="0.0104%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="3"/><text x="0.2846%" y="207.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (3 samples, 0.01%)</title><rect x="0.0346%" y="181" width="0.0104%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="3"/><text x="0.2846%" y="191.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (8 samples, 0.03%)</title><rect x="0.0277%" y="437" width="0.0277%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="8"/><text x="0.2777%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (8 samples, 0.03%)</title><rect x="0.0277%" y="421" width="0.0277%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="8"/><text x="0.2777%" y="431.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.02%)</title><rect x="0.0312%" y="405" width="0.0242%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="7"/><text x="0.2812%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.02%)</title><rect x="0.0312%" y="389" width="0.0242%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="7"/><text x="0.2812%" y="399.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (7 samples, 0.02%)</title><rect x="0.0312%" y="373" width="0.0242%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="7"/><text x="0.2812%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (7 samples, 0.02%)</title><rect x="0.0312%" y="357" width="0.0242%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="7"/><text x="0.2812%" y="367.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (7 samples, 0.02%)</title><rect x="0.0312%" y="341" width="0.0242%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="7"/><text x="0.2812%" y="351.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (7 samples, 0.02%)</title><rect x="0.0312%" y="325" width="0.0242%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="7"/><text x="0.2812%" y="335.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.02%)</title><rect x="0.0312%" y="309" width="0.0242%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="7"/><text x="0.2812%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (13 samples, 0.05%)</title><rect x="0.0277%" y="453" width="0.0450%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="13"/><text x="0.2777%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (5 samples, 0.02%)</title><rect x="0.0554%" y="437" width="0.0173%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="5"/><text x="0.3054%" y="447.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (5 samples, 0.02%)</title><rect x="0.0554%" y="421" width="0.0173%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="5"/><text x="0.3054%" y="431.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (3 samples, 0.01%)</title><rect x="0.0624%" y="405" width="0.0104%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="3"/><text x="0.3124%" y="415.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (3 samples, 0.01%)</title><rect x="0.0797%" y="325" width="0.0104%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="3"/><text x="0.3297%" y="335.50"></text></g><g><title>Metal`getMetalPluginClassForService (3 samples, 0.01%)</title><rect x="0.0797%" y="309" width="0.0104%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="3"/><text x="0.3297%" y="319.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (3 samples, 0.01%)</title><rect x="0.0797%" y="293" width="0.0104%" height="15" fill="rgb(225,111,53)" fg:x="23" fg:w="3"/><text x="0.3297%" y="303.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (3 samples, 0.01%)</title><rect x="0.0797%" y="277" width="0.0104%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="3"/><text x="0.3297%" y="287.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (3 samples, 0.01%)</title><rect x="0.0797%" y="261" width="0.0104%" height="15" fill="rgb(214,148,48)" fg:x="23" fg:w="3"/><text x="0.3297%" y="271.50"></text></g><g><title>Metal`MTLCopyAllDevices (4 samples, 0.01%)</title><rect x="0.0797%" y="357" width="0.0139%" height="15" fill="rgb(232,36,49)" fg:x="23" fg:w="4"/><text x="0.3297%" y="367.50"></text></g><g><title>Metal`MTLRegisterDevices (4 samples, 0.01%)</title><rect x="0.0797%" y="341" width="0.0139%" height="15" fill="rgb(209,103,24)" fg:x="23" fg:w="4"/><text x="0.3297%" y="351.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (5 samples, 0.02%)</title><rect x="0.0797%" y="421" width="0.0173%" height="15" fill="rgb(229,88,8)" fg:x="23" fg:w="5"/><text x="0.3297%" y="431.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (5 samples, 0.02%)</title><rect x="0.0797%" y="405" width="0.0173%" height="15" fill="rgb(213,181,19)" fg:x="23" fg:w="5"/><text x="0.3297%" y="415.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (5 samples, 0.02%)</title><rect x="0.0797%" y="389" width="0.0173%" height="15" fill="rgb(254,191,54)" fg:x="23" fg:w="5"/><text x="0.3297%" y="399.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (5 samples, 0.02%)</title><rect x="0.0797%" y="373" width="0.0173%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="5"/><text x="0.3297%" y="383.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (8 samples, 0.03%)</title><rect x="0.0727%" y="453" width="0.0277%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="8"/><text x="0.3227%" y="463.50"></text></g><g><title>AppKit`_NXCreateWindow (6 samples, 0.02%)</title><rect x="0.0797%" y="437" width="0.0208%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="6"/><text x="0.3297%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateWindow (24 samples, 0.08%)</title><rect x="0.0208%" y="533" width="0.0831%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="24"/><text x="0.2708%" y="543.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:screen:] (24 samples, 0.08%)</title><rect x="0.0208%" y="517" width="0.0831%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="24"/><text x="0.2708%" y="527.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (24 samples, 0.08%)</title><rect x="0.0208%" y="501" width="0.0831%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="24"/><text x="0.2708%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (24 samples, 0.08%)</title><rect x="0.0208%" y="485" width="0.0831%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="24"/><text x="0.2708%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (22 samples, 0.08%)</title><rect x="0.0277%" y="469" width="0.0762%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="22"/><text x="0.2777%" y="479.50"></text></g><g><title>community_sim`sdl2::video::WindowBuilder::build (27 samples, 0.09%)</title><rect x="0.0208%" y="565" width="0.0935%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="27"/><text x="0.2708%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateWindow_REAL (27 samples, 0.09%)</title><rect x="0.0208%" y="549" width="0.0935%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="27"/><text x="0.2708%" y="559.50"></text></g><g><title>AppKit`-[NSApplication init] (9 samples, 0.03%)</title><rect x="0.1143%" y="485" width="0.0312%" height="15" fill="rgb(222,207,29)" fg:x="33" fg:w="9"/><text x="0.3643%" y="495.50"></text></g><g><title>AppKit`_NSInitializeAppContext (3 samples, 0.01%)</title><rect x="0.1351%" y="469" width="0.0104%" height="15" fill="rgb(206,96,30)" fg:x="39" fg:w="3"/><text x="0.3851%" y="479.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (3 samples, 0.01%)</title><rect x="0.1351%" y="453" width="0.0104%" height="15" fill="rgb(218,138,4)" fg:x="39" fg:w="3"/><text x="0.3851%" y="463.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (10 samples, 0.03%)</title><rect x="0.1143%" y="501" width="0.0346%" height="15" fill="rgb(250,191,14)" fg:x="33" fg:w="10"/><text x="0.3643%" y="511.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (3 samples, 0.01%)</title><rect x="0.1490%" y="501" width="0.0104%" height="15" fill="rgb(239,60,40)" fg:x="43" fg:w="3"/><text x="0.3990%" y="511.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (3 samples, 0.01%)</title><rect x="0.1490%" y="485" width="0.0104%" height="15" fill="rgb(206,27,48)" fg:x="43" fg:w="3"/><text x="0.3990%" y="495.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (3 samples, 0.01%)</title><rect x="0.1490%" y="469" width="0.0104%" height="15" fill="rgb(225,35,8)" fg:x="43" fg:w="3"/><text x="0.3990%" y="479.50"></text></g><g><title>Foundation`_NSFaultInObject (3 samples, 0.01%)</title><rect x="0.1490%" y="453" width="0.0104%" height="15" fill="rgb(250,213,24)" fg:x="43" fg:w="3"/><text x="0.3990%" y="463.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (3 samples, 0.01%)</title><rect x="0.1490%" y="437" width="0.0104%" height="15" fill="rgb(247,123,22)" fg:x="43" fg:w="3"/><text x="0.3990%" y="447.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (3 samples, 0.01%)</title><rect x="0.1490%" y="421" width="0.0104%" height="15" fill="rgb(231,138,38)" fg:x="43" fg:w="3"/><text x="0.3990%" y="431.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (3 samples, 0.01%)</title><rect x="0.1490%" y="405" width="0.0104%" height="15" fill="rgb(231,145,46)" fg:x="43" fg:w="3"/><text x="0.3990%" y="415.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (5 samples, 0.02%)</title><rect x="0.1593%" y="373" width="0.0173%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="5"/><text x="0.4093%" y="383.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)::$_0::operator() (4 samples, 0.01%)</title><rect x="0.1628%" y="357" width="0.0139%" height="15" fill="rgb(217,147,25)" fg:x="47" fg:w="4"/><text x="0.4128%" y="367.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.01%)</title><rect x="0.1628%" y="341" width="0.0139%" height="15" fill="rgb(247,81,37)" fg:x="47" fg:w="4"/><text x="0.4128%" y="351.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.01%)</title><rect x="0.1628%" y="325" width="0.0139%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="4"/><text x="0.4128%" y="335.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (6 samples, 0.02%)</title><rect x="0.1593%" y="453" width="0.0208%" height="15" fill="rgb(227,1,9)" fg:x="46" fg:w="6"/><text x="0.4093%" y="463.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (6 samples, 0.02%)</title><rect x="0.1593%" y="437" width="0.0208%" height="15" fill="rgb(248,47,43)" fg:x="46" fg:w="6"/><text x="0.4093%" y="447.50"></text></g><g><title>SoftLinking`_sl_dlopen (6 samples, 0.02%)</title><rect x="0.1593%" y="421" width="0.0208%" height="15" fill="rgb(221,10,30)" fg:x="46" fg:w="6"/><text x="0.4093%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (6 samples, 0.02%)</title><rect x="0.1593%" y="405" width="0.0208%" height="15" fill="rgb(210,229,1)" fg:x="46" fg:w="6"/><text x="0.4093%" y="415.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (6 samples, 0.02%)</title><rect x="0.1593%" y="389" width="0.0208%" height="15" fill="rgb(222,148,37)" fg:x="46" fg:w="6"/><text x="0.4093%" y="399.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (7 samples, 0.02%)</title><rect x="0.1593%" y="485" width="0.0242%" height="15" fill="rgb(234,67,33)" fg:x="46" fg:w="7"/><text x="0.4093%" y="495.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (7 samples, 0.02%)</title><rect x="0.1593%" y="469" width="0.0242%" height="15" fill="rgb(247,98,35)" fg:x="46" fg:w="7"/><text x="0.4093%" y="479.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (8 samples, 0.03%)</title><rect x="0.1593%" y="501" width="0.0277%" height="15" fill="rgb(247,138,52)" fg:x="46" fg:w="8"/><text x="0.4093%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateDevice (25 samples, 0.09%)</title><rect x="0.1143%" y="533" width="0.0866%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="25"/><text x="0.3643%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_RegisterApp (25 samples, 0.09%)</title><rect x="0.1143%" y="517" width="0.0866%" height="15" fill="rgb(246,177,23)" fg:x="33" fg:w="25"/><text x="0.3643%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_InitKeyboard (3 samples, 0.01%)</title><rect x="0.2078%" y="517" width="0.0104%" height="15" fill="rgb(230,62,27)" fg:x="60" fg:w="3"/><text x="0.4578%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`UpdateKeymap (3 samples, 0.01%)</title><rect x="0.2078%" y="501" width="0.0104%" height="15" fill="rgb(216,154,8)" fg:x="60" fg:w="3"/><text x="0.4578%" y="511.50"></text></g><g><title>HIToolbox`TISCopyCurrentKeyboardLayoutInputSource (3 samples, 0.01%)</title><rect x="0.2078%" y="485" width="0.0104%" height="15" fill="rgb(244,35,45)" fg:x="60" fg:w="3"/><text x="0.4578%" y="495.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardLayoutInputSourceRefCreate (3 samples, 0.01%)</title><rect x="0.2078%" y="469" width="0.0104%" height="15" fill="rgb(251,115,12)" fg:x="60" fg:w="3"/><text x="0.4578%" y="479.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardLayoutInputSourceRefCreate.cold.1 (3 samples, 0.01%)</title><rect x="0.2078%" y="453" width="0.0104%" height="15" fill="rgb(240,54,50)" fg:x="60" fg:w="3"/><text x="0.4578%" y="463.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::init_sdl2 (63 samples, 0.22%)</title><rect x="0.0035%" y="581" width="0.2182%" height="15" fill="rgb(233,84,52)" fg:x="1" fg:w="63"/><text x="0.2535%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InitSubSystem_REAL (31 samples, 0.11%)</title><rect x="0.1143%" y="565" width="0.1074%" height="15" fill="rgb(207,117,47)" fg:x="33" fg:w="31"/><text x="0.3643%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_VideoInit_REAL (31 samples, 0.11%)</title><rect x="0.1143%" y="549" width="0.1074%" height="15" fill="rgb(249,43,39)" fg:x="33" fg:w="31"/><text x="0.3643%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_VideoInit (4 samples, 0.01%)</title><rect x="0.2078%" y="533" width="0.0139%" height="15" fill="rgb(209,38,44)" fg:x="60" fg:w="4"/><text x="0.4578%" y="543.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_RenderFillRect (18 samples, 0.06%)</title><rect x="0.2217%" y="565" width="0.0624%" height="15" fill="rgb(236,212,23)" fg:x="64" fg:w="18"/><text x="0.4717%" y="575.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_SetRenderDrawColor (19 samples, 0.07%)</title><rect x="0.2841%" y="565" width="0.0658%" height="15" fill="rgb(242,79,21)" fg:x="82" fg:w="19"/><text x="0.5341%" y="575.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (5 samples, 0.02%)</title><rect x="0.3880%" y="293" width="0.0173%" height="15" fill="rgb(211,96,35)" fg:x="112" fg:w="5"/><text x="0.6380%" y="303.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (5 samples, 0.02%)</title><rect x="0.3880%" y="277" width="0.0173%" height="15" fill="rgb(253,215,40)" fg:x="112" fg:w="5"/><text x="0.6380%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.01%)</title><rect x="0.3914%" y="261" width="0.0139%" height="15" fill="rgb(211,81,21)" fg:x="113" fg:w="4"/><text x="0.6414%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.01%)</title><rect x="0.3914%" y="245" width="0.0139%" height="15" fill="rgb(208,190,38)" fg:x="113" fg:w="4"/><text x="0.6414%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="0.3914%" y="229" width="0.0139%" height="15" fill="rgb(235,213,38)" fg:x="113" fg:w="4"/><text x="0.6414%" y="239.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (7 samples, 0.02%)</title><rect x="0.3845%" y="373" width="0.0242%" height="15" fill="rgb(237,122,38)" fg:x="111" fg:w="7"/><text x="0.6345%" y="383.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (7 samples, 0.02%)</title><rect x="0.3845%" y="357" width="0.0242%" height="15" fill="rgb(244,218,35)" fg:x="111" fg:w="7"/><text x="0.6345%" y="367.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (7 samples, 0.02%)</title><rect x="0.3845%" y="341" width="0.0242%" height="15" fill="rgb(240,68,47)" fg:x="111" fg:w="7"/><text x="0.6345%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (7 samples, 0.02%)</title><rect x="0.3845%" y="325" width="0.0242%" height="15" fill="rgb(210,16,53)" fg:x="111" fg:w="7"/><text x="0.6345%" y="335.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (7 samples, 0.02%)</title><rect x="0.3845%" y="309" width="0.0242%" height="15" fill="rgb(235,124,12)" fg:x="111" fg:w="7"/><text x="0.6345%" y="319.50"></text></g><g><title>libicucore.A.dylib`ulocdata_getExemplarSet (4 samples, 0.01%)</title><rect x="0.4122%" y="245" width="0.0139%" height="15" fill="rgb(224,169,11)" fg:x="119" fg:w="4"/><text x="0.6622%" y="255.50"></text></g><g><title>libicucore.A.dylib`uset_openPatternOptions (4 samples, 0.01%)</title><rect x="0.4122%" y="229" width="0.0139%" height="15" fill="rgb(250,166,2)" fg:x="119" fg:w="4"/><text x="0.6622%" y="239.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (4 samples, 0.01%)</title><rect x="0.4122%" y="213" width="0.0139%" height="15" fill="rgb(242,216,29)" fg:x="119" fg:w="4"/><text x="0.6622%" y="223.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (4 samples, 0.01%)</title><rect x="0.4122%" y="197" width="0.0139%" height="15" fill="rgb(230,116,27)" fg:x="119" fg:w="4"/><text x="0.6622%" y="207.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (4 samples, 0.01%)</title><rect x="0.4122%" y="181" width="0.0139%" height="15" fill="rgb(228,99,48)" fg:x="119" fg:w="4"/><text x="0.6622%" y="191.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOver (3 samples, 0.01%)</title><rect x="0.4157%" y="165" width="0.0104%" height="15" fill="rgb(253,11,6)" fg:x="120" fg:w="3"/><text x="0.6657%" y="175.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::closeOverAddCaseMappings (3 samples, 0.01%)</title><rect x="0.4157%" y="149" width="0.0104%" height="15" fill="rgb(247,143,39)" fg:x="120" fg:w="3"/><text x="0.6657%" y="159.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (6 samples, 0.02%)</title><rect x="0.4122%" y="325" width="0.0208%" height="15" fill="rgb(236,97,10)" fg:x="119" fg:w="6"/><text x="0.6622%" y="335.50"></text></g><g><title>AppKit`__46-[NSIATextInputActionsContext updateInputMode]_block_invoke (6 samples, 0.02%)</title><rect x="0.4122%" y="309" width="0.0208%" height="15" fill="rgb(233,208,19)" fg:x="119" fg:w="6"/><text x="0.6622%" y="319.50"></text></g><g><title>HIToolbox`TSMGetInputSourcePropertyWithSetter (6 samples, 0.02%)</title><rect x="0.4122%" y="293" width="0.0208%" height="15" fill="rgb(216,164,2)" fg:x="119" fg:w="6"/><text x="0.6622%" y="303.50"></text></g><g><title>HIToolbox`islGetInputSourcePropertyWithSetter (6 samples, 0.02%)</title><rect x="0.4122%" y="277" width="0.0208%" height="15" fill="rgb(220,129,5)" fg:x="119" fg:w="6"/><text x="0.6622%" y="287.50"></text></g><g><title>HIToolbox`TISCreatePropertyInputSourceLanguages (6 samples, 0.02%)</title><rect x="0.4122%" y="261" width="0.0208%" height="15" fill="rgb(242,17,10)" fg:x="119" fg:w="6"/><text x="0.6622%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (9 samples, 0.03%)</title><rect x="0.4122%" y="357" width="0.0312%" height="15" fill="rgb(242,107,0)" fg:x="119" fg:w="9"/><text x="0.6622%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (9 samples, 0.03%)</title><rect x="0.4122%" y="341" width="0.0312%" height="15" fill="rgb(251,28,31)" fg:x="119" fg:w="9"/><text x="0.6622%" y="351.50"></text></g><g><title>ViewBridge`deferredBlockOpportunity_block_invoke_2 (3 samples, 0.01%)</title><rect x="0.4330%" y="325" width="0.0104%" height="15" fill="rgb(233,223,10)" fg:x="125" fg:w="3"/><text x="0.6830%" y="335.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (3 samples, 0.01%)</title><rect x="0.4330%" y="309" width="0.0104%" height="15" fill="rgb(215,21,27)" fg:x="125" fg:w="3"/><text x="0.6830%" y="319.50"></text></g><g><title>ViewBridge`__deferNSXPCInvocationOntoMainThread_block_invoke (3 samples, 0.01%)</title><rect x="0.4330%" y="293" width="0.0104%" height="15" fill="rgb(232,23,21)" fg:x="125" fg:w="3"/><text x="0.6830%" y="303.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (3 samples, 0.01%)</title><rect x="0.4330%" y="277" width="0.0104%" height="15" fill="rgb(244,5,23)" fg:x="125" fg:w="3"/><text x="0.6830%" y="287.50"></text></g><g><title>CoreFoundation`__invoking___ (3 samples, 0.01%)</title><rect x="0.4330%" y="261" width="0.0104%" height="15" fill="rgb(226,81,46)" fg:x="125" fg:w="3"/><text x="0.6830%" y="271.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (4 samples, 0.01%)</title><rect x="0.4469%" y="293" width="0.0139%" height="15" fill="rgb(247,70,30)" fg:x="129" fg:w="4"/><text x="0.6969%" y="303.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.01%)</title><rect x="0.4469%" y="277" width="0.0139%" height="15" fill="rgb(212,68,19)" fg:x="129" fg:w="4"/><text x="0.6969%" y="287.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (4 samples, 0.01%)</title><rect x="0.4469%" y="261" width="0.0139%" height="15" fill="rgb(240,187,13)" fg:x="129" fg:w="4"/><text x="0.6969%" y="271.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (5 samples, 0.02%)</title><rect x="0.4469%" y="309" width="0.0173%" height="15" fill="rgb(223,113,26)" fg:x="129" fg:w="5"/><text x="0.6969%" y="319.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.01%)</title><rect x="0.4711%" y="229" width="0.0139%" height="15" fill="rgb(206,192,2)" fg:x="136" fg:w="4"/><text x="0.7211%" y="239.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (4 samples, 0.01%)</title><rect x="0.4711%" y="213" width="0.0139%" height="15" fill="rgb(241,108,4)" fg:x="136" fg:w="4"/><text x="0.7211%" y="223.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.01%)</title><rect x="0.4711%" y="197" width="0.0139%" height="15" fill="rgb(247,173,49)" fg:x="136" fg:w="4"/><text x="0.7211%" y="207.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (4 samples, 0.01%)</title><rect x="0.4711%" y="181" width="0.0139%" height="15" fill="rgb(224,114,35)" fg:x="136" fg:w="4"/><text x="0.7211%" y="191.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (7 samples, 0.02%)</title><rect x="0.4676%" y="261" width="0.0242%" height="15" fill="rgb(245,159,27)" fg:x="135" fg:w="7"/><text x="0.7176%" y="271.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (6 samples, 0.02%)</title><rect x="0.4711%" y="245" width="0.0208%" height="15" fill="rgb(245,172,44)" fg:x="136" fg:w="6"/><text x="0.7211%" y="255.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (11 samples, 0.04%)</title><rect x="0.4642%" y="277" width="0.0381%" height="15" fill="rgb(236,23,11)" fg:x="134" fg:w="11"/><text x="0.7142%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (22 samples, 0.08%)</title><rect x="0.4434%" y="357" width="0.0762%" height="15" fill="rgb(205,117,38)" fg:x="128" fg:w="22"/><text x="0.6934%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (21 samples, 0.07%)</title><rect x="0.4469%" y="341" width="0.0727%" height="15" fill="rgb(237,72,25)" fg:x="129" fg:w="21"/><text x="0.6969%" y="351.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (21 samples, 0.07%)</title><rect x="0.4469%" y="325" width="0.0727%" height="15" fill="rgb(244,70,9)" fg:x="129" fg:w="21"/><text x="0.6969%" y="335.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (16 samples, 0.06%)</title><rect x="0.4642%" y="309" width="0.0554%" height="15" fill="rgb(217,125,39)" fg:x="134" fg:w="16"/><text x="0.7142%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (16 samples, 0.06%)</title><rect x="0.4642%" y="293" width="0.0554%" height="15" fill="rgb(235,36,10)" fg:x="134" fg:w="16"/><text x="0.7142%" y="303.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (5 samples, 0.02%)</title><rect x="0.5023%" y="277" width="0.0173%" height="15" fill="rgb(251,123,47)" fg:x="145" fg:w="5"/><text x="0.7523%" y="287.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (5 samples, 0.02%)</title><rect x="0.5023%" y="261" width="0.0173%" height="15" fill="rgb(221,13,13)" fg:x="145" fg:w="5"/><text x="0.7523%" y="271.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (5 samples, 0.02%)</title><rect x="0.5023%" y="245" width="0.0173%" height="15" fill="rgb(238,131,9)" fg:x="145" fg:w="5"/><text x="0.7523%" y="255.50"></text></g><g><title>AppKit`_NXFinishActivation (4 samples, 0.01%)</title><rect x="0.5231%" y="197" width="0.0139%" height="15" fill="rgb(211,50,8)" fg:x="151" fg:w="4"/><text x="0.7731%" y="207.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (4 samples, 0.01%)</title><rect x="0.5231%" y="181" width="0.0139%" height="15" fill="rgb(245,182,24)" fg:x="151" fg:w="4"/><text x="0.7731%" y="191.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (4 samples, 0.01%)</title><rect x="0.5231%" y="165" width="0.0139%" height="15" fill="rgb(242,14,37)" fg:x="151" fg:w="4"/><text x="0.7731%" y="175.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (4 samples, 0.01%)</title><rect x="0.5231%" y="149" width="0.0139%" height="15" fill="rgb(246,228,12)" fg:x="151" fg:w="4"/><text x="0.7731%" y="159.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (4 samples, 0.01%)</title><rect x="0.5231%" y="133" width="0.0139%" height="15" fill="rgb(213,55,15)" fg:x="151" fg:w="4"/><text x="0.7731%" y="143.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (4 samples, 0.01%)</title><rect x="0.5231%" y="117" width="0.0139%" height="15" fill="rgb(209,9,3)" fg:x="151" fg:w="4"/><text x="0.7731%" y="127.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (4 samples, 0.01%)</title><rect x="0.5231%" y="101" width="0.0139%" height="15" fill="rgb(230,59,30)" fg:x="151" fg:w="4"/><text x="0.7731%" y="111.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (4 samples, 0.01%)</title><rect x="0.5231%" y="85" width="0.0139%" height="15" fill="rgb(209,121,21)" fg:x="151" fg:w="4"/><text x="0.7731%" y="95.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (3 samples, 0.01%)</title><rect x="0.5265%" y="69" width="0.0104%" height="15" fill="rgb(220,109,13)" fg:x="152" fg:w="3"/><text x="0.7765%" y="79.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (46 samples, 0.16%)</title><rect x="0.3810%" y="389" width="0.1593%" height="15" fill="rgb(232,18,1)" fg:x="110" fg:w="46"/><text x="0.6310%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (38 samples, 0.13%)</title><rect x="0.4088%" y="373" width="0.1316%" height="15" fill="rgb(215,41,42)" fg:x="118" fg:w="38"/><text x="0.6588%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (6 samples, 0.02%)</title><rect x="0.5196%" y="357" width="0.0208%" height="15" fill="rgb(224,123,36)" fg:x="150" fg:w="6"/><text x="0.7696%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (6 samples, 0.02%)</title><rect x="0.5196%" y="341" width="0.0208%" height="15" fill="rgb(240,125,3)" fg:x="150" fg:w="6"/><text x="0.7696%" y="351.50"></text></g><g><title>HIServices`mshMIGPerform (6 samples, 0.02%)</title><rect x="0.5196%" y="325" width="0.0208%" height="15" fill="rgb(205,98,50)" fg:x="150" fg:w="6"/><text x="0.7696%" y="335.50"></text></g><g><title>HIServices`_XSelectWindow (6 samples, 0.02%)</title><rect x="0.5196%" y="309" width="0.0208%" height="15" fill="rgb(205,185,37)" fg:x="150" fg:w="6"/><text x="0.7696%" y="319.50"></text></g><g><title>HIServices`_DCXSelectWindow (6 samples, 0.02%)</title><rect x="0.5196%" y="293" width="0.0208%" height="15" fill="rgb(238,207,15)" fg:x="150" fg:w="6"/><text x="0.7696%" y="303.50"></text></g><g><title>HIToolbox`DockCallback(unsigned int, unsigned int, void*, void*) (6 samples, 0.02%)</title><rect x="0.5196%" y="277" width="0.0208%" height="15" fill="rgb(213,199,42)" fg:x="150" fg:w="6"/><text x="0.7696%" y="287.50"></text></g><g><title>AppKit`_NSCGSDockMessageReceive (6 samples, 0.02%)</title><rect x="0.5196%" y="261" width="0.0208%" height="15" fill="rgb(235,201,11)" fg:x="150" fg:w="6"/><text x="0.7696%" y="271.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _doRestoreComingFromDock:forceActivation:wantsToBeKey:] (6 samples, 0.02%)</title><rect x="0.5196%" y="245" width="0.0208%" height="15" fill="rgb(207,46,11)" fg:x="150" fg:w="6"/><text x="0.7696%" y="255.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _prepareToRestoreFromDock:forceActivation:wantsToBeKey:] (6 samples, 0.02%)</title><rect x="0.5196%" y="229" width="0.0208%" height="15" fill="rgb(241,35,35)" fg:x="150" fg:w="6"/><text x="0.7696%" y="239.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _prepareToRestoreRegularFromDock:forceActivation:wantsToBeKey:] (6 samples, 0.02%)</title><rect x="0.5196%" y="213" width="0.0208%" height="15" fill="rgb(243,32,47)" fg:x="150" fg:w="6"/><text x="0.7696%" y="223.50"></text></g><g><title>AppKit`_DPSNextEvent (55 samples, 0.19%)</title><rect x="0.3637%" y="453" width="0.1905%" height="15" fill="rgb(247,202,23)" fg:x="105" fg:w="55"/><text x="0.6137%" y="463.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (51 samples, 0.18%)</title><rect x="0.3776%" y="437" width="0.1767%" height="15" fill="rgb(219,102,11)" fg:x="109" fg:w="51"/><text x="0.6276%" y="447.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (51 samples, 0.18%)</title><rect x="0.3776%" y="421" width="0.1767%" height="15" fill="rgb(243,110,44)" fg:x="109" fg:w="51"/><text x="0.6276%" y="431.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (50 samples, 0.17%)</title><rect x="0.3810%" y="405" width="0.1732%" height="15" fill="rgb(222,74,54)" fg:x="110" fg:w="50"/><text x="0.6310%" y="415.50"></text></g><g><title>LaunchServices`_LSCopyFrontApplication (3 samples, 0.01%)</title><rect x="0.5577%" y="437" width="0.0104%" height="15" fill="rgb(216,99,12)" fg:x="161" fg:w="3"/><text x="0.8077%" y="447.50"></text></g><g><title>LaunchServices`IsLSServerConnected(LSSessionID, bool) (3 samples, 0.01%)</title><rect x="0.5577%" y="421" width="0.0104%" height="15" fill="rgb(226,22,26)" fg:x="161" fg:w="3"/><text x="0.8077%" y="431.50"></text></g><g><title>LaunchServices`clientIsAllowedToConnect(__CFDictionary const*) (3 samples, 0.01%)</title><rect x="0.5577%" y="405" width="0.0104%" height="15" fill="rgb(217,163,10)" fg:x="161" fg:w="3"/><text x="0.8077%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="0.5577%" y="389" width="0.0104%" height="15" fill="rgb(213,25,53)" fg:x="161" fg:w="3"/><text x="0.8077%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="0.5577%" y="373" width="0.0104%" height="15" fill="rgb(252,105,26)" fg:x="161" fg:w="3"/><text x="0.8077%" y="383.50"></text></g><g><title>LaunchServices`invocation function for block in clientIsAllowedToConnect(__CFDictionary const*) (3 samples, 0.01%)</title><rect x="0.5577%" y="357" width="0.0104%" height="15" fill="rgb(220,39,43)" fg:x="161" fg:w="3"/><text x="0.8077%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (3 samples, 0.01%)</title><rect x="0.5577%" y="341" width="0.0104%" height="15" fill="rgb(229,68,48)" fg:x="161" fg:w="3"/><text x="0.8077%" y="351.50"></text></g><g><title>AppKit`_NS_SetBasicPasteTelemetry (4 samples, 0.01%)</title><rect x="0.5577%" y="453" width="0.0139%" height="15" fill="rgb(252,8,32)" fg:x="161" fg:w="4"/><text x="0.8077%" y="463.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (64 samples, 0.22%)</title><rect x="0.3533%" y="469" width="0.2217%" height="15" fill="rgb(223,20,43)" fg:x="102" fg:w="64"/><text x="0.6033%" y="479.50"></text></g><g><title>AppKit`getServiceEntries (3 samples, 0.01%)</title><rect x="0.5924%" y="149" width="0.0104%" height="15" fill="rgb(229,81,49)" fg:x="171" fg:w="3"/><text x="0.8424%" y="159.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (4 samples, 0.01%)</title><rect x="0.5924%" y="309" width="0.0139%" height="15" fill="rgb(236,28,36)" fg:x="171" fg:w="4"/><text x="0.8424%" y="319.50"></text></g><g><title>AppKit`_populateMenu (4 samples, 0.01%)</title><rect x="0.5924%" y="293" width="0.0139%" height="15" fill="rgb(249,185,26)" fg:x="171" fg:w="4"/><text x="0.8424%" y="303.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:incomplete:] (4 samples, 0.01%)</title><rect x="0.5924%" y="277" width="0.0139%" height="15" fill="rgb(249,174,33)" fg:x="171" fg:w="4"/><text x="0.8424%" y="287.50"></text></g><g><title>AppKit`-[NSMenu _withUpdateFlags:do:] (4 samples, 0.01%)</title><rect x="0.5924%" y="261" width="0.0139%" height="15" fill="rgb(233,201,37)" fg:x="171" fg:w="4"/><text x="0.8424%" y="271.50"></text></g><g><title>AppKit`__49-[NSMenu _populateWithFlags:eventRef:incomplete:]_block_invoke (4 samples, 0.01%)</title><rect x="0.5924%" y="245" width="0.0139%" height="15" fill="rgb(221,78,26)" fg:x="171" fg:w="4"/><text x="0.8424%" y="255.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (4 samples, 0.01%)</title><rect x="0.5924%" y="229" width="0.0139%" height="15" fill="rgb(250,127,30)" fg:x="171" fg:w="4"/><text x="0.8424%" y="239.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (4 samples, 0.01%)</title><rect x="0.5924%" y="213" width="0.0139%" height="15" fill="rgb(230,49,44)" fg:x="171" fg:w="4"/><text x="0.8424%" y="223.50"></text></g><g><title>AppKit`-[_NSServicesPrincipalMenuUpdater updateMenu:withEvent:withFlags:] (4 samples, 0.01%)</title><rect x="0.5924%" y="197" width="0.0139%" height="15" fill="rgb(229,67,23)" fg:x="171" fg:w="4"/><text x="0.8424%" y="207.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] (4 samples, 0.01%)</title><rect x="0.5924%" y="181" width="0.0139%" height="15" fill="rgb(249,83,47)" fg:x="171" fg:w="4"/><text x="0.8424%" y="191.50"></text></g><g><title>AppKit`-[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] (4 samples, 0.01%)</title><rect x="0.5924%" y="165" width="0.0139%" height="15" fill="rgb(215,43,3)" fg:x="171" fg:w="4"/><text x="0.8424%" y="175.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _imageWithSymbolName:inCatalog:variableValue:accessibilityDescription:createdWithCompatibilityImageName:] (3 samples, 0.01%)</title><rect x="0.6062%" y="117" width="0.0104%" height="15" fill="rgb(238,154,13)" fg:x="175" fg:w="3"/><text x="0.8562%" y="127.50"></text></g><g><title>AppKit`-[NSImage bestRepresentationForHints:] (3 samples, 0.01%)</title><rect x="0.6062%" y="101" width="0.0104%" height="15" fill="rgb(219,56,2)" fg:x="175" fg:w="3"/><text x="0.8562%" y="111.50"></text></g><g><title>AppKit`__38-[NSImage bestRepresentationForHints:]_block_invoke (3 samples, 0.01%)</title><rect x="0.6062%" y="85" width="0.0104%" height="15" fill="rgb(233,0,4)" fg:x="175" fg:w="3"/><text x="0.8562%" y="95.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider bestRepresentationForImage:hints:] (3 samples, 0.01%)</title><rect x="0.6062%" y="69" width="0.0104%" height="15" fill="rgb(235,30,7)" fg:x="175" fg:w="3"/><text x="0.8562%" y="79.50"></text></g><g><title>AppKit`-[_NSSimpleLRUCache objectForKey:creationBlock:] (3 samples, 0.01%)</title><rect x="0.6062%" y="53" width="0.0104%" height="15" fill="rgb(250,79,13)" fg:x="175" fg:w="3"/><text x="0.8562%" y="63.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider _bestRepresentationForImage:hints:] (3 samples, 0.01%)</title><rect x="0.6062%" y="37" width="0.0104%" height="15" fill="rgb(211,146,34)" fg:x="175" fg:w="3"/><text x="0.8562%" y="47.50"></text></g><g><title>AppKit`_NSAddMoveAndResizeByHalvesItems (3 samples, 0.01%)</title><rect x="0.6201%" y="117" width="0.0104%" height="15" fill="rgb(228,22,38)" fg:x="179" fg:w="3"/><text x="0.8701%" y="127.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (17 samples, 0.06%)</title><rect x="0.5750%" y="453" width="0.0589%" height="15" fill="rgb(235,168,5)" fg:x="166" fg:w="17"/><text x="0.8250%" y="463.50"></text></g><g><title>AppKit`routeKeyEquivalent (12 samples, 0.04%)</title><rect x="0.5924%" y="437" width="0.0416%" height="15" fill="rgb(221,155,16)" fg:x="171" fg:w="12"/><text x="0.8424%" y="447.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (12 samples, 0.04%)</title><rect x="0.5924%" y="421" width="0.0416%" height="15" fill="rgb(215,215,53)" fg:x="171" fg:w="12"/><text x="0.8424%" y="431.50"></text></g><g><title>AppKit`_NSFindMenuItemMatchingCommandKeyEvent (12 samples, 0.04%)</title><rect x="0.5924%" y="405" width="0.0416%" height="15" fill="rgb(223,4,10)" fg:x="171" fg:w="12"/><text x="0.8424%" y="415.50"></text></g><g><title>AppKit`_NSWrappedSearchReturn (12 samples, 0.04%)</title><rect x="0.5924%" y="389" width="0.0416%" height="15" fill="rgb(234,103,6)" fg:x="171" fg:w="12"/><text x="0.8424%" y="399.50"></text></g><g><title>AppKit`+[NSCocoaMenuImpl(KeyEvents) _menuItemWithKeyEquivalentMatchingEvent:inMenu:includingDisabledItems:] (12 samples, 0.04%)</title><rect x="0.5924%" y="373" width="0.0416%" height="15" fill="rgb(227,97,0)" fg:x="171" fg:w="12"/><text x="0.8424%" y="383.50"></text></g><g><title>AppKit`NSIsMenuKeyEvent (12 samples, 0.04%)</title><rect x="0.5924%" y="357" width="0.0416%" height="15" fill="rgb(234,150,53)" fg:x="171" fg:w="12"/><text x="0.8424%" y="367.50"></text></g><g><title>AppKit`_checkMenusForKeyEvent (12 samples, 0.04%)</title><rect x="0.5924%" y="341" width="0.0416%" height="15" fill="rgb(228,201,54)" fg:x="171" fg:w="12"/><text x="0.8424%" y="351.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (12 samples, 0.04%)</title><rect x="0.5924%" y="325" width="0.0416%" height="15" fill="rgb(222,22,37)" fg:x="171" fg:w="12"/><text x="0.8424%" y="335.50"></text></g><g><title>AppKit`_populateMenu (8 samples, 0.03%)</title><rect x="0.6062%" y="309" width="0.0277%" height="15" fill="rgb(237,53,32)" fg:x="175" fg:w="8"/><text x="0.8562%" y="319.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:incomplete:] (8 samples, 0.03%)</title><rect x="0.6062%" y="293" width="0.0277%" height="15" fill="rgb(233,25,53)" fg:x="175" fg:w="8"/><text x="0.8562%" y="303.50"></text></g><g><title>AppKit`-[NSMenu _withUpdateFlags:do:] (8 samples, 0.03%)</title><rect x="0.6062%" y="277" width="0.0277%" height="15" fill="rgb(210,40,34)" fg:x="175" fg:w="8"/><text x="0.8562%" y="287.50"></text></g><g><title>AppKit`__49-[NSMenu _populateWithFlags:eventRef:incomplete:]_block_invoke (8 samples, 0.03%)</title><rect x="0.6062%" y="261" width="0.0277%" height="15" fill="rgb(241,220,44)" fg:x="175" fg:w="8"/><text x="0.8562%" y="271.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (8 samples, 0.03%)</title><rect x="0.6062%" y="245" width="0.0277%" height="15" fill="rgb(235,28,35)" fg:x="175" fg:w="8"/><text x="0.8562%" y="255.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (8 samples, 0.03%)</title><rect x="0.6062%" y="229" width="0.0277%" height="15" fill="rgb(210,56,17)" fg:x="175" fg:w="8"/><text x="0.8562%" y="239.50"></text></g><g><title>AppKit`-[NSMenu _populateFromSidebandUpdatersOfSign:] (8 samples, 0.03%)</title><rect x="0.6062%" y="213" width="0.0277%" height="15" fill="rgb(224,130,29)" fg:x="175" fg:w="8"/><text x="0.8562%" y="223.50"></text></g><g><title>AppKit`-[NSMenu _performSidebandUpdatersPassingTest:] (8 samples, 0.03%)</title><rect x="0.6062%" y="197" width="0.0277%" height="15" fill="rgb(235,212,8)" fg:x="175" fg:w="8"/><text x="0.8562%" y="207.50"></text></g><g><title>AppKit`-[NSMenu _forEachCachedSidebandUpdaterDo:] (8 samples, 0.03%)</title><rect x="0.6062%" y="181" width="0.0277%" height="15" fill="rgb(223,33,50)" fg:x="175" fg:w="8"/><text x="0.8562%" y="191.50"></text></g><g><title>AppKit`__46-[NSMenu _performSidebandUpdatersPassingTest:]_block_invoke (8 samples, 0.03%)</title><rect x="0.6062%" y="165" width="0.0277%" height="15" fill="rgb(219,149,13)" fg:x="175" fg:w="8"/><text x="0.8562%" y="175.50"></text></g><g><title>AppKit`__47-[NSApplication(NSWindowsMenu) setWindowsMenu:]_block_invoke (8 samples, 0.03%)</title><rect x="0.6062%" y="149" width="0.0277%" height="15" fill="rgb(250,156,29)" fg:x="175" fg:w="8"/><text x="0.8562%" y="159.50"></text></g><g><title>AppKit`_NSWindowMenuAddDefaultSidecarItems (8 samples, 0.03%)</title><rect x="0.6062%" y="133" width="0.0277%" height="15" fill="rgb(216,193,19)" fg:x="175" fg:w="8"/><text x="0.8562%" y="143.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEvents (83 samples, 0.29%)</title><rect x="0.3533%" y="501" width="0.2875%" height="15" fill="rgb(216,135,14)" fg:x="102" fg:w="83"/><text x="0.6033%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEventsUntilDate (83 samples, 0.29%)</title><rect x="0.3533%" y="485" width="0.2875%" height="15" fill="rgb(241,47,5)" fg:x="102" fg:w="83"/><text x="0.6033%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (19 samples, 0.07%)</title><rect x="0.5750%" y="469" width="0.0658%" height="15" fill="rgb(233,42,35)" fg:x="166" fg:w="19"/><text x="0.8250%" y="479.50"></text></g><g><title>community_sim`community_sim::graphics::input::collect_input_events (85 samples, 0.29%)</title><rect x="0.3499%" y="565" width="0.2944%" height="15" fill="rgb(231,13,6)" fg:x="101" fg:w="85"/><text x="0.5999%" y="575.50"></text></g><g><title>community_sim`&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.29%)</title><rect x="0.3499%" y="549" width="0.2944%" height="15" fill="rgb(207,181,40)" fg:x="101" fg:w="85"/><text x="0.5999%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_WaitEventTimeout_REAL (85 samples, 0.29%)</title><rect x="0.3499%" y="533" width="0.2944%" height="15" fill="rgb(254,173,49)" fg:x="101" fg:w="85"/><text x="0.5999%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_PumpEventsInternal (85 samples, 0.29%)</title><rect x="0.3499%" y="517" width="0.2944%" height="15" fill="rgb(221,1,38)" fg:x="101" fg:w="85"/><text x="0.5999%" y="527.50"></text></g><g><title>community_sim`community_sim::graphics::input_systems::process_input_intents (4 samples, 0.01%)</title><rect x="0.6443%" y="565" width="0.0139%" height="15" fill="rgb(206,124,46)" fg:x="186" fg:w="4"/><text x="0.8943%" y="575.50"></text></g><g><title>community_sim`std::sys::backtrace::lock (4 samples, 0.01%)</title><rect x="0.6443%" y="549" width="0.0139%" height="15" fill="rgb(249,21,11)" fg:x="186" fg:w="4"/><text x="0.8943%" y="559.50"></text></g><g><title>community_sim`std::alloc::rust_oom (4 samples, 0.01%)</title><rect x="0.6443%" y="533" width="0.0139%" height="15" fill="rgb(222,201,40)" fg:x="186" fg:w="4"/><text x="0.8943%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.01%)</title><rect x="0.6443%" y="517" width="0.0139%" height="15" fill="rgb(235,61,29)" fg:x="186" fg:w="4"/><text x="0.8943%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (4 samples, 0.01%)</title><rect x="0.6582%" y="501" width="0.0139%" height="15" fill="rgb(219,207,3)" fg:x="190" fg:w="4"/><text x="0.9082%" y="511.50"></text></g><g><title>community_sim`community_sim::graphics::render::agent_system::agent_render (5 samples, 0.02%)</title><rect x="0.6582%" y="565" width="0.0173%" height="15" fill="rgb(222,56,46)" fg:x="190" fg:w="5"/><text x="0.9082%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (5 samples, 0.02%)</title><rect x="0.6582%" y="549" width="0.0173%" height="15" fill="rgb(239,76,54)" fg:x="190" fg:w="5"/><text x="0.9082%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (5 samples, 0.02%)</title><rect x="0.6582%" y="533" width="0.0173%" height="15" fill="rgb(231,124,27)" fg:x="190" fg:w="5"/><text x="0.9082%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (5 samples, 0.02%)</title><rect x="0.6582%" y="517" width="0.0173%" height="15" fill="rgb(249,195,6)" fg:x="190" fg:w="5"/><text x="0.9082%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRect_REAL (7 samples, 0.02%)</title><rect x="0.6824%" y="549" width="0.0242%" height="15" fill="rgb(237,174,47)" fg:x="197" fg:w="7"/><text x="0.9324%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRectF_REAL (7 samples, 0.02%)</title><rect x="0.6824%" y="533" width="0.0242%" height="15" fill="rgb(206,201,31)" fg:x="197" fg:w="7"/><text x="0.9324%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawLinesF_REAL (7 samples, 0.02%)</title><rect x="0.6824%" y="517" width="0.0242%" height="15" fill="rgb(231,57,52)" fg:x="197" fg:w="7"/><text x="0.9324%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`RenderDrawLinesWithRectsF (6 samples, 0.02%)</title><rect x="0.6859%" y="501" width="0.0208%" height="15" fill="rgb(248,177,22)" fg:x="198" fg:w="6"/><text x="0.9359%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (5 samples, 0.02%)</title><rect x="0.6893%" y="485" width="0.0173%" height="15" fill="rgb(215,211,37)" fg:x="199" fg:w="5"/><text x="0.9393%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (5 samples, 0.02%)</title><rect x="0.6893%" y="469" width="0.0173%" height="15" fill="rgb(241,128,51)" fg:x="199" fg:w="5"/><text x="0.9393%" y="479.50"></text></g><g><title>community_sim`community_sim::graphics::render::food_system::food_render (11 samples, 0.04%)</title><rect x="0.6755%" y="565" width="0.0381%" height="15" fill="rgb(227,165,31)" fg:x="195" fg:w="11"/><text x="0.9255%" y="575.50"></text></g><g><title>AppKit`-[NSScreen deviceDescription] (3 samples, 0.01%)</title><rect x="0.7205%" y="485" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="208" fg:w="3"/><text x="0.9705%" y="495.50"></text></g><g><title>community_sim`sdl2::render::Canvas&lt;sdl2::video::Window&gt;::texture_creator (7 samples, 0.02%)</title><rect x="0.7136%" y="549" width="0.0242%" height="15" fill="rgb(228,143,12)" fg:x="206" fg:w="7"/><text x="0.9636%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_GetWindowPixelFormat_REAL (7 samples, 0.02%)</title><rect x="0.7136%" y="533" width="0.0242%" height="15" fill="rgb(249,149,8)" fg:x="206" fg:w="7"/><text x="0.9636%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_GetWindowDisplayIndex_REAL (7 samples, 0.02%)</title><rect x="0.7136%" y="517" width="0.0242%" height="15" fill="rgb(243,35,44)" fg:x="206" fg:w="7"/><text x="0.9636%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_GetWindowDisplayIndex (5 samples, 0.02%)</title><rect x="0.7205%" y="501" width="0.0173%" height="15" fill="rgb(246,89,9)" fg:x="208" fg:w="5"/><text x="0.9705%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (4 samples, 0.01%)</title><rect x="0.7482%" y="485" width="0.0139%" height="15" fill="rgb(233,213,13)" fg:x="216" fg:w="4"/><text x="0.9982%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="0.7482%" y="469" width="0.0139%" height="15" fill="rgb(233,141,41)" fg:x="216" fg:w="4"/><text x="0.9982%" y="479.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (4 samples, 0.01%)</title><rect x="0.7482%" y="453" width="0.0139%" height="15" fill="rgb(239,167,4)" fg:x="216" fg:w="4"/><text x="0.9982%" y="463.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="0.7482%" y="437" width="0.0139%" height="15" fill="rgb(209,217,16)" fg:x="216" fg:w="4"/><text x="0.9982%" y="447.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.01%)</title><rect x="0.7482%" y="421" width="0.0139%" height="15" fill="rgb(219,88,35)" fg:x="216" fg:w="4"/><text x="0.9982%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="0.7482%" y="405" width="0.0139%" height="15" fill="rgb(220,193,23)" fg:x="216" fg:w="4"/><text x="0.9982%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTexture_REAL (6 samples, 0.02%)</title><rect x="0.7448%" y="533" width="0.0208%" height="15" fill="rgb(230,90,52)" fg:x="215" fg:w="6"/><text x="0.9948%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_CreateTexture (6 samples, 0.02%)</title><rect x="0.7448%" y="517" width="0.0208%" height="15" fill="rgb(252,106,19)" fg:x="215" fg:w="6"/><text x="0.9948%" y="527.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (6 samples, 0.02%)</title><rect x="0.7448%" y="501" width="0.0208%" height="15" fill="rgb(206,74,20)" fg:x="215" fg:w="6"/><text x="0.9948%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTextureFromSurface_REAL (7 samples, 0.02%)</title><rect x="0.7448%" y="549" width="0.0242%" height="15" fill="rgb(230,138,44)" fg:x="215" fg:w="7"/><text x="0.9948%" y="559.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (3 samples, 0.01%)</title><rect x="0.7829%" y="453" width="0.0104%" height="15" fill="rgb(235,182,43)" fg:x="226" fg:w="3"/><text x="1.0329%" y="463.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:] (3 samples, 0.01%)</title><rect x="0.7829%" y="437" width="0.0104%" height="15" fill="rgb(242,16,51)" fg:x="226" fg:w="3"/><text x="1.0329%" y="447.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.01%)</title><rect x="0.7829%" y="421" width="0.0104%" height="15" fill="rgb(248,9,4)" fg:x="226" fg:w="3"/><text x="1.0329%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="0.7829%" y="405" width="0.0104%" height="15" fill="rgb(210,31,22)" fg:x="226" fg:w="3"/><text x="1.0329%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="0.7829%" y="389" width="0.0104%" height="15" fill="rgb(239,54,39)" fg:x="226" fg:w="3"/><text x="1.0329%" y="399.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (3 samples, 0.01%)</title><rect x="0.8002%" y="453" width="0.0104%" height="15" fill="rgb(230,99,41)" fg:x="231" fg:w="3"/><text x="1.0502%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (13 samples, 0.05%)</title><rect x="0.7690%" y="549" width="0.0450%" height="15" fill="rgb(253,106,12)" fg:x="222" fg:w="13"/><text x="1.0190%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (13 samples, 0.05%)</title><rect x="0.7690%" y="533" width="0.0450%" height="15" fill="rgb(213,46,41)" fg:x="222" fg:w="13"/><text x="1.0190%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (13 samples, 0.05%)</title><rect x="0.7690%" y="517" width="0.0450%" height="15" fill="rgb(215,133,35)" fg:x="222" fg:w="13"/><text x="1.0190%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (11 samples, 0.04%)</title><rect x="0.7759%" y="501" width="0.0381%" height="15" fill="rgb(213,28,5)" fg:x="224" fg:w="11"/><text x="1.0259%" y="511.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (9 samples, 0.03%)</title><rect x="0.7829%" y="485" width="0.0312%" height="15" fill="rgb(215,77,49)" fg:x="226" fg:w="9"/><text x="1.0329%" y="495.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (9 samples, 0.03%)</title><rect x="0.7829%" y="469" width="0.0312%" height="15" fill="rgb(248,100,22)" fg:x="226" fg:w="9"/><text x="1.0329%" y="479.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_event_log_window (31 samples, 0.11%)</title><rect x="0.7136%" y="565" width="0.1074%" height="15" fill="rgb(208,67,9)" fg:x="206" fg:w="31"/><text x="0.9636%" y="575.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_full (5 samples, 0.02%)</title><rect x="0.8452%" y="501" width="0.0173%" height="15" fill="rgb(219,133,21)" fg:x="244" fg:w="5"/><text x="1.0952%" y="511.50"></text></g><g><title>libharfbuzz.0.dylib`hb_shape_plan_execute (3 samples, 0.01%)</title><rect x="0.8522%" y="485" width="0.0104%" height="15" fill="rgb(246,46,29)" fg:x="246" fg:w="3"/><text x="1.1022%" y="495.50"></text></g><g><title>libharfbuzz.0.dylib`_hb_ot_shape (3 samples, 0.01%)</title><rect x="0.8522%" y="469" width="0.0104%" height="15" fill="rgb(246,185,52)" fg:x="246" fg:w="3"/><text x="1.1022%" y="479.50"></text></g><g><title>community_sim`sdl2::ttf::font::PartialRendering::blended (12 samples, 0.04%)</title><rect x="0.8244%" y="549" width="0.0416%" height="15" fill="rgb(252,136,11)" fg:x="238" fg:w="12"/><text x="1.0744%" y="559.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Render_Internal (12 samples, 0.04%)</title><rect x="0.8244%" y="533" width="0.0416%" height="15" fill="rgb(219,138,53)" fg:x="238" fg:w="12"/><text x="1.0744%" y="543.50"></text></g><g><title>libSDL2_ttf-2.0.0.dylib`TTF_Size_Internal (8 samples, 0.03%)</title><rect x="0.8383%" y="517" width="0.0277%" height="15" fill="rgb(211,51,23)" fg:x="242" fg:w="8"/><text x="1.0883%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_FillRect4 (12 samples, 0.04%)</title><rect x="0.8695%" y="501" width="0.0416%" height="15" fill="rgb(247,221,28)" fg:x="251" fg:w="12"/><text x="1.1195%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (15 samples, 0.05%)</title><rect x="0.8695%" y="549" width="0.0520%" height="15" fill="rgb(251,222,45)" fg:x="251" fg:w="15"/><text x="1.1195%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (15 samples, 0.05%)</title><rect x="0.8695%" y="533" width="0.0520%" height="15" fill="rgb(217,162,53)" fg:x="251" fg:w="15"/><text x="1.1195%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SW_RunCommandQueue (15 samples, 0.05%)</title><rect x="0.8695%" y="517" width="0.0520%" height="15" fill="rgb(229,93,14)" fg:x="251" fg:w="15"/><text x="1.1195%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpperBlit_REAL (3 samples, 0.01%)</title><rect x="0.9110%" y="501" width="0.0104%" height="15" fill="rgb(209,67,49)" fg:x="263" fg:w="3"/><text x="1.1610%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`BlitRGBtoRGBPixelAlpha (3 samples, 0.01%)</title><rect x="0.9110%" y="485" width="0.0104%" height="15" fill="rgb(213,87,29)" fg:x="263" fg:w="3"/><text x="1.1610%" y="495.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (5 samples, 0.02%)</title><rect x="0.9318%" y="421" width="0.0173%" height="15" fill="rgb(205,151,52)" fg:x="269" fg:w="5"/><text x="1.1818%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (10 samples, 0.03%)</title><rect x="0.9284%" y="485" width="0.0346%" height="15" fill="rgb(253,215,39)" fg:x="268" fg:w="10"/><text x="1.1784%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (10 samples, 0.03%)</title><rect x="0.9284%" y="469" width="0.0346%" height="15" fill="rgb(221,220,41)" fg:x="268" fg:w="10"/><text x="1.1784%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (9 samples, 0.03%)</title><rect x="0.9318%" y="453" width="0.0312%" height="15" fill="rgb(218,133,21)" fg:x="269" fg:w="9"/><text x="1.1818%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (9 samples, 0.03%)</title><rect x="0.9318%" y="437" width="0.0312%" height="15" fill="rgb(221,193,43)" fg:x="269" fg:w="9"/><text x="1.1818%" y="447.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (3 samples, 0.01%)</title><rect x="0.9526%" y="421" width="0.0104%" height="15" fill="rgb(240,128,52)" fg:x="275" fg:w="3"/><text x="1.2026%" y="431.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (11 samples, 0.04%)</title><rect x="0.9284%" y="501" width="0.0381%" height="15" fill="rgb(253,114,12)" fg:x="268" fg:w="11"/><text x="1.1784%" y="511.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (13 samples, 0.05%)</title><rect x="0.9803%" y="421" width="0.0450%" height="15" fill="rgb(215,223,47)" fg:x="283" fg:w="13"/><text x="1.2303%" y="431.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (16 samples, 0.06%)</title><rect x="0.9803%" y="453" width="0.0554%" height="15" fill="rgb(248,225,23)" fg:x="283" fg:w="16"/><text x="1.2303%" y="463.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (16 samples, 0.06%)</title><rect x="0.9803%" y="437" width="0.0554%" height="15" fill="rgb(250,108,0)" fg:x="283" fg:w="16"/><text x="1.2303%" y="447.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (3 samples, 0.01%)</title><rect x="1.0254%" y="421" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="296" fg:w="3"/><text x="1.2754%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (4 samples, 0.01%)</title><rect x="1.0392%" y="437" width="0.0139%" height="15" fill="rgb(244,45,10)" fg:x="300" fg:w="4"/><text x="1.2892%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="1.0392%" y="421" width="0.0139%" height="15" fill="rgb(207,125,25)" fg:x="300" fg:w="4"/><text x="1.2892%" y="431.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (4 samples, 0.01%)</title><rect x="1.0392%" y="405" width="0.0139%" height="15" fill="rgb(210,195,18)" fg:x="300" fg:w="4"/><text x="1.2892%" y="415.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.01%)</title><rect x="1.0392%" y="389" width="0.0139%" height="15" fill="rgb(249,80,12)" fg:x="300" fg:w="4"/><text x="1.2892%" y="399.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.01%)</title><rect x="1.0392%" y="373" width="0.0139%" height="15" fill="rgb(221,65,9)" fg:x="300" fg:w="4"/><text x="1.2892%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="1.0392%" y="357" width="0.0139%" height="15" fill="rgb(235,49,36)" fg:x="300" fg:w="4"/><text x="1.2892%" y="367.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_stats_window (69 samples, 0.24%)</title><rect x="0.8210%" y="565" width="0.2390%" height="15" fill="rgb(225,32,20)" fg:x="237" fg:w="69"/><text x="1.0710%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (38 samples, 0.13%)</title><rect x="0.9284%" y="549" width="0.1316%" height="15" fill="rgb(215,141,46)" fg:x="268" fg:w="38"/><text x="1.1784%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (38 samples, 0.13%)</title><rect x="0.9284%" y="533" width="0.1316%" height="15" fill="rgb(250,160,47)" fg:x="268" fg:w="38"/><text x="1.1784%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (38 samples, 0.13%)</title><rect x="0.9284%" y="517" width="0.1316%" height="15" fill="rgb(216,222,40)" fg:x="268" fg:w="38"/><text x="1.1784%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (27 samples, 0.09%)</title><rect x="0.9665%" y="501" width="0.0935%" height="15" fill="rgb(234,217,39)" fg:x="279" fg:w="27"/><text x="1.2165%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (27 samples, 0.09%)</title><rect x="0.9665%" y="485" width="0.0935%" height="15" fill="rgb(207,178,40)" fg:x="279" fg:w="27"/><text x="1.2165%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (27 samples, 0.09%)</title><rect x="0.9665%" y="469" width="0.0935%" height="15" fill="rgb(221,136,13)" fg:x="279" fg:w="27"/><text x="1.2165%" y="479.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (7 samples, 0.02%)</title><rect x="1.0357%" y="453" width="0.0242%" height="15" fill="rgb(249,199,10)" fg:x="299" fg:w="7"/><text x="1.2857%" y="463.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (34 samples, 0.12%)</title><rect x="1.6073%" y="533" width="0.1178%" height="15" fill="rgb(249,222,13)" fg:x="464" fg:w="34"/><text x="1.8573%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (58 samples, 0.20%)</title><rect x="2.1858%" y="517" width="0.2009%" height="15" fill="rgb(244,185,38)" fg:x="631" fg:w="58"/><text x="2.4358%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (37 samples, 0.13%)</title><rect x="2.3867%" y="517" width="0.1282%" height="15" fill="rgb(236,202,9)" fg:x="689" fg:w="37"/><text x="2.6367%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (11 samples, 0.04%)</title><rect x="3.1419%" y="501" width="0.0381%" height="15" fill="rgb(250,229,37)" fg:x="907" fg:w="11"/><text x="3.3919%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (416 samples, 1.44%)</title><rect x="3.1800%" y="501" width="1.4410%" height="15" fill="rgb(206,174,23)" fg:x="918" fg:w="416"/><text x="3.4300%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (70 samples, 0.24%)</title><rect x="4.3786%" y="485" width="0.2425%" height="15" fill="rgb(211,33,43)" fg:x="1264" fg:w="70"/><text x="4.6286%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_calloc_REAL (5 samples, 0.02%)</title><rect x="4.9189%" y="469" width="0.0173%" height="15" fill="rgb(245,58,50)" fg:x="1420" fg:w="5"/><text x="5.1689%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (5 samples, 0.02%)</title><rect x="4.9189%" y="453" width="0.0173%" height="15" fill="rgb(244,68,36)" fg:x="1420" fg:w="5"/><text x="5.1689%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.01%)</title><rect x="4.9259%" y="437" width="0.0104%" height="15" fill="rgb(232,229,15)" fg:x="1422" fg:w="3"/><text x="5.1759%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (94 samples, 0.33%)</title><rect x="4.6210%" y="501" width="0.3256%" height="15" fill="rgb(254,30,23)" fg:x="1334" fg:w="94"/><text x="4.8710%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (35 samples, 0.12%)</title><rect x="4.8254%" y="485" width="0.1212%" height="15" fill="rgb(235,160,14)" fg:x="1393" fg:w="35"/><text x="5.0754%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (3 samples, 0.01%)</title><rect x="4.9363%" y="469" width="0.0104%" height="15" fill="rgb(212,155,44)" fg:x="1425" fg:w="3"/><text x="5.1863%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (720 samples, 2.49%)</title><rect x="2.5149%" y="517" width="2.4941%" height="15" fill="rgb(226,2,50)" fg:x="726" fg:w="720"/><text x="2.7649%" y="527.50">li..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (18 samples, 0.06%)</title><rect x="4.9467%" y="501" width="0.0624%" height="15" fill="rgb(234,177,6)" fg:x="1428" fg:w="18"/><text x="5.1967%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (1,089 samples, 3.77%)</title><rect x="1.7251%" y="533" width="3.7723%" height="15" fill="rgb(217,24,9)" fg:x="498" fg:w="1089"/><text x="1.9751%" y="543.50">libS..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (141 samples, 0.49%)</title><rect x="5.0090%" y="517" width="0.4884%" height="15" fill="rgb(220,13,46)" fg:x="1446" fg:w="141"/><text x="5.2590%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (1,286 samples, 4.45%)</title><rect x="1.3440%" y="549" width="4.4548%" height="15" fill="rgb(239,221,27)" fg:x="388" fg:w="1286"/><text x="1.5940%" y="559.50">libSD..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (87 samples, 0.30%)</title><rect x="5.4974%" y="533" width="0.3014%" height="15" fill="rgb(222,198,25)" fg:x="1587" fg:w="87"/><text x="5.7474%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (8 samples, 0.03%)</title><rect x="5.7988%" y="549" width="0.0277%" height="15" fill="rgb(211,99,13)" fg:x="1674" fg:w="8"/><text x="6.0488%" y="559.50"></text></g><g><title>community_sim`community_sim::graphics::render::terrain::draw_terrain (1,408 samples, 4.88%)</title><rect x="1.0600%" y="565" width="4.8774%" height="15" fill="rgb(232,111,31)" fg:x="306" fg:w="1408"/><text x="1.3100%" y="575.50">commun..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor_REAL (32 samples, 0.11%)</title><rect x="5.8265%" y="549" width="0.1108%" height="15" fill="rgb(245,82,37)" fg:x="1682" fg:w="32"/><text x="6.0765%" y="559.50"></text></g><g><title>community_sim`std::thread::sleep (3 samples, 0.01%)</title><rect x="5.9478%" y="565" width="0.0104%" height="15" fill="rgb(227,149,46)" fg:x="1717" fg:w="3"/><text x="6.1978%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (3 samples, 0.01%)</title><rect x="5.9478%" y="549" width="0.0104%" height="15" fill="rgb(218,36,50)" fg:x="1717" fg:w="3"/><text x="6.1978%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect (15 samples, 0.05%)</title><rect x="5.9582%" y="565" width="0.0520%" height="15" fill="rgb(226,80,48)" fg:x="1720" fg:w="15"/><text x="6.2082%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (12 samples, 0.04%)</title><rect x="6.0101%" y="565" width="0.0416%" height="15" fill="rgb(238,224,15)" fg:x="1735" fg:w="12"/><text x="6.2601%" y="575.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (82 samples, 0.28%)</title><rect x="6.0551%" y="533" width="0.2841%" height="15" fill="rgb(241,136,10)" fg:x="1748" fg:w="82"/><text x="6.3051%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (14 samples, 0.05%)</title><rect x="6.3392%" y="533" width="0.0485%" height="15" fill="rgb(208,32,45)" fg:x="1830" fg:w="14"/><text x="6.5892%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (16 samples, 0.06%)</title><rect x="6.3877%" y="533" width="0.0554%" height="15" fill="rgb(207,135,9)" fg:x="1844" fg:w="16"/><text x="6.6377%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (19 samples, 0.07%)</title><rect x="6.4431%" y="533" width="0.0658%" height="15" fill="rgb(206,86,44)" fg:x="1860" fg:w="19"/><text x="6.6931%" y="543.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (3 samples, 0.01%)</title><rect x="6.8380%" y="517" width="0.0104%" height="15" fill="rgb(245,177,15)" fg:x="1974" fg:w="3"/><text x="7.0880%" y="527.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (3 samples, 0.01%)</title><rect x="6.8380%" y="501" width="0.0104%" height="15" fill="rgb(206,64,50)" fg:x="1974" fg:w="3"/><text x="7.0880%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (9 samples, 0.03%)</title><rect x="9.6300%" y="437" width="0.0312%" height="15" fill="rgb(234,36,40)" fg:x="2780" fg:w="9"/><text x="9.8800%" y="447.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (9 samples, 0.03%)</title><rect x="9.6300%" y="421" width="0.0312%" height="15" fill="rgb(213,64,8)" fg:x="2780" fg:w="9"/><text x="9.8800%" y="431.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.03%)</title><rect x="9.6300%" y="405" width="0.0312%" height="15" fill="rgb(210,75,36)" fg:x="2780" fg:w="9"/><text x="9.8800%" y="415.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.03%)</title><rect x="9.6300%" y="389" width="0.0312%" height="15" fill="rgb(229,88,21)" fg:x="2780" fg:w="9"/><text x="9.8800%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.03%)</title><rect x="9.6300%" y="373" width="0.0312%" height="15" fill="rgb(252,204,47)" fg:x="2780" fg:w="9"/><text x="9.8800%" y="383.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (12 samples, 0.04%)</title><rect x="9.6300%" y="453" width="0.0416%" height="15" fill="rgb(208,77,27)" fg:x="2780" fg:w="12"/><text x="9.8800%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (3 samples, 0.01%)</title><rect x="9.6612%" y="437" width="0.0104%" height="15" fill="rgb(221,76,26)" fg:x="2789" fg:w="3"/><text x="9.9112%" y="447.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="9.6612%" y="421" width="0.0104%" height="15" fill="rgb(225,139,18)" fg:x="2789" fg:w="3"/><text x="9.9112%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (14 samples, 0.05%)</title><rect x="9.6300%" y="469" width="0.0485%" height="15" fill="rgb(230,137,11)" fg:x="2780" fg:w="14"/><text x="9.8800%" y="479.50"></text></g><g><title>AGXMetalG13X`AGX::DataBufferAllocator&lt;34ul&gt;::grow (18 samples, 0.06%)</title><rect x="9.6231%" y="485" width="0.0624%" height="15" fill="rgb(212,28,1)" fg:x="2778" fg:w="18"/><text x="9.8731%" y="495.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (617 samples, 2.14%)</title><rect x="9.6855%" y="485" width="2.1373%" height="15" fill="rgb(248,164,17)" fg:x="2796" fg:w="617"/><text x="9.9355%" y="495.50">A..</text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (185 samples, 0.64%)</title><rect x="11.1819%" y="469" width="0.6408%" height="15" fill="rgb(222,171,42)" fg:x="3228" fg:w="185"/><text x="11.4319%" y="479.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (1,308 samples, 4.53%)</title><rect x="7.3646%" y="501" width="4.5310%" height="15" fill="rgb(243,84,45)" fg:x="2126" fg:w="1308"/><text x="7.6146%" y="511.50">AGXMe..</text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (20 samples, 0.07%)</title><rect x="11.8262%" y="485" width="0.0693%" height="15" fill="rgb(252,49,23)" fg:x="3414" fg:w="20"/><text x="12.0762%" y="495.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (15 samples, 0.05%)</title><rect x="11.8955%" y="501" width="0.0520%" height="15" fill="rgb(215,19,7)" fg:x="3434" fg:w="15"/><text x="12.1455%" y="511.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (1,903 samples, 6.59%)</title><rect x="6.8484%" y="517" width="6.5921%" height="15" fill="rgb(238,81,41)" fg:x="1977" fg:w="1903"/><text x="7.0984%" y="527.50">AGXMetalG..</text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::RenderDirtyBits (431 samples, 1.49%)</title><rect x="11.9475%" y="501" width="1.4930%" height="15" fill="rgb(210,199,37)" fg:x="3449" fg:w="431"/><text x="12.1975%" y="511.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext setVertexBufferOffset:atIndex:] (157 samples, 0.54%)</title><rect x="13.4405%" y="517" width="0.5439%" height="15" fill="rgb(244,192,49)" fg:x="3880" fg:w="157"/><text x="13.6905%" y="527.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (13 samples, 0.05%)</title><rect x="13.9843%" y="517" width="0.0450%" height="15" fill="rgb(226,211,11)" fg:x="4037" fg:w="13"/><text x="14.2343%" y="527.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeISPPrimitiveType (164 samples, 0.57%)</title><rect x="14.0294%" y="517" width="0.5681%" height="15" fill="rgb(236,162,54)" fg:x="4050" fg:w="164"/><text x="14.2794%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData activepipelines] (31 samples, 0.11%)</title><rect x="14.5975%" y="517" width="0.1074%" height="15" fill="rgb(220,229,9)" fg:x="4214" fg:w="31"/><text x="14.8475%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (28 samples, 0.10%)</title><rect x="14.7049%" y="517" width="0.0970%" height="15" fill="rgb(250,87,22)" fg:x="4245" fg:w="28"/><text x="14.9549%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (73 samples, 0.25%)</title><rect x="14.8019%" y="517" width="0.2529%" height="15" fill="rgb(239,43,17)" fg:x="4273" fg:w="73"/><text x="15.0519%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (90 samples, 0.31%)</title><rect x="15.0547%" y="517" width="0.3118%" height="15" fill="rgb(231,177,25)" fg:x="4346" fg:w="90"/><text x="15.3047%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (18 samples, 0.06%)</title><rect x="15.3665%" y="517" width="0.0624%" height="15" fill="rgb(219,179,1)" fg:x="4436" fg:w="18"/><text x="15.6165%" y="527.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (3 samples, 0.01%)</title><rect x="15.5536%" y="501" width="0.0104%" height="15" fill="rgb(238,219,53)" fg:x="4490" fg:w="3"/><text x="15.8036%" y="511.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (3 samples, 0.01%)</title><rect x="15.5536%" y="485" width="0.0104%" height="15" fill="rgb(232,167,36)" fg:x="4490" fg:w="3"/><text x="15.8036%" y="495.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (3 samples, 0.01%)</title><rect x="15.5674%" y="469" width="0.0104%" height="15" fill="rgb(244,19,51)" fg:x="4494" fg:w="3"/><text x="15.8174%" y="479.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (44 samples, 0.15%)</title><rect x="15.4288%" y="517" width="0.1524%" height="15" fill="rgb(224,6,22)" fg:x="4454" fg:w="44"/><text x="15.6788%" y="527.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (5 samples, 0.02%)</title><rect x="15.5639%" y="501" width="0.0173%" height="15" fill="rgb(224,145,5)" fg:x="4493" fg:w="5"/><text x="15.8139%" y="511.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (5 samples, 0.02%)</title><rect x="15.5639%" y="485" width="0.0173%" height="15" fill="rgb(234,130,49)" fg:x="4493" fg:w="5"/><text x="15.8139%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (24 samples, 0.08%)</title><rect x="16.3053%" y="501" width="0.0831%" height="15" fill="rgb(254,6,2)" fg:x="4707" fg:w="24"/><text x="16.5553%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (52 samples, 0.18%)</title><rect x="16.3884%" y="501" width="0.1801%" height="15" fill="rgb(208,96,46)" fg:x="4731" fg:w="52"/><text x="16.6384%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (32 samples, 0.11%)</title><rect x="16.5685%" y="501" width="0.1108%" height="15" fill="rgb(239,3,39)" fg:x="4783" fg:w="32"/><text x="16.8185%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (18 samples, 0.06%)</title><rect x="16.6794%" y="501" width="0.0624%" height="15" fill="rgb(233,210,1)" fg:x="4815" fg:w="18"/><text x="16.9294%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (151 samples, 0.52%)</title><rect x="16.7417%" y="501" width="0.5231%" height="15" fill="rgb(244,137,37)" fg:x="4833" fg:w="151"/><text x="16.9917%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (99 samples, 0.34%)</title><rect x="16.9219%" y="485" width="0.3429%" height="15" fill="rgb(240,136,2)" fg:x="4885" fg:w="99"/><text x="17.1719%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (20 samples, 0.07%)</title><rect x="17.2648%" y="501" width="0.0693%" height="15" fill="rgb(239,18,37)" fg:x="4984" fg:w="20"/><text x="17.5148%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (23 samples, 0.08%)</title><rect x="17.3341%" y="501" width="0.0797%" height="15" fill="rgb(218,185,22)" fg:x="5004" fg:w="23"/><text x="17.5841%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_release (236 samples, 0.82%)</title><rect x="17.4137%" y="501" width="0.8175%" height="15" fill="rgb(225,218,4)" fg:x="5027" fg:w="236"/><text x="17.6637%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_retain (113 samples, 0.39%)</title><rect x="18.2313%" y="501" width="0.3914%" height="15" fill="rgb(230,182,32)" fg:x="5263" fg:w="113"/><text x="18.4813%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (1,014 samples, 3.51%)</title><rect x="15.5813%" y="517" width="3.5125%" height="15" fill="rgb(242,56,43)" fg:x="4498" fg:w="1014"/><text x="15.8313%" y="527.50">lib..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (136 samples, 0.47%)</title><rect x="18.6227%" y="501" width="0.4711%" height="15" fill="rgb(233,99,24)" fg:x="5376" fg:w="136"/><text x="18.8727%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$activepipelines (37 samples, 0.13%)</title><rect x="19.0938%" y="517" width="0.1282%" height="15" fill="rgb(234,209,42)" fg:x="5512" fg:w="37"/><text x="19.3438%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (26 samples, 0.09%)</title><rect x="19.2220%" y="517" width="0.0901%" height="15" fill="rgb(227,7,12)" fg:x="5549" fg:w="26"/><text x="19.4720%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$setVertexBufferOffset:atIndex: (18 samples, 0.06%)</title><rect x="19.3120%" y="517" width="0.0624%" height="15" fill="rgb(245,203,43)" fg:x="5575" fg:w="18"/><text x="19.5620%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (197 samples, 0.68%)</title><rect x="19.3779%" y="517" width="0.6824%" height="15" fill="rgb(238,205,33)" fg:x="5594" fg:w="197"/><text x="19.6279%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_release (373 samples, 1.29%)</title><rect x="20.0603%" y="517" width="1.2921%" height="15" fill="rgb(231,56,7)" fg:x="5791" fg:w="373"/><text x="20.3103%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_retain (293 samples, 1.01%)</title><rect x="21.3524%" y="517" width="1.0150%" height="15" fill="rgb(244,186,29)" fg:x="6164" fg:w="293"/><text x="21.6024%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (4,722 samples, 16.36%)</title><rect x="6.5089%" y="533" width="16.3572%" height="15" fill="rgb(234,111,31)" fg:x="1879" fg:w="4722"/><text x="6.7589%" y="543.50">libSDL2-2.0.0.dylib`METAL..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (144 samples, 0.50%)</title><rect x="22.3673%" y="517" width="0.4988%" height="15" fill="rgb(241,149,10)" fg:x="6457" fg:w="144"/><text x="22.6173%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (29 samples, 0.10%)</title><rect x="22.8661%" y="533" width="0.1005%" height="15" fill="rgb(249,206,44)" fg:x="6601" fg:w="29"/><text x="23.1161%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$drawPrimitives:vertexStart:vertexCount: (17 samples, 0.06%)</title><rect x="22.9666%" y="533" width="0.0589%" height="15" fill="rgb(251,153,30)" fg:x="6630" fg:w="17"/><text x="23.2166%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (18 samples, 0.06%)</title><rect x="23.0255%" y="533" width="0.0624%" height="15" fill="rgb(239,152,38)" fg:x="6647" fg:w="18"/><text x="23.2755%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (100 samples, 0.35%)</title><rect x="23.0878%" y="533" width="0.3464%" height="15" fill="rgb(249,139,47)" fg:x="6665" fg:w="100"/><text x="23.3378%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_release (58 samples, 0.20%)</title><rect x="23.4343%" y="533" width="0.2009%" height="15" fill="rgb(244,64,35)" fg:x="6765" fg:w="58"/><text x="23.6843%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retain (36 samples, 0.12%)</title><rect x="23.6352%" y="533" width="0.1247%" height="15" fill="rgb(216,46,15)" fg:x="6823" fg:w="36"/><text x="23.8852%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (17 samples, 0.06%)</title><rect x="23.7599%" y="533" width="0.0589%" height="15" fill="rgb(250,74,19)" fg:x="6859" fg:w="17"/><text x="24.0099%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (5,478 samples, 18.98%)</title><rect x="6.0551%" y="549" width="18.9760%" height="15" fill="rgb(249,42,33)" fg:x="1748" fg:w="5478"/><text x="6.3051%" y="559.50">libSDL2-2.0.0.dylib`FlushRende..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (350 samples, 1.21%)</title><rect x="23.8188%" y="533" width="1.2124%" height="15" fill="rgb(242,149,17)" fg:x="6876" fg:w="350"/><text x="24.0688%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RenderPresent (3 samples, 0.01%)</title><rect x="25.0312%" y="549" width="0.0104%" height="15" fill="rgb(244,29,21)" fg:x="7226" fg:w="3"/><text x="25.2812%" y="559.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (4 samples, 0.01%)</title><rect x="25.0416%" y="469" width="0.0139%" height="15" fill="rgb(220,130,37)" fg:x="7229" fg:w="4"/><text x="25.2916%" y="479.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (4 samples, 0.01%)</title><rect x="25.0416%" y="453" width="0.0139%" height="15" fill="rgb(211,67,2)" fg:x="7229" fg:w="4"/><text x="25.2916%" y="463.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (4 samples, 0.01%)</title><rect x="25.0416%" y="437" width="0.0139%" height="15" fill="rgb(235,68,52)" fg:x="7229" fg:w="4"/><text x="25.2916%" y="447.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (4 samples, 0.01%)</title><rect x="25.0416%" y="421" width="0.0139%" height="15" fill="rgb(246,142,3)" fg:x="7229" fg:w="4"/><text x="25.2916%" y="431.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.01%)</title><rect x="25.0416%" y="405" width="0.0139%" height="15" fill="rgb(241,25,7)" fg:x="7229" fg:w="4"/><text x="25.2916%" y="415.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (7 samples, 0.02%)</title><rect x="25.0416%" y="501" width="0.0242%" height="15" fill="rgb(242,119,39)" fg:x="7229" fg:w="7"/><text x="25.2916%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (7 samples, 0.02%)</title><rect x="25.0416%" y="485" width="0.0242%" height="15" fill="rgb(241,98,45)" fg:x="7229" fg:w="7"/><text x="25.2916%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (8 samples, 0.03%)</title><rect x="25.0416%" y="517" width="0.0277%" height="15" fill="rgb(254,28,30)" fg:x="7229" fg:w="8"/><text x="25.2916%" y="527.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyBlitContext copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:] (3 samples, 0.01%)</title><rect x="25.0693%" y="469" width="0.0104%" height="15" fill="rgb(241,142,54)" fg:x="7237" fg:w="3"/><text x="25.3193%" y="479.50"></text></g><g><title>AGXMetalG13X`AGX::BlitContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::copyTextureToTextureImpl (3 samples, 0.01%)</title><rect x="25.0693%" y="453" width="0.0104%" height="15" fill="rgb(222,85,15)" fg:x="7237" fg:w="3"/><text x="25.3193%" y="463.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (15 samples, 0.05%)</title><rect x="25.0831%" y="437" width="0.0520%" height="15" fill="rgb(210,85,47)" fg:x="7241" fg:w="15"/><text x="25.3331%" y="447.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (18 samples, 0.06%)</title><rect x="25.0831%" y="469" width="0.0624%" height="15" fill="rgb(224,206,25)" fg:x="7241" fg:w="18"/><text x="25.3331%" y="479.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (18 samples, 0.06%)</title><rect x="25.0831%" y="453" width="0.0624%" height="15" fill="rgb(243,201,19)" fg:x="7241" fg:w="18"/><text x="25.3331%" y="463.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (3 samples, 0.01%)</title><rect x="25.1351%" y="437" width="0.0104%" height="15" fill="rgb(236,59,4)" fg:x="7256" fg:w="3"/><text x="25.3851%" y="447.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (24 samples, 0.08%)</title><rect x="25.0693%" y="485" width="0.0831%" height="15" fill="rgb(254,179,45)" fg:x="7237" fg:w="24"/><text x="25.3193%" y="495.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (5,515 samples, 19.10%)</title><rect x="6.0517%" y="565" width="19.1042%" height="15" fill="rgb(226,14,10)" fg:x="1747" fg:w="5515"/><text x="6.3017%" y="575.50">libSDL2-2.0.0.dylib`SDL_Render..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (33 samples, 0.11%)</title><rect x="25.0416%" y="549" width="0.1143%" height="15" fill="rgb(244,27,41)" fg:x="7229" fg:w="33"/><text x="25.2916%" y="559.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (33 samples, 0.11%)</title><rect x="25.0416%" y="533" width="0.1143%" height="15" fill="rgb(235,35,32)" fg:x="7229" fg:w="33"/><text x="25.2916%" y="543.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (25 samples, 0.09%)</title><rect x="25.0693%" y="517" width="0.0866%" height="15" fill="rgb(218,68,31)" fg:x="7237" fg:w="25"/><text x="25.3193%" y="527.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (25 samples, 0.09%)</title><rect x="25.0693%" y="501" width="0.0866%" height="15" fill="rgb(207,120,37)" fg:x="7237" fg:w="25"/><text x="25.3193%" y="511.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor (13 samples, 0.05%)</title><rect x="25.1559%" y="565" width="0.0450%" height="15" fill="rgb(227,98,0)" fg:x="7262" fg:w="13"/><text x="25.4059%" y="575.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::main_sim_loop (7,212 samples, 24.98%)</title><rect x="0.2217%" y="581" width="24.9827%" height="15" fill="rgb(207,7,3)" fg:x="64" fg:w="7212"/><text x="0.4717%" y="591.50">community_sim`community_sim::graphics::s..</text></g><g><title>community_sim`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (14 samples, 0.05%)</title><rect x="25.2044%" y="565" width="0.0485%" height="15" fill="rgb(206,98,19)" fg:x="7276" fg:w="14"/><text x="25.4544%" y="575.50"></text></g><g><title>community_sim`community_sim::map::Map::new (16 samples, 0.06%)</title><rect x="25.2044%" y="581" width="0.0554%" height="15" fill="rgb(217,5,26)" fg:x="7276" fg:w="16"/><text x="25.4544%" y="591.50"></text></g><g><title>community_sim`community_sim::simulation::run_profile_from_yaml (7,293 samples, 25.26%)</title><rect x="0.0000%" y="629" width="25.2633%" height="15" fill="rgb(235,190,38)" fg:x="0" fg:w="7293"/><text x="0.2500%" y="639.50">community_sim`community_sim::simulation:..</text></g><g><title>community_sim`community_sim::graphics::run_with_graphics_profile (7,293 samples, 25.26%)</title><rect x="0.0000%" y="613" width="25.2633%" height="15" fill="rgb(247,86,24)" fg:x="0" fg:w="7293"/><text x="0.2500%" y="623.50">community_sim`community_sim::graphics::r..</text></g><g><title>community_sim`community_sim::graphics::sim_render::run_sim_render (7,293 samples, 25.26%)</title><rect x="0.0000%" y="597" width="25.2633%" height="15" fill="rgb(205,101,16)" fg:x="0" fg:w="7293"/><text x="0.2500%" y="607.50">community_sim`community_sim::graphics::s..</text></g><g><title>dyld`start (7,294 samples, 25.27%)</title><rect x="0.0000%" y="725" width="25.2667%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="735.50">dyld`start</text></g><g><title>community_sim`main (7,294 samples, 25.27%)</title><rect x="0.0000%" y="709" width="25.2667%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="719.50">community_sim`main</text></g><g><title>community_sim`std::rt::lang_start_internal (7,294 samples, 25.27%)</title><rect x="0.0000%" y="693" width="25.2667%" height="15" fill="rgb(207,184,53)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="703.50">community_sim`std::rt::lang_start_intern..</text></g><g><title>community_sim`std::rt::lang_start::_{{closure}} (7,294 samples, 25.27%)</title><rect x="0.0000%" y="677" width="25.2667%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="687.50">community_sim`std::rt::lang_start::_{{cl..</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (7,294 samples, 25.27%)</title><rect x="0.0000%" y="661" width="25.2667%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="671.50">community_sim`std::sys::backtrace::__rus..</text></g><g><title>community_sim`community_sim::main (7,294 samples, 25.27%)</title><rect x="0.0000%" y="645" width="25.2667%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="7294"/><text x="0.2500%" y="655.50">community_sim`community_sim::main</text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.01%)</title><rect x="25.2667%" y="725" width="0.0104%" height="15" fill="rgb(251,22,52)" fg:x="7294" fg:w="3"/><text x="25.5167%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (45 samples, 0.16%)</title><rect x="25.2875%" y="709" width="0.1559%" height="15" fill="rgb(229,209,22)" fg:x="7300" fg:w="45"/><text x="25.5375%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (3 samples, 0.01%)</title><rect x="25.4503%" y="693" width="0.0104%" height="15" fill="rgb(234,138,34)" fg:x="7347" fg:w="3"/><text x="25.7003%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (3 samples, 0.01%)</title><rect x="25.4503%" y="677" width="0.0104%" height="15" fill="rgb(212,95,11)" fg:x="7347" fg:w="3"/><text x="25.7003%" y="687.50"></text></g><g><title>libdispatch.dylib`&lt;deduplicated_symbol&gt; (3 samples, 0.01%)</title><rect x="25.4503%" y="661" width="0.0104%" height="15" fill="rgb(240,179,47)" fg:x="7347" fg:w="3"/><text x="25.7003%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="25.4503%" y="645" width="0.0104%" height="15" fill="rgb(240,163,11)" fg:x="7347" fg:w="3"/><text x="25.7003%" y="655.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (3 samples, 0.01%)</title><rect x="25.4815%" y="581" width="0.0104%" height="15" fill="rgb(236,37,12)" fg:x="7356" fg:w="3"/><text x="25.7315%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (3 samples, 0.01%)</title><rect x="25.4815%" y="565" width="0.0104%" height="15" fill="rgb(232,164,16)" fg:x="7356" fg:w="3"/><text x="25.7315%" y="575.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.01%)</title><rect x="25.4815%" y="549" width="0.0104%" height="15" fill="rgb(244,205,15)" fg:x="7356" fg:w="3"/><text x="25.7315%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="25.4815%" y="533" width="0.0104%" height="15" fill="rgb(223,117,47)" fg:x="7356" fg:w="3"/><text x="25.7315%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="25.4815%" y="517" width="0.0104%" height="15" fill="rgb(244,107,35)" fg:x="7356" fg:w="3"/><text x="25.7315%" y="527.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (5 samples, 0.02%)</title><rect x="25.4780%" y="597" width="0.0173%" height="15" fill="rgb(205,140,8)" fg:x="7355" fg:w="5"/><text x="25.7280%" y="607.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (7 samples, 0.02%)</title><rect x="25.4780%" y="613" width="0.0242%" height="15" fill="rgb(228,84,46)" fg:x="7355" fg:w="7"/><text x="25.7280%" y="623.50"></text></g><g><title>FramePacing`__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (6 samples, 0.02%)</title><rect x="25.5265%" y="581" width="0.0208%" height="15" fill="rgb(254,188,9)" fg:x="7369" fg:w="6"/><text x="25.7765%" y="591.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (15 samples, 0.05%)</title><rect x="25.5092%" y="597" width="0.0520%" height="15" fill="rgb(206,112,54)" fg:x="7364" fg:w="15"/><text x="25.7592%" y="607.50"></text></g><g><title>FramePacing`__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (5 samples, 0.02%)</title><rect x="25.5612%" y="597" width="0.0173%" height="15" fill="rgb(216,84,49)" fg:x="7379" fg:w="5"/><text x="25.8112%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (22 samples, 0.08%)</title><rect x="25.5058%" y="613" width="0.0762%" height="15" fill="rgb(214,194,35)" fg:x="7363" fg:w="22"/><text x="25.7558%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (35 samples, 0.12%)</title><rect x="25.4746%" y="629" width="0.1212%" height="15" fill="rgb(249,28,3)" fg:x="7354" fg:w="35"/><text x="25.7246%" y="639.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.01%)</title><rect x="25.5854%" y="613" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="7386" fg:w="3"/><text x="25.8354%" y="623.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (4 samples, 0.01%)</title><rect x="25.5993%" y="469" width="0.0139%" height="15" fill="rgb(245,217,50)" fg:x="7390" fg:w="4"/><text x="25.8493%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.01%)</title><rect x="25.5993%" y="453" width="0.0139%" height="15" fill="rgb(213,201,24)" fg:x="7390" fg:w="4"/><text x="25.8493%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.01%)</title><rect x="25.5993%" y="437" width="0.0139%" height="15" fill="rgb(248,116,28)" fg:x="7390" fg:w="4"/><text x="25.8493%" y="447.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (5 samples, 0.02%)</title><rect x="25.5993%" y="485" width="0.0173%" height="15" fill="rgb(219,72,43)" fg:x="7390" fg:w="5"/><text x="25.8493%" y="495.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (4 samples, 0.01%)</title><rect x="25.6305%" y="437" width="0.0139%" height="15" fill="rgb(209,138,14)" fg:x="7399" fg:w="4"/><text x="25.8805%" y="447.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (14 samples, 0.05%)</title><rect x="25.5993%" y="501" width="0.0485%" height="15" fill="rgb(222,18,33)" fg:x="7390" fg:w="14"/><text x="25.8493%" y="511.50"></text></g><g><title>Metal`MTLDispatchListApply (9 samples, 0.03%)</title><rect x="25.6166%" y="485" width="0.0312%" height="15" fill="rgb(213,199,7)" fg:x="7395" fg:w="9"/><text x="25.8666%" y="495.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (9 samples, 0.03%)</title><rect x="25.6166%" y="469" width="0.0312%" height="15" fill="rgb(250,110,10)" fg:x="7395" fg:w="9"/><text x="25.8666%" y="479.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (8 samples, 0.03%)</title><rect x="25.6201%" y="453" width="0.0277%" height="15" fill="rgb(248,123,6)" fg:x="7396" fg:w="8"/><text x="25.8701%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.03%)</title><rect x="25.6582%" y="421" width="0.0312%" height="15" fill="rgb(206,91,31)" fg:x="7407" fg:w="9"/><text x="25.9082%" y="431.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseExtraResources (10 samples, 0.03%)</title><rect x="25.6582%" y="437" width="0.0346%" height="15" fill="rgb(211,154,13)" fg:x="7407" fg:w="10"/><text x="25.9082%" y="447.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.02%)</title><rect x="25.6997%" y="341" width="0.0242%" height="15" fill="rgb(225,148,7)" fg:x="7419" fg:w="7"/><text x="25.9497%" y="351.50"></text></g><g><title>IOKit`iokit_user_client_trap (6 samples, 0.02%)</title><rect x="25.7032%" y="325" width="0.0208%" height="15" fill="rgb(220,160,43)" fg:x="7420" fg:w="6"/><text x="25.9532%" y="335.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyBuffer dealloc] (9 samples, 0.03%)</title><rect x="25.6963%" y="405" width="0.0312%" height="15" fill="rgb(213,52,39)" fg:x="7418" fg:w="9"/><text x="25.9463%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXBuffer dealloc] (9 samples, 0.03%)</title><rect x="25.6963%" y="389" width="0.0312%" height="15" fill="rgb(243,137,7)" fg:x="7418" fg:w="9"/><text x="25.9463%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (9 samples, 0.03%)</title><rect x="25.6963%" y="373" width="0.0312%" height="15" fill="rgb(230,79,13)" fg:x="7418" fg:w="9"/><text x="25.9463%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (8 samples, 0.03%)</title><rect x="25.6997%" y="357" width="0.0277%" height="15" fill="rgb(247,105,23)" fg:x="7419" fg:w="8"/><text x="25.9497%" y="367.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (29 samples, 0.10%)</title><rect x="25.6512%" y="453" width="0.1005%" height="15" fill="rgb(223,179,41)" fg:x="7405" fg:w="29"/><text x="25.9012%" y="463.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (17 samples, 0.06%)</title><rect x="25.6928%" y="437" width="0.0589%" height="15" fill="rgb(218,9,34)" fg:x="7417" fg:w="17"/><text x="25.9428%" y="447.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (17 samples, 0.06%)</title><rect x="25.6928%" y="421" width="0.0589%" height="15" fill="rgb(222,106,8)" fg:x="7417" fg:w="17"/><text x="25.9428%" y="431.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (7 samples, 0.02%)</title><rect x="25.7274%" y="405" width="0.0242%" height="15" fill="rgb(211,220,0)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="415.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (7 samples, 0.02%)</title><rect x="25.7274%" y="389" width="0.0242%" height="15" fill="rgb(229,52,16)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="399.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (7 samples, 0.02%)</title><rect x="25.7274%" y="373" width="0.0242%" height="15" fill="rgb(212,155,18)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (7 samples, 0.02%)</title><rect x="25.7274%" y="357" width="0.0242%" height="15" fill="rgb(242,21,14)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="367.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.02%)</title><rect x="25.7274%" y="341" width="0.0242%" height="15" fill="rgb(222,19,48)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="351.50"></text></g><g><title>IOKit`iokit_user_client_trap (7 samples, 0.02%)</title><rect x="25.7274%" y="325" width="0.0242%" height="15" fill="rgb(232,45,27)" fg:x="7427" fg:w="7"/><text x="25.9774%" y="335.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (30 samples, 0.10%)</title><rect x="25.6512%" y="469" width="0.1039%" height="15" fill="rgb(249,103,42)" fg:x="7405" fg:w="30"/><text x="25.9012%" y="479.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (49 samples, 0.17%)</title><rect x="25.5958%" y="517" width="0.1697%" height="15" fill="rgb(246,81,33)" fg:x="7389" fg:w="49"/><text x="25.8458%" y="527.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (34 samples, 0.12%)</title><rect x="25.6478%" y="501" width="0.1178%" height="15" fill="rgb(252,33,42)" fg:x="7404" fg:w="34"/><text x="25.8978%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (33 samples, 0.11%)</title><rect x="25.6512%" y="485" width="0.1143%" height="15" fill="rgb(209,212,41)" fg:x="7405" fg:w="33"/><text x="25.9012%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (3 samples, 0.01%)</title><rect x="25.7552%" y="469" width="0.0104%" height="15" fill="rgb(207,154,6)" fg:x="7435" fg:w="3"/><text x="26.0052%" y="479.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (3 samples, 0.01%)</title><rect x="25.7552%" y="453" width="0.0104%" height="15" fill="rgb(223,64,47)" fg:x="7435" fg:w="3"/><text x="26.0052%" y="463.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (3 samples, 0.01%)</title><rect x="25.7552%" y="437" width="0.0104%" height="15" fill="rgb(211,161,38)" fg:x="7435" fg:w="3"/><text x="26.0052%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="25.7552%" y="421" width="0.0104%" height="15" fill="rgb(219,138,40)" fg:x="7435" fg:w="3"/><text x="26.0052%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="25.7552%" y="405" width="0.0104%" height="15" fill="rgb(241,228,46)" fg:x="7435" fg:w="3"/><text x="26.0052%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (51 samples, 0.18%)</title><rect x="25.5958%" y="549" width="0.1767%" height="15" fill="rgb(223,209,38)" fg:x="7389" fg:w="51"/><text x="25.8458%" y="559.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (51 samples, 0.18%)</title><rect x="25.5958%" y="533" width="0.1767%" height="15" fill="rgb(236,164,45)" fg:x="7389" fg:w="51"/><text x="25.8458%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (53 samples, 0.18%)</title><rect x="25.5958%" y="629" width="0.1836%" height="15" fill="rgb(231,15,5)" fg:x="7389" fg:w="53"/><text x="25.8458%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (53 samples, 0.18%)</title><rect x="25.5958%" y="613" width="0.1836%" height="15" fill="rgb(252,35,15)" fg:x="7389" fg:w="53"/><text x="25.8458%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (53 samples, 0.18%)</title><rect x="25.5958%" y="597" width="0.1836%" height="15" fill="rgb(248,181,18)" fg:x="7389" fg:w="53"/><text x="25.8458%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (53 samples, 0.18%)</title><rect x="25.5958%" y="581" width="0.1836%" height="15" fill="rgb(233,39,42)" fg:x="7389" fg:w="53"/><text x="25.8458%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (53 samples, 0.18%)</title><rect x="25.5958%" y="565" width="0.1836%" height="15" fill="rgb(238,110,33)" fg:x="7389" fg:w="53"/><text x="25.8458%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (4 samples, 0.01%)</title><rect x="25.7794%" y="613" width="0.0139%" height="15" fill="rgb(233,195,10)" fg:x="7442" fg:w="4"/><text x="26.0294%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (4 samples, 0.01%)</title><rect x="25.7794%" y="597" width="0.0139%" height="15" fill="rgb(254,105,3)" fg:x="7442" fg:w="4"/><text x="26.0294%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (4 samples, 0.01%)</title><rect x="25.7794%" y="581" width="0.0139%" height="15" fill="rgb(221,225,9)" fg:x="7442" fg:w="4"/><text x="26.0294%" y="591.50"></text></g><g><title>libxpc.dylib`_xpc_connection_mach_event (3 samples, 0.01%)</title><rect x="25.7829%" y="565" width="0.0104%" height="15" fill="rgb(224,227,45)" fg:x="7443" fg:w="3"/><text x="26.0329%" y="575.50"></text></g><g><title>libxpc.dylib`_xpc_connection_call_event_handler (3 samples, 0.01%)</title><rect x="25.7829%" y="549" width="0.0104%" height="15" fill="rgb(229,198,43)" fg:x="7443" fg:w="3"/><text x="26.0329%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (5 samples, 0.02%)</title><rect x="25.7794%" y="629" width="0.0173%" height="15" fill="rgb(206,209,35)" fg:x="7442" fg:w="5"/><text x="26.0294%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool updateResourcePurgeability] (6 samples, 0.02%)</title><rect x="25.8175%" y="549" width="0.0208%" height="15" fill="rgb(245,195,53)" fg:x="7453" fg:w="6"/><text x="26.0675%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (6 samples, 0.02%)</title><rect x="25.8175%" y="533" width="0.0208%" height="15" fill="rgb(240,92,26)" fg:x="7453" fg:w="6"/><text x="26.0675%" y="543.50"></text></g><g><title>IOKit`iokit_user_client_trap (5 samples, 0.02%)</title><rect x="25.8210%" y="517" width="0.0173%" height="15" fill="rgb(207,40,23)" fg:x="7454" fg:w="5"/><text x="26.0710%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (7 samples, 0.02%)</title><rect x="25.8175%" y="565" width="0.0242%" height="15" fill="rgb(223,111,35)" fg:x="7453" fg:w="7"/><text x="26.0675%" y="575.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (3 samples, 0.01%)</title><rect x="25.8487%" y="517" width="0.0104%" height="15" fill="rgb(229,147,28)" fg:x="7462" fg:w="3"/><text x="26.0987%" y="527.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="25.8487%" y="501" width="0.0104%" height="15" fill="rgb(211,29,28)" fg:x="7462" fg:w="3"/><text x="26.0987%" y="511.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="25.8487%" y="485" width="0.0104%" height="15" fill="rgb(228,72,33)" fg:x="7462" fg:w="3"/><text x="26.0987%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="25.8487%" y="469" width="0.0104%" height="15" fill="rgb(205,214,31)" fg:x="7462" fg:w="3"/><text x="26.0987%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (225 samples, 0.78%)</title><rect x="25.8418%" y="565" width="0.7794%" height="15" fill="rgb(224,111,15)" fg:x="7460" fg:w="225"/><text x="26.0918%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (224 samples, 0.78%)</title><rect x="25.8452%" y="549" width="0.7759%" height="15" fill="rgb(253,21,26)" fg:x="7461" fg:w="224"/><text x="26.0952%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (224 samples, 0.78%)</title><rect x="25.8452%" y="533" width="0.7759%" height="15" fill="rgb(245,139,43)" fg:x="7461" fg:w="224"/><text x="26.0952%" y="543.50"></text></g><g><title>IOKit`iokit_user_client_trap (220 samples, 0.76%)</title><rect x="25.8591%" y="517" width="0.7621%" height="15" fill="rgb(252,170,7)" fg:x="7465" fg:w="220"/><text x="26.1091%" y="527.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (3 samples, 0.01%)</title><rect x="26.6246%" y="549" width="0.0104%" height="15" fill="rgb(231,118,14)" fg:x="7686" fg:w="3"/><text x="26.8746%" y="559.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (3 samples, 0.01%)</title><rect x="26.6246%" y="533" width="0.0104%" height="15" fill="rgb(238,83,0)" fg:x="7686" fg:w="3"/><text x="26.8746%" y="543.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (4 samples, 0.01%)</title><rect x="26.6385%" y="549" width="0.0139%" height="15" fill="rgb(221,39,39)" fg:x="7690" fg:w="4"/><text x="26.8885%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (247 samples, 0.86%)</title><rect x="25.8002%" y="629" width="0.8556%" height="15" fill="rgb(222,119,46)" fg:x="7448" fg:w="247"/><text x="26.0502%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (245 samples, 0.85%)</title><rect x="25.8071%" y="613" width="0.8487%" height="15" fill="rgb(222,165,49)" fg:x="7450" fg:w="245"/><text x="26.0571%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (245 samples, 0.85%)</title><rect x="25.8071%" y="597" width="0.8487%" height="15" fill="rgb(219,113,52)" fg:x="7450" fg:w="245"/><text x="26.0571%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (242 samples, 0.84%)</title><rect x="25.8175%" y="581" width="0.8383%" height="15" fill="rgb(214,7,15)" fg:x="7453" fg:w="242"/><text x="26.0675%" y="591.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (10 samples, 0.03%)</title><rect x="26.6212%" y="565" width="0.0346%" height="15" fill="rgb(235,32,4)" fg:x="7685" fg:w="10"/><text x="26.8712%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (345 samples, 1.20%)</title><rect x="25.4642%" y="661" width="1.1951%" height="15" fill="rgb(238,90,54)" fg:x="7351" fg:w="345"/><text x="25.7142%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (344 samples, 1.19%)</title><rect x="25.4676%" y="645" width="1.1916%" height="15" fill="rgb(213,208,19)" fg:x="7352" fg:w="344"/><text x="25.7176%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (399 samples, 1.38%)</title><rect x="25.2806%" y="725" width="1.3822%" height="15" fill="rgb(233,156,4)" fg:x="7298" fg:w="399"/><text x="25.5306%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (351 samples, 1.22%)</title><rect x="25.4469%" y="709" width="1.2159%" height="15" fill="rgb(207,194,5)" fg:x="7346" fg:w="351"/><text x="25.6969%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (347 samples, 1.20%)</title><rect x="25.4607%" y="693" width="1.2020%" height="15" fill="rgb(206,111,30)" fg:x="7350" fg:w="347"/><text x="25.7107%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (346 samples, 1.20%)</title><rect x="25.4642%" y="677" width="1.1986%" height="15" fill="rgb(243,70,54)" fg:x="7351" fg:w="346"/><text x="25.7142%" y="687.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (3 samples, 0.01%)</title><rect x="26.7216%" y="517" width="0.0104%" height="15" fill="rgb(242,28,8)" fg:x="7714" fg:w="3"/><text x="26.9716%" y="527.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (3 samples, 0.01%)</title><rect x="26.7216%" y="501" width="0.0104%" height="15" fill="rgb(219,106,18)" fg:x="7714" fg:w="3"/><text x="26.9716%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.01%)</title><rect x="26.7216%" y="485" width="0.0104%" height="15" fill="rgb(244,222,10)" fg:x="7714" fg:w="3"/><text x="26.9716%" y="495.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="26.7493%" y="389" width="0.0104%" height="15" fill="rgb(236,179,52)" fg:x="7722" fg:w="3"/><text x="26.9993%" y="399.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (3 samples, 0.01%)</title><rect x="26.7493%" y="373" width="0.0104%" height="15" fill="rgb(213,23,39)" fg:x="7722" fg:w="3"/><text x="26.9993%" y="383.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (3 samples, 0.01%)</title><rect x="26.7493%" y="357" width="0.0104%" height="15" fill="rgb(238,48,10)" fg:x="7722" fg:w="3"/><text x="26.9993%" y="367.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (3 samples, 0.01%)</title><rect x="26.7632%" y="325" width="0.0104%" height="15" fill="rgb(251,196,23)" fg:x="7726" fg:w="3"/><text x="27.0132%" y="335.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.02%)</title><rect x="26.7597%" y="389" width="0.0173%" height="15" fill="rgb(250,152,24)" fg:x="7725" fg:w="5"/><text x="27.0097%" y="399.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (5 samples, 0.02%)</title><rect x="26.7597%" y="373" width="0.0173%" height="15" fill="rgb(209,150,17)" fg:x="7725" fg:w="5"/><text x="27.0097%" y="383.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (5 samples, 0.02%)</title><rect x="26.7597%" y="357" width="0.0173%" height="15" fill="rgb(234,202,34)" fg:x="7725" fg:w="5"/><text x="27.0097%" y="367.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.02%)</title><rect x="26.7597%" y="341" width="0.0173%" height="15" fill="rgb(253,148,53)" fg:x="7725" fg:w="5"/><text x="27.0097%" y="351.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (11 samples, 0.04%)</title><rect x="26.7459%" y="437" width="0.0381%" height="15" fill="rgb(218,129,16)" fg:x="7721" fg:w="11"/><text x="26.9959%" y="447.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (11 samples, 0.04%)</title><rect x="26.7459%" y="421" width="0.0381%" height="15" fill="rgb(216,85,19)" fg:x="7721" fg:w="11"/><text x="26.9959%" y="431.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (11 samples, 0.04%)</title><rect x="26.7459%" y="405" width="0.0381%" height="15" fill="rgb(235,228,7)" fg:x="7721" fg:w="11"/><text x="26.9959%" y="415.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (14 samples, 0.05%)</title><rect x="26.7424%" y="453" width="0.0485%" height="15" fill="rgb(245,175,0)" fg:x="7720" fg:w="14"/><text x="26.9924%" y="463.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (15 samples, 0.05%)</title><rect x="26.7424%" y="469" width="0.0520%" height="15" fill="rgb(208,168,36)" fg:x="7720" fg:w="15"/><text x="26.9924%" y="479.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (19 samples, 0.07%)</title><rect x="26.7320%" y="517" width="0.0658%" height="15" fill="rgb(246,171,24)" fg:x="7717" fg:w="19"/><text x="26.9820%" y="527.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (19 samples, 0.07%)</title><rect x="26.7320%" y="501" width="0.0658%" height="15" fill="rgb(215,142,24)" fg:x="7717" fg:w="19"/><text x="26.9820%" y="511.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (19 samples, 0.07%)</title><rect x="26.7320%" y="485" width="0.0658%" height="15" fill="rgb(250,187,7)" fg:x="7717" fg:w="19"/><text x="26.9820%" y="495.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (42 samples, 0.15%)</title><rect x="26.7182%" y="533" width="0.1455%" height="15" fill="rgb(228,66,33)" fg:x="7713" fg:w="42"/><text x="26.9682%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (19 samples, 0.07%)</title><rect x="26.7978%" y="517" width="0.0658%" height="15" fill="rgb(234,215,21)" fg:x="7736" fg:w="19"/><text x="27.0478%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (19 samples, 0.07%)</title><rect x="26.7978%" y="501" width="0.0658%" height="15" fill="rgb(222,191,20)" fg:x="7736" fg:w="19"/><text x="27.0478%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (18 samples, 0.06%)</title><rect x="26.8013%" y="485" width="0.0624%" height="15" fill="rgb(245,79,54)" fg:x="7737" fg:w="18"/><text x="27.0513%" y="495.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (50 samples, 0.17%)</title><rect x="26.7043%" y="565" width="0.1732%" height="15" fill="rgb(240,10,37)" fg:x="7709" fg:w="50"/><text x="26.9543%" y="575.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (49 samples, 0.17%)</title><rect x="26.7078%" y="549" width="0.1697%" height="15" fill="rgb(214,192,32)" fg:x="7710" fg:w="49"/><text x="26.9578%" y="559.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (57 samples, 0.20%)</title><rect x="26.6835%" y="581" width="0.1975%" height="15" fill="rgb(209,36,54)" fg:x="7703" fg:w="57"/><text x="26.9335%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (61 samples, 0.21%)</title><rect x="26.6731%" y="645" width="0.2113%" height="15" fill="rgb(220,10,11)" fg:x="7700" fg:w="61"/><text x="26.9231%" y="655.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (61 samples, 0.21%)</title><rect x="26.6731%" y="629" width="0.2113%" height="15" fill="rgb(221,106,17)" fg:x="7700" fg:w="61"/><text x="26.9231%" y="639.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (61 samples, 0.21%)</title><rect x="26.6731%" y="613" width="0.2113%" height="15" fill="rgb(251,142,44)" fg:x="7700" fg:w="61"/><text x="26.9231%" y="623.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (60 samples, 0.21%)</title><rect x="26.6766%" y="597" width="0.2078%" height="15" fill="rgb(238,13,15)" fg:x="7701" fg:w="60"/><text x="26.9266%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (9 samples, 0.03%)</title><rect x="26.8879%" y="645" width="0.0312%" height="15" fill="rgb(208,107,27)" fg:x="7762" fg:w="9"/><text x="27.1379%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (8 samples, 0.03%)</title><rect x="26.8914%" y="629" width="0.0277%" height="15" fill="rgb(205,136,37)" fg:x="7763" fg:w="8"/><text x="27.1414%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (8 samples, 0.03%)</title><rect x="26.8914%" y="613" width="0.0277%" height="15" fill="rgb(250,205,27)" fg:x="7763" fg:w="8"/><text x="27.1414%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.02%)</title><rect x="26.8948%" y="597" width="0.0242%" height="15" fill="rgb(210,80,43)" fg:x="7764" fg:w="7"/><text x="27.1448%" y="607.50"></text></g><g><title>AppKit`_NSEventThread (75 samples, 0.26%)</title><rect x="26.6627%" y="693" width="0.2598%" height="15" fill="rgb(247,160,36)" fg:x="7697" fg:w="75"/><text x="26.9127%" y="703.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (75 samples, 0.26%)</title><rect x="26.6627%" y="677" width="0.2598%" height="15" fill="rgb(234,13,49)" fg:x="7697" fg:w="75"/><text x="26.9127%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (74 samples, 0.26%)</title><rect x="26.6662%" y="661" width="0.2563%" height="15" fill="rgb(234,122,0)" fg:x="7698" fg:w="74"/><text x="26.9162%" y="671.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (640 samples, 2.22%)</title><rect x="34.0966%" y="373" width="2.2170%" height="15" fill="rgb(207,146,38)" fg:x="9843" fg:w="640"/><text x="34.3466%" y="383.50">c..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (759 samples, 2.63%)</title><rect x="36.3136%" y="373" width="2.6292%" height="15" fill="rgb(207,177,25)" fg:x="10483" fg:w="759"/><text x="36.5636%" y="383.50">co..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (177 samples, 0.61%)</title><rect x="40.5986%" y="357" width="0.6131%" height="15" fill="rgb(211,178,42)" fg:x="11720" fg:w="177"/><text x="40.8486%" y="367.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (539 samples, 1.87%)</title><rect x="41.2117%" y="357" width="1.8671%" height="15" fill="rgb(230,69,54)" fg:x="11897" fg:w="539"/><text x="41.4617%" y="367.50">c..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (462 samples, 1.60%)</title><rect x="44.5822%" y="341" width="1.6004%" height="15" fill="rgb(214,135,41)" fg:x="12870" fg:w="462"/><text x="44.8322%" y="351.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (323 samples, 1.12%)</title><rect x="46.1826%" y="341" width="1.1189%" height="15" fill="rgb(237,67,25)" fg:x="13332" fg:w="323"/><text x="46.4326%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (12 samples, 0.04%)</title><rect x="47.3015%" y="341" width="0.0416%" height="15" fill="rgb(222,189,50)" fg:x="13655" fg:w="12"/><text x="47.5515%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (12 samples, 0.04%)</title><rect x="47.3015%" y="325" width="0.0416%" height="15" fill="rgb(245,148,34)" fg:x="13655" fg:w="12"/><text x="47.5515%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.04%)</title><rect x="47.3015%" y="309" width="0.0416%" height="15" fill="rgb(222,29,6)" fg:x="13655" fg:w="12"/><text x="47.5515%" y="319.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,233 samples, 4.27%)</title><rect x="43.0788%" y="357" width="4.2712%" height="15" fill="rgb(221,189,43)" fg:x="12436" fg:w="1233"/><text x="43.3288%" y="367.50">commu..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,444 samples, 8.47%)</title><rect x="38.9428%" y="373" width="8.4661%" height="15" fill="rgb(207,36,27)" fg:x="11242" fg:w="2444"/><text x="39.1928%" y="383.50">community_si..</text></g><g><title>libsystem_platform.dylib`_platform_memset (17 samples, 0.06%)</title><rect x="47.3500%" y="357" width="0.0589%" height="15" fill="rgb(217,90,24)" fg:x="13669" fg:w="17"/><text x="47.6000%" y="367.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (5,930 samples, 20.54%)</title><rect x="26.9572%" y="389" width="20.5418%" height="15" fill="rgb(224,66,35)" fg:x="7782" fg:w="5930"/><text x="27.2072%" y="399.50">community_sim`community_sim::nav..</text></g><g><title>libsystem_malloc.dylib`free_medium (26 samples, 0.09%)</title><rect x="47.4089%" y="373" width="0.0901%" height="15" fill="rgb(221,13,50)" fg:x="13686" fg:w="26"/><text x="47.6589%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (26 samples, 0.09%)</title><rect x="47.4089%" y="357" width="0.0901%" height="15" fill="rgb(236,68,49)" fg:x="13686" fg:w="26"/><text x="47.6589%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (26 samples, 0.09%)</title><rect x="47.4089%" y="341" width="0.0901%" height="15" fill="rgb(229,146,28)" fg:x="13686" fg:w="26"/><text x="47.6589%" y="351.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (373 samples, 1.29%)</title><rect x="47.4990%" y="389" width="1.2921%" height="15" fill="rgb(225,31,38)" fg:x="13712" fg:w="373"/><text x="47.7490%" y="399.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (6,334 samples, 21.94%)</title><rect x="26.9399%" y="421" width="21.9412%" height="15" fill="rgb(250,208,3)" fg:x="7777" fg:w="6334"/><text x="27.1899%" y="431.50">community_sim`&lt;legion::internals::s..</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (6,334 samples, 21.94%)</title><rect x="26.9399%" y="405" width="21.9412%" height="15" fill="rgb(246,54,23)" fg:x="7777" fg:w="6334"/><text x="27.1899%" y="415.50">community_sim`&lt;F as legion::interna..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.09%)</title><rect x="48.7910%" y="389" width="0.0901%" height="15" fill="rgb(243,76,11)" fg:x="14085" fg:w="26"/><text x="49.0410%" y="399.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="48.8915%" y="229" width="0.0139%" height="15" fill="rgb(245,21,50)" fg:x="14114" fg:w="4"/><text x="49.1415%" y="239.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6,345 samples, 21.98%)</title><rect x="26.9364%" y="501" width="21.9794%" height="15" fill="rgb(228,9,43)" fg:x="7776" fg:w="6345"/><text x="27.1864%" y="511.50">community_sim`rayon_core::job::Stac..</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (6,345 samples, 21.98%)</title><rect x="26.9364%" y="485" width="21.9794%" height="15" fill="rgb(208,100,47)" fg:x="7776" fg:w="6345"/><text x="27.1864%" y="495.50">community_sim`rayon::iter::plumbing..</text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (6,345 samples, 21.98%)</title><rect x="26.9364%" y="469" width="21.9794%" height="15" fill="rgb(232,26,8)" fg:x="7776" fg:w="6345"/><text x="27.1864%" y="479.50">community_sim`&lt;rayon::iter::for_eac..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (6,344 samples, 21.98%)</title><rect x="26.9399%" y="453" width="21.9759%" height="15" fill="rgb(216,166,38)" fg:x="7777" fg:w="6344"/><text x="27.1899%" y="463.50">community_sim`&lt;rayon::iter::plumbin..</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,344 samples, 21.98%)</title><rect x="26.9399%" y="437" width="21.9759%" height="15" fill="rgb(251,202,51)" fg:x="7777" fg:w="6344"/><text x="27.1899%" y="447.50">community_sim`core::ops::function::..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (10 samples, 0.03%)</title><rect x="48.8811%" y="421" width="0.0346%" height="15" fill="rgb(254,216,34)" fg:x="14111" fg:w="10"/><text x="49.1311%" y="431.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (10 samples, 0.03%)</title><rect x="48.8811%" y="405" width="0.0346%" height="15" fill="rgb(251,32,27)" fg:x="14111" fg:w="10"/><text x="49.1311%" y="415.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.03%)</title><rect x="48.8846%" y="389" width="0.0312%" height="15" fill="rgb(208,127,28)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="399.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="48.8846%" y="373" width="0.0312%" height="15" fill="rgb(224,137,22)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="383.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (9 samples, 0.03%)</title><rect x="48.8846%" y="357" width="0.0312%" height="15" fill="rgb(254,70,32)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="367.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.03%)</title><rect x="48.8846%" y="341" width="0.0312%" height="15" fill="rgb(229,75,37)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="351.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="48.8846%" y="325" width="0.0312%" height="15" fill="rgb(252,64,23)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="335.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.03%)</title><rect x="48.8846%" y="309" width="0.0312%" height="15" fill="rgb(232,162,48)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="319.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (9 samples, 0.03%)</title><rect x="48.8846%" y="293" width="0.0312%" height="15" fill="rgb(246,160,12)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="303.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.03%)</title><rect x="48.8846%" y="277" width="0.0312%" height="15" fill="rgb(247,166,0)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="287.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (9 samples, 0.03%)</title><rect x="48.8846%" y="261" width="0.0312%" height="15" fill="rgb(249,219,21)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="271.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (9 samples, 0.03%)</title><rect x="48.8846%" y="245" width="0.0312%" height="15" fill="rgb(205,209,3)" fg:x="14112" fg:w="9"/><text x="49.1346%" y="255.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="48.9054%" y="229" width="0.0104%" height="15" fill="rgb(243,44,1)" fg:x="14118" fg:w="3"/><text x="49.1554%" y="239.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (3 samples, 0.01%)</title><rect x="48.9054%" y="213" width="0.0104%" height="15" fill="rgb(206,159,16)" fg:x="14118" fg:w="3"/><text x="49.1554%" y="223.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (3 samples, 0.01%)</title><rect x="48.9054%" y="197" width="0.0104%" height="15" fill="rgb(244,77,30)" fg:x="14118" fg:w="3"/><text x="49.1554%" y="207.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="48.9158%" y="373" width="0.0104%" height="15" fill="rgb(218,69,12)" fg:x="14121" fg:w="3"/><text x="49.1658%" y="383.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.02%)</title><rect x="48.9158%" y="485" width="0.0173%" height="15" fill="rgb(212,87,7)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="495.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.02%)</title><rect x="48.9158%" y="469" width="0.0173%" height="15" fill="rgb(245,114,25)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="479.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.02%)</title><rect x="48.9158%" y="453" width="0.0173%" height="15" fill="rgb(210,61,42)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="463.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (5 samples, 0.02%)</title><rect x="48.9158%" y="437" width="0.0173%" height="15" fill="rgb(211,52,33)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="447.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.02%)</title><rect x="48.9158%" y="421" width="0.0173%" height="15" fill="rgb(234,58,33)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="431.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (5 samples, 0.02%)</title><rect x="48.9158%" y="405" width="0.0173%" height="15" fill="rgb(220,115,36)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="415.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (5 samples, 0.02%)</title><rect x="48.9158%" y="389" width="0.0173%" height="15" fill="rgb(243,153,54)" fg:x="14121" fg:w="5"/><text x="49.1658%" y="399.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (6,352 samples, 22.00%)</title><rect x="26.9364%" y="517" width="22.0036%" height="15" fill="rgb(251,47,18)" fg:x="7776" fg:w="6352"/><text x="27.1864%" y="527.50">community_sim`rayon_core::join::joi..</text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 0.02%)</title><rect x="48.9158%" y="501" width="0.0242%" height="15" fill="rgb(242,102,42)" fg:x="14121" fg:w="7"/><text x="49.1658%" y="511.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (6,359 samples, 22.03%)</title><rect x="26.9329%" y="533" width="22.0279%" height="15" fill="rgb(234,31,38)" fg:x="7775" fg:w="6359"/><text x="27.1829%" y="543.50">community_sim`rayon_core::join::joi..</text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (4 samples, 0.01%)</title><rect x="48.9469%" y="517" width="0.0139%" height="15" fill="rgb(221,117,51)" fg:x="14130" fg:w="4"/><text x="49.1969%" y="527.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (4 samples, 0.01%)</title><rect x="48.9469%" y="501" width="0.0139%" height="15" fill="rgb(212,20,18)" fg:x="14130" fg:w="4"/><text x="49.1969%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.01%)</title><rect x="48.9469%" y="485" width="0.0139%" height="15" fill="rgb(245,133,36)" fg:x="14130" fg:w="4"/><text x="49.1969%" y="495.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (6,362 samples, 22.04%)</title><rect x="26.9329%" y="565" width="22.0382%" height="15" fill="rgb(212,6,19)" fg:x="7775" fg:w="6362"/><text x="27.1829%" y="575.50">community_sim`&lt;rayon::iter::plumbin..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (6,362 samples, 22.04%)</title><rect x="26.9329%" y="549" width="22.0382%" height="15" fill="rgb(218,1,36)" fg:x="7775" fg:w="6362"/><text x="27.1829%" y="559.50">community_sim`rayon_core::join::joi..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (6,363 samples, 22.04%)</title><rect x="26.9329%" y="597" width="22.0417%" height="15" fill="rgb(246,84,54)" fg:x="7775" fg:w="6363"/><text x="27.1829%" y="607.50">community_sim`rayon_core::join::joi..</text></g><g><title>community_sim`legion::internals::systems::schedule::Executor::run_systems (6,363 samples, 22.04%)</title><rect x="26.9329%" y="581" width="22.0417%" height="15" fill="rgb(242,110,6)" fg:x="7775" fg:w="6363"/><text x="27.1829%" y="591.50">community_sim`legion::internals::sy..</text></g><g><title>community_sim`&lt;deduplicated_symbol&gt; (6,367 samples, 22.06%)</title><rect x="26.9225%" y="613" width="22.0556%" height="15" fill="rgb(214,47,5)" fg:x="7772" fg:w="6367"/><text x="27.1725%" y="623.50">community_sim`&lt;deduplicated_symbol&gt;</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (5 samples, 0.02%)</title><rect x="48.9816%" y="565" width="0.0173%" height="15" fill="rgb(218,159,25)" fg:x="14140" fg:w="5"/><text x="49.2316%" y="575.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (5 samples, 0.02%)</title><rect x="48.9816%" y="549" width="0.0173%" height="15" fill="rgb(215,211,28)" fg:x="14140" fg:w="5"/><text x="49.2316%" y="559.50"></text></g><g><title>community_sim`std::sys::pal::unix::time::Timespec::now (3 samples, 0.01%)</title><rect x="48.9885%" y="533" width="0.0104%" height="15" fill="rgb(238,59,32)" fg:x="14142" fg:w="3"/><text x="49.2385%" y="543.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.01%)</title><rect x="48.9885%" y="517" width="0.0104%" height="15" fill="rgb(226,82,3)" fg:x="14142" fg:w="3"/><text x="49.2385%" y="527.50"></text></g><g><title>community_sim`alloc::fmt::format::format_inner (4 samples, 0.01%)</title><rect x="49.0058%" y="501" width="0.0139%" height="15" fill="rgb(240,164,32)" fg:x="14147" fg:w="4"/><text x="49.2558%" y="511.50"></text></g><g><title>community_sim`core::fmt::write (4 samples, 0.01%)</title><rect x="49.0058%" y="485" width="0.0139%" height="15" fill="rgb(232,46,7)" fg:x="14147" fg:w="4"/><text x="49.2558%" y="495.50"></text></g><g><title>community_sim`core::fmt::float::float_to_decimal_common_exact (3 samples, 0.01%)</title><rect x="49.0093%" y="469" width="0.0104%" height="15" fill="rgb(229,129,53)" fg:x="14148" fg:w="3"/><text x="49.2593%" y="479.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,342 samples, 4.65%)</title><rect x="65.0928%" y="485" width="4.6487%" height="15" fill="rgb(234,188,29)" fg:x="18791" fg:w="1342"/><text x="65.3428%" y="495.50">commu..</text></g><g><title>community_sim`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="69.7416%" y="485" width="0.0139%" height="15" fill="rgb(246,141,4)" fg:x="20133" fg:w="4"/><text x="69.9916%" y="495.50"></text></g><g><title>community_sim`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="69.7450%" y="469" width="0.0104%" height="15" fill="rgb(229,23,39)" fg:x="20134" fg:w="3"/><text x="69.9950%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="69.7450%" y="453" width="0.0104%" height="15" fill="rgb(206,12,3)" fg:x="20134" fg:w="3"/><text x="69.9950%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="69.7450%" y="437" width="0.0104%" height="15" fill="rgb(252,226,20)" fg:x="20134" fg:w="3"/><text x="69.9950%" y="447.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,812 samples, 6.28%)</title><rect x="69.7554%" y="485" width="6.2768%" height="15" fill="rgb(216,123,35)" fg:x="20137" fg:w="1812"/><text x="70.0054%" y="495.50">communit..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 samples, 1.33%)</title><rect x="79.6938%" y="469" width="1.3267%" height="15" fill="rgb(212,68,40)" fg:x="23006" fg:w="383"/><text x="79.9438%" y="479.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,264 samples, 4.38%)</title><rect x="81.0240%" y="469" width="4.3786%" height="15" fill="rgb(254,125,32)" fg:x="23390" fg:w="1264"/><text x="81.2740%" y="479.50">commu..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,094 samples, 3.79%)</title><rect x="89.3931%" y="453" width="3.7897%" height="15" fill="rgb(253,97,22)" fg:x="25806" fg:w="1094"/><text x="89.6431%" y="463.50">comm..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (741 samples, 2.57%)</title><rect x="93.1828%" y="453" width="2.5669%" height="15" fill="rgb(241,101,14)" fg:x="26900" fg:w="741"/><text x="93.4328%" y="463.50">co..</text></g><g><title>libsystem_malloc.dylib`free_medium (35 samples, 0.12%)</title><rect x="95.7531%" y="453" width="0.1212%" height="15" fill="rgb(238,103,29)" fg:x="27642" fg:w="35"/><text x="96.0031%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (33 samples, 0.11%)</title><rect x="95.7600%" y="437" width="0.1143%" height="15" fill="rgb(233,195,47)" fg:x="27644" fg:w="33"/><text x="96.0100%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (33 samples, 0.11%)</title><rect x="95.7600%" y="421" width="0.1143%" height="15" fill="rgb(246,218,30)" fg:x="27644" fg:w="33"/><text x="96.0100%" y="431.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3,024 samples, 10.48%)</title><rect x="85.4025%" y="469" width="10.4753%" height="15" fill="rgb(219,145,47)" fg:x="24654" fg:w="3024"/><text x="85.6525%" y="479.50">community_sim`h..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,763 samples, 19.96%)</title><rect x="76.0323%" y="485" width="19.9633%" height="15" fill="rgb(243,12,26)" fg:x="21949" fg:w="5763"/><text x="76.2823%" y="495.50">community_sim`hashbrown::map::H..</text></g><g><title>libsystem_platform.dylib`_platform_memset (34 samples, 0.12%)</title><rect x="95.8778%" y="469" width="0.1178%" height="15" fill="rgb(214,87,16)" fg:x="27678" fg:w="34"/><text x="96.1278%" y="479.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (13,620 samples, 47.18%)</title><rect x="49.0266%" y="501" width="47.1803%" height="15" fill="rgb(208,99,42)" fg:x="14153" fg:w="13620"/><text x="49.2766%" y="511.50">community_sim`community_sim::navigation::pathfinding::a_star_path</text></g><g><title>libsystem_malloc.dylib`free_medium (61 samples, 0.21%)</title><rect x="95.9956%" y="485" width="0.2113%" height="15" fill="rgb(253,99,2)" fg:x="27712" fg:w="61"/><text x="96.2456%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (60 samples, 0.21%)</title><rect x="95.9990%" y="469" width="0.2078%" height="15" fill="rgb(220,168,23)" fg:x="27713" fg:w="60"/><text x="96.2490%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (60 samples, 0.21%)</title><rect x="95.9990%" y="453" width="0.2078%" height="15" fill="rgb(242,38,24)" fg:x="27713" fg:w="60"/><text x="96.2490%" y="463.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (867 samples, 3.00%)</title><rect x="96.2069%" y="501" width="3.0033%" height="15" fill="rgb(225,182,9)" fg:x="27773" fg:w="867"/><text x="96.4569%" y="511.50">com..</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (14,578 samples, 50.50%)</title><rect x="48.9989%" y="533" width="50.4988%" height="15" fill="rgb(243,178,37)" fg:x="14145" fg:w="14578"/><text x="49.2489%" y="543.50">community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::interna..</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (14,578 samples, 50.50%)</title><rect x="48.9989%" y="517" width="50.4988%" height="15" fill="rgb(232,139,19)" fg:x="14145" fg:w="14578"/><text x="49.2489%" y="527.50">community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (83 samples, 0.29%)</title><rect x="99.2102%" y="501" width="0.2875%" height="15" fill="rgb(225,201,24)" fg:x="28640" fg:w="83"/><text x="99.4602%" y="511.50"></text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.08%)</title><rect x="99.5635%" y="341" width="0.0831%" height="15" fill="rgb(221,47,46)" fg:x="28742" fg:w="24"/><text x="99.8135%" y="351.50"></text></g><g><title>community_sim`&lt;fern::log_impl::File as log::Log&gt;::log (8 samples, 0.03%)</title><rect x="99.6467%" y="293" width="0.0277%" height="15" fill="rgb(249,23,13)" fg:x="28766" fg:w="8"/><text x="99.8967%" y="303.50"></text></g><g><title>community_sim`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (8 samples, 0.03%)</title><rect x="99.6467%" y="277" width="0.0277%" height="15" fill="rgb(219,9,5)" fg:x="28766" fg:w="8"/><text x="99.8967%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.03%)</title><rect x="99.6467%" y="261" width="0.0277%" height="15" fill="rgb(254,171,16)" fg:x="28766" fg:w="8"/><text x="99.8967%" y="271.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (11 samples, 0.04%)</title><rect x="99.6467%" y="341" width="0.0381%" height="15" fill="rgb(230,171,20)" fg:x="28766" fg:w="11"/><text x="99.8967%" y="351.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (11 samples, 0.04%)</title><rect x="99.6467%" y="325" width="0.0381%" height="15" fill="rgb(210,71,41)" fg:x="28766" fg:w="11"/><text x="99.8967%" y="335.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (11 samples, 0.04%)</title><rect x="99.6467%" y="309" width="0.0381%" height="15" fill="rgb(206,173,20)" fg:x="28766" fg:w="11"/><text x="99.8967%" y="319.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Stdout as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="99.6744%" y="293" width="0.0104%" height="15" fill="rgb(233,88,34)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="303.50"></text></g><g><title>community_sim`std::io::Write::write_fmt (3 samples, 0.01%)</title><rect x="99.6744%" y="277" width="0.0104%" height="15" fill="rgb(223,209,46)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="287.50"></text></g><g><title>community_sim`core::fmt::write (3 samples, 0.01%)</title><rect x="99.6744%" y="261" width="0.0104%" height="15" fill="rgb(250,43,18)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="271.50"></text></g><g><title>community_sim`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="99.6744%" y="245" width="0.0104%" height="15" fill="rgb(208,13,10)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="255.50"></text></g><g><title>community_sim`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="99.6744%" y="229" width="0.0104%" height="15" fill="rgb(212,200,36)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="239.50"></text></g><g><title>community_sim`&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="99.6744%" y="213" width="0.0104%" height="15" fill="rgb(225,90,30)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`write (3 samples, 0.01%)</title><rect x="99.6744%" y="197" width="0.0104%" height="15" fill="rgb(236,182,39)" fg:x="28774" fg:w="3"/><text x="99.9244%" y="207.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (54 samples, 0.19%)</title><rect x="99.5012%" y="373" width="0.1871%" height="15" fill="rgb(212,144,35)" fg:x="28724" fg:w="54"/><text x="99.7512%" y="383.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (54 samples, 0.19%)</title><rect x="99.5012%" y="357" width="0.1871%" height="15" fill="rgb(228,63,44)" fg:x="28724" fg:w="54"/><text x="99.7512%" y="367.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (14,639 samples, 50.71%)</title><rect x="48.9816%" y="581" width="50.7101%" height="15" fill="rgb(228,109,6)" fg:x="14140" fg:w="14639"/><text x="49.2316%" y="591.50">community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (14,634 samples, 50.69%)</title><rect x="48.9989%" y="565" width="50.6928%" height="15" fill="rgb(238,117,24)" fg:x="14145" fg:w="14634"/><text x="49.2489%" y="575.50">community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing:..</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (14,634 samples, 50.69%)</title><rect x="48.9989%" y="549" width="50.6928%" height="15" fill="rgb(242,26,26)" fg:x="14145" fg:w="14634"/><text x="49.2489%" y="559.50">community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for ..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (56 samples, 0.19%)</title><rect x="99.4977%" y="533" width="0.1940%" height="15" fill="rgb(221,92,48)" fg:x="28723" fg:w="56"/><text x="99.7477%" y="543.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (56 samples, 0.19%)</title><rect x="99.4977%" y="517" width="0.1940%" height="15" fill="rgb(209,209,32)" fg:x="28723" fg:w="56"/><text x="99.7477%" y="527.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (56 samples, 0.19%)</title><rect x="99.4977%" y="501" width="0.1940%" height="15" fill="rgb(221,70,22)" fg:x="28723" fg:w="56"/><text x="99.7477%" y="511.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (56 samples, 0.19%)</title><rect x="99.4977%" y="485" width="0.1940%" height="15" fill="rgb(248,145,5)" fg:x="28723" fg:w="56"/><text x="99.7477%" y="495.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (56 samples, 0.19%)</title><rect x="99.4977%" y="469" width="0.1940%" height="15" fill="rgb(226,116,26)" fg:x="28723" fg:w="56"/><text x="99.7477%" y="479.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (55 samples, 0.19%)</title><rect x="99.5012%" y="453" width="0.1905%" height="15" fill="rgb(244,5,17)" fg:x="28724" fg:w="55"/><text x="99.7512%" y="463.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (55 samples, 0.19%)</title><rect x="99.5012%" y="437" width="0.1905%" height="15" fill="rgb(252,159,33)" fg:x="28724" fg:w="55"/><text x="99.7512%" y="447.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55 samples, 0.19%)</title><rect x="99.5012%" y="421" width="0.1905%" height="15" fill="rgb(206,71,0)" fg:x="28724" fg:w="55"/><text x="99.7512%" y="431.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (55 samples, 0.19%)</title><rect x="99.5012%" y="405" width="0.1905%" height="15" fill="rgb(233,118,54)" fg:x="28724" fg:w="55"/><text x="99.7512%" y="415.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55 samples, 0.19%)</title><rect x="99.5012%" y="389" width="0.1905%" height="15" fill="rgb(234,83,48)" fg:x="28724" fg:w="55"/><text x="99.7512%" y="399.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (14,641 samples, 50.72%)</title><rect x="48.9816%" y="597" width="50.7171%" height="15" fill="rgb(228,3,54)" fg:x="14140" fg:w="14641"/><text x="49.2316%" y="607.50">community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14,643 samples, 50.72%)</title><rect x="48.9781%" y="613" width="50.7240%" height="15" fill="rgb(226,155,13)" fg:x="14139" fg:w="14643"/><text x="49.2281%" y="623.50">community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>community_sim`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (4 samples, 0.01%)</title><rect x="99.7194%" y="581" width="0.0139%" height="15" fill="rgb(241,28,37)" fg:x="28787" fg:w="4"/><text x="99.9694%" y="591.50"></text></g><g><title>community_sim`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="99.7056%" y="597" width="0.0346%" height="15" fill="rgb(233,93,10)" fg:x="28783" fg:w="10"/><text x="99.9556%" y="607.50"></text></g><g><title>community_sim`crossbeam_deque::deque::Stealer&lt;T&gt;::steal (4 samples, 0.01%)</title><rect x="99.7402%" y="597" width="0.0139%" height="15" fill="rgb(225,113,19)" fg:x="28793" fg:w="4"/><text x="99.9902%" y="607.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::find_work (16 samples, 0.06%)</title><rect x="99.7056%" y="613" width="0.0554%" height="15" fill="rgb(241,2,18)" fg:x="28783" fg:w="16"/><text x="99.9556%" y="623.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::sleep (17 samples, 0.06%)</title><rect x="99.7610%" y="613" width="0.0589%" height="15" fill="rgb(228,207,21)" fg:x="28799" fg:w="17"/><text x="100.0110%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (15 samples, 0.05%)</title><rect x="99.7679%" y="597" width="0.0520%" height="15" fill="rgb(213,211,35)" fg:x="28801" fg:w="15"/><text x="100.0179%" y="607.50"></text></g><g><title>community_sim`std::sys::pal::unix::sync::mutex::Mutex::lock (4 samples, 0.01%)</title><rect x="99.8233%" y="581" width="0.0139%" height="15" fill="rgb(209,83,10)" fg:x="28817" fg:w="4"/><text x="100.0733%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.01%)</title><rect x="99.8233%" y="565" width="0.0139%" height="15" fill="rgb(209,164,1)" fg:x="28817" fg:w="4"/><text x="100.0733%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (4 samples, 0.01%)</title><rect x="99.8233%" y="549" width="0.0139%" height="15" fill="rgb(213,184,43)" fg:x="28817" fg:w="4"/><text x="100.0733%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (26 samples, 0.09%)</title><rect x="99.8372%" y="581" width="0.0901%" height="15" fill="rgb(231,61,34)" fg:x="28821" fg:w="26"/><text x="100.0872%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (5 samples, 0.02%)</title><rect x="99.9273%" y="581" width="0.0173%" height="15" fill="rgb(235,75,3)" fg:x="28847" fg:w="5"/><text x="100.1773%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (5 samples, 0.02%)</title><rect x="99.9273%" y="565" width="0.0173%" height="15" fill="rgb(220,106,47)" fg:x="28847" fg:w="5"/><text x="100.1773%" y="575.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (37 samples, 0.13%)</title><rect x="99.8199%" y="613" width="0.1282%" height="15" fill="rgb(210,196,33)" fg:x="28816" fg:w="37"/><text x="100.0699%" y="623.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (37 samples, 0.13%)</title><rect x="99.8199%" y="597" width="0.1282%" height="15" fill="rgb(229,154,42)" fg:x="28816" fg:w="37"/><text x="100.0699%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (13 samples, 0.05%)</title><rect x="99.9480%" y="613" width="0.0450%" height="15" fill="rgb(228,114,26)" fg:x="28853" fg:w="13"/><text x="100.1980%" y="623.50"></text></g><g><title>all (28,868 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(208,144,1)" fg:x="0" fg:w="28868"/><text x="0.2500%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (21,171 samples, 73.34%)</title><rect x="26.6627%" y="725" width="73.3373%" height="15" fill="rgb(239,112,37)" fg:x="7697" fg:w="21171"/><text x="26.9127%" y="735.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (21,171 samples, 73.34%)</title><rect x="26.6627%" y="709" width="73.3373%" height="15" fill="rgb(210,96,50)" fg:x="7697" fg:w="21171"/><text x="26.9127%" y="719.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>community_sim`std::sys::pal::unix::thread::Thread::new::thread_start (21,096 samples, 73.08%)</title><rect x="26.9225%" y="693" width="73.0775%" height="15" fill="rgb(222,178,2)" fg:x="7772" fg:w="21096"/><text x="27.1725%" y="703.50">community_sim`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}} (21,096 samples, 73.08%)</title><rect x="26.9225%" y="677" width="73.0775%" height="15" fill="rgb(226,74,18)" fg:x="7772" fg:w="21096"/><text x="27.1725%" y="687.50">community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (21,096 samples, 73.08%)</title><rect x="26.9225%" y="661" width="73.0775%" height="15" fill="rgb(225,67,54)" fg:x="7772" fg:w="21096"/><text x="27.1725%" y="671.50">community_sim`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>community_sim`rayon_core::registry::ThreadBuilder::run (21,096 samples, 73.08%)</title><rect x="26.9225%" y="645" width="73.0775%" height="15" fill="rgb(251,92,32)" fg:x="7772" fg:w="21096"/><text x="27.1725%" y="655.50">community_sim`rayon_core::registry::ThreadBuilder::run</text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (21,096 samples, 73.08%)</title><rect x="26.9225%" y="629" width="73.0775%" height="15" fill="rgb(228,149,22)" fg:x="7772" fg:w="21096"/><text x="27.1725%" y="639.50">community_sim`rayon_core::registry::WorkerThread::wait_until_cold</text></g></svg></svg>