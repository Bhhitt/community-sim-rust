<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="24083"><g><title>community_sim`sdl2::render::CanvasBuilder::build (5 samples, 0.02%)</title><rect x="0.0125%" y="693" width="0.0208%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="5"/><text x="0.2625%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateRenderer_REAL (5 samples, 0.02%)</title><rect x="0.0125%" y="677" width="0.0208%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="5"/><text x="0.2625%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_CreateRenderer (5 samples, 0.02%)</title><rect x="0.0125%" y="661" width="0.0208%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="5"/><text x="0.2625%" y="671.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (4 samples, 0.02%)</title><rect x="0.0457%" y="421" width="0.0166%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="4"/><text x="0.2957%" y="431.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (4 samples, 0.02%)</title><rect x="0.0457%" y="405" width="0.0166%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="4"/><text x="0.2957%" y="415.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (4 samples, 0.02%)</title><rect x="0.0457%" y="389" width="0.0166%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="4"/><text x="0.2957%" y="399.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (4 samples, 0.02%)</title><rect x="0.0457%" y="373" width="0.0166%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="4"/><text x="0.2957%" y="383.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (4 samples, 0.02%)</title><rect x="0.0457%" y="357" width="0.0166%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="4"/><text x="0.2957%" y="367.50"></text></g><g><title>AppKit`-[NSButtonCell init] (4 samples, 0.02%)</title><rect x="0.0457%" y="341" width="0.0166%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="4"/><text x="0.2957%" y="351.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (4 samples, 0.02%)</title><rect x="0.0457%" y="325" width="0.0166%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="4"/><text x="0.2957%" y="335.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (3 samples, 0.01%)</title><rect x="0.0498%" y="309" width="0.0125%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="3"/><text x="0.2998%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (6 samples, 0.02%)</title><rect x="0.0415%" y="453" width="0.0249%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="6"/><text x="0.2915%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="0.0415%" y="437" width="0.0249%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="6"/><text x="0.2915%" y="447.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (7 samples, 0.03%)</title><rect x="0.0415%" y="565" width="0.0291%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="7"/><text x="0.2915%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (7 samples, 0.03%)</title><rect x="0.0415%" y="549" width="0.0291%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="7"/><text x="0.2915%" y="559.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.03%)</title><rect x="0.0415%" y="533" width="0.0291%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="7"/><text x="0.2915%" y="543.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.03%)</title><rect x="0.0415%" y="517" width="0.0291%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="7"/><text x="0.2915%" y="527.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (7 samples, 0.03%)</title><rect x="0.0415%" y="501" width="0.0291%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="7"/><text x="0.2915%" y="511.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (7 samples, 0.03%)</title><rect x="0.0415%" y="485" width="0.0291%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="7"/><text x="0.2915%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (7 samples, 0.03%)</title><rect x="0.0415%" y="469" width="0.0291%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="7"/><text x="0.2915%" y="479.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (6 samples, 0.02%)</title><rect x="0.0706%" y="565" width="0.0249%" height="15" fill="rgb(249,33,26)" fg:x="17" fg:w="6"/><text x="0.3206%" y="575.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (6 samples, 0.02%)</title><rect x="0.0706%" y="549" width="0.0249%" height="15" fill="rgb(235,183,28)" fg:x="17" fg:w="6"/><text x="0.3206%" y="559.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (6 samples, 0.02%)</title><rect x="0.0706%" y="533" width="0.0249%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="6"/><text x="0.3206%" y="543.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (14 samples, 0.06%)</title><rect x="0.0415%" y="581" width="0.0581%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="14"/><text x="0.2915%" y="591.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (4 samples, 0.02%)</title><rect x="0.1038%" y="549" width="0.0166%" height="15" fill="rgb(241,131,45)" fg:x="25" fg:w="4"/><text x="0.3538%" y="559.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (4 samples, 0.02%)</title><rect x="0.1038%" y="533" width="0.0166%" height="15" fill="rgb(249,31,29)" fg:x="25" fg:w="4"/><text x="0.3538%" y="543.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (4 samples, 0.02%)</title><rect x="0.1038%" y="517" width="0.0166%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="4"/><text x="0.3538%" y="527.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (4 samples, 0.02%)</title><rect x="0.1038%" y="501" width="0.0166%" height="15" fill="rgb(238,160,17)" fg:x="25" fg:w="4"/><text x="0.3538%" y="511.50"></text></g><g><title>Metal`MTLCopyAllDevices (4 samples, 0.02%)</title><rect x="0.1038%" y="485" width="0.0166%" height="15" fill="rgb(214,148,48)" fg:x="25" fg:w="4"/><text x="0.3538%" y="495.50"></text></g><g><title>Metal`MTLRegisterDevices (4 samples, 0.02%)</title><rect x="0.1038%" y="469" width="0.0166%" height="15" fill="rgb(232,36,49)" fg:x="25" fg:w="4"/><text x="0.3538%" y="479.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (7 samples, 0.03%)</title><rect x="0.1038%" y="581" width="0.0291%" height="15" fill="rgb(209,103,24)" fg:x="25" fg:w="7"/><text x="0.3538%" y="591.50"></text></g><g><title>AppKit`_NXCreateWindow (7 samples, 0.03%)</title><rect x="0.1038%" y="565" width="0.0291%" height="15" fill="rgb(229,88,8)" fg:x="25" fg:w="7"/><text x="0.3538%" y="575.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (25 samples, 0.10%)</title><rect x="0.0415%" y="597" width="0.1038%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="25"/><text x="0.2915%" y="607.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:screen:] (27 samples, 0.11%)</title><rect x="0.0374%" y="645" width="0.1121%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="27"/><text x="0.2874%" y="655.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (27 samples, 0.11%)</title><rect x="0.0374%" y="629" width="0.1121%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="27"/><text x="0.2874%" y="639.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (27 samples, 0.11%)</title><rect x="0.0374%" y="613" width="0.1121%" height="15" fill="rgb(233,36,39)" fg:x="9" fg:w="27"/><text x="0.2874%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateWindow (28 samples, 0.12%)</title><rect x="0.0374%" y="661" width="0.1163%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="28"/><text x="0.2874%" y="671.50"></text></g><g><title>community_sim`sdl2::video::WindowBuilder::build (33 samples, 0.14%)</title><rect x="0.0374%" y="693" width="0.1370%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="33"/><text x="0.2874%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateWindow_REAL (33 samples, 0.14%)</title><rect x="0.0374%" y="677" width="0.1370%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="33"/><text x="0.2874%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_ShowWindow_REAL (3 samples, 0.01%)</title><rect x="0.1619%" y="661" width="0.0125%" height="15" fill="rgb(232,182,51)" fg:x="39" fg:w="3"/><text x="0.4119%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_ShowWindow (3 samples, 0.01%)</title><rect x="0.1619%" y="645" width="0.0125%" height="15" fill="rgb(231,60,39)" fg:x="39" fg:w="3"/><text x="0.4119%" y="655.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (11 samples, 0.05%)</title><rect x="0.1744%" y="629" width="0.0457%" height="15" fill="rgb(208,69,12)" fg:x="42" fg:w="11"/><text x="0.4244%" y="639.50"></text></g><g><title>AppKit`-[NSApplication init] (11 samples, 0.05%)</title><rect x="0.1744%" y="613" width="0.0457%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="11"/><text x="0.4244%" y="623.50"></text></g><g><title>AppKit`_NSInitializeAppContext (4 samples, 0.02%)</title><rect x="0.2035%" y="597" width="0.0166%" height="15" fill="rgb(213,116,39)" fg:x="49" fg:w="4"/><text x="0.4535%" y="607.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (4 samples, 0.02%)</title><rect x="0.2035%" y="581" width="0.0166%" height="15" fill="rgb(222,207,29)" fg:x="49" fg:w="4"/><text x="0.4535%" y="591.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (4 samples, 0.02%)</title><rect x="0.2201%" y="629" width="0.0166%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="4"/><text x="0.4701%" y="639.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (4 samples, 0.02%)</title><rect x="0.2201%" y="613" width="0.0166%" height="15" fill="rgb(218,138,4)" fg:x="53" fg:w="4"/><text x="0.4701%" y="623.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (4 samples, 0.02%)</title><rect x="0.2201%" y="597" width="0.0166%" height="15" fill="rgb(250,191,14)" fg:x="53" fg:w="4"/><text x="0.4701%" y="607.50"></text></g><g><title>Foundation`_NSFaultInObject (4 samples, 0.02%)</title><rect x="0.2201%" y="581" width="0.0166%" height="15" fill="rgb(239,60,40)" fg:x="53" fg:w="4"/><text x="0.4701%" y="591.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (4 samples, 0.02%)</title><rect x="0.2201%" y="565" width="0.0166%" height="15" fill="rgb(206,27,48)" fg:x="53" fg:w="4"/><text x="0.4701%" y="575.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (4 samples, 0.02%)</title><rect x="0.2201%" y="549" width="0.0166%" height="15" fill="rgb(225,35,8)" fg:x="53" fg:w="4"/><text x="0.4701%" y="559.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (4 samples, 0.02%)</title><rect x="0.2201%" y="533" width="0.0166%" height="15" fill="rgb(250,213,24)" fg:x="53" fg:w="4"/><text x="0.4701%" y="543.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (3 samples, 0.01%)</title><rect x="0.2242%" y="517" width="0.0125%" height="15" fill="rgb(247,123,22)" fg:x="54" fg:w="3"/><text x="0.4742%" y="527.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (4 samples, 0.02%)</title><rect x="0.2408%" y="501" width="0.0166%" height="15" fill="rgb(231,138,38)" fg:x="58" fg:w="4"/><text x="0.4908%" y="511.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;)::$_0::operator() (4 samples, 0.02%)</title><rect x="0.2408%" y="485" width="0.0166%" height="15" fill="rgb(231,145,46)" fg:x="58" fg:w="4"/><text x="0.4908%" y="495.50"></text></g><g><title>libobjc.A.dylib`map_images (4 samples, 0.02%)</title><rect x="0.2408%" y="469" width="0.0166%" height="15" fill="rgb(251,118,11)" fg:x="58" fg:w="4"/><text x="0.4908%" y="479.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (4 samples, 0.02%)</title><rect x="0.2408%" y="453" width="0.0166%" height="15" fill="rgb(217,147,25)" fg:x="58" fg:w="4"/><text x="0.4908%" y="463.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (8 samples, 0.03%)</title><rect x="0.2367%" y="597" width="0.0332%" height="15" fill="rgb(247,81,37)" fg:x="57" fg:w="8"/><text x="0.4867%" y="607.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (8 samples, 0.03%)</title><rect x="0.2367%" y="581" width="0.0332%" height="15" fill="rgb(209,12,38)" fg:x="57" fg:w="8"/><text x="0.4867%" y="591.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (8 samples, 0.03%)</title><rect x="0.2367%" y="565" width="0.0332%" height="15" fill="rgb(227,1,9)" fg:x="57" fg:w="8"/><text x="0.4867%" y="575.50"></text></g><g><title>SoftLinking`_sl_dlopen (8 samples, 0.03%)</title><rect x="0.2367%" y="549" width="0.0332%" height="15" fill="rgb(248,47,43)" fg:x="57" fg:w="8"/><text x="0.4867%" y="559.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (8 samples, 0.03%)</title><rect x="0.2367%" y="533" width="0.0332%" height="15" fill="rgb(221,10,30)" fg:x="57" fg:w="8"/><text x="0.4867%" y="543.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (8 samples, 0.03%)</title><rect x="0.2367%" y="517" width="0.0332%" height="15" fill="rgb(210,229,1)" fg:x="57" fg:w="8"/><text x="0.4867%" y="527.50"></text></g><g><title>dyld`void dyld4::RuntimeLocks::withLoadersWriteLockAndProtectedStack&lt;dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()&gt;(dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;())::&apos;lambda&apos;()::operator() (3 samples, 0.01%)</title><rect x="0.2574%" y="501" width="0.0125%" height="15" fill="rgb(222,148,37)" fg:x="62" fg:w="3"/><text x="0.5074%" y="511.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator()() const::&apos;lambda&apos;()::operator() (3 samples, 0.01%)</title><rect x="0.2574%" y="485" width="0.0125%" height="15" fill="rgb(234,67,33)" fg:x="62" fg:w="3"/><text x="0.5074%" y="495.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (9 samples, 0.04%)</title><rect x="0.2367%" y="629" width="0.0374%" height="15" fill="rgb(247,98,35)" fg:x="57" fg:w="9"/><text x="0.4867%" y="639.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (9 samples, 0.04%)</title><rect x="0.2367%" y="613" width="0.0374%" height="15" fill="rgb(247,138,52)" fg:x="57" fg:w="9"/><text x="0.4867%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_CreateDevice (28 samples, 0.12%)</title><rect x="0.1744%" y="661" width="0.1163%" height="15" fill="rgb(213,79,30)" fg:x="42" fg:w="28"/><text x="0.4244%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_RegisterApp (28 samples, 0.12%)</title><rect x="0.1744%" y="645" width="0.1163%" height="15" fill="rgb(246,177,23)" fg:x="42" fg:w="28"/><text x="0.4244%" y="655.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::init_sdl2 (70 samples, 0.29%)</title><rect x="0.0125%" y="709" width="0.2907%" height="15" fill="rgb(230,62,27)" fg:x="3" fg:w="70"/><text x="0.2625%" y="719.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_InitSubSystem_REAL (31 samples, 0.13%)</title><rect x="0.1744%" y="693" width="0.1287%" height="15" fill="rgb(216,154,8)" fg:x="42" fg:w="31"/><text x="0.4244%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_VideoInit_REAL (31 samples, 0.13%)</title><rect x="0.1744%" y="677" width="0.1287%" height="15" fill="rgb(244,35,45)" fg:x="42" fg:w="31"/><text x="0.4244%" y="687.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_RenderFillRect (8 samples, 0.03%)</title><rect x="0.3031%" y="693" width="0.0332%" height="15" fill="rgb(251,115,12)" fg:x="73" fg:w="8"/><text x="0.5531%" y="703.50"></text></g><g><title>community_sim`DYLD-STUB$$SDL_SetRenderDrawColor (12 samples, 0.05%)</title><rect x="0.3363%" y="693" width="0.0498%" height="15" fill="rgb(240,54,50)" fg:x="81" fg:w="12"/><text x="0.5863%" y="703.50"></text></g><g><title>libicucore.A.dylib`ulocdata_getExemplarSet (3 samples, 0.01%)</title><rect x="0.4152%" y="373" width="0.0125%" height="15" fill="rgb(233,84,52)" fg:x="100" fg:w="3"/><text x="0.6652%" y="383.50"></text></g><g><title>libicucore.A.dylib`uset_openPatternOptions (3 samples, 0.01%)</title><rect x="0.4152%" y="357" width="0.0125%" height="15" fill="rgb(207,117,47)" fg:x="100" fg:w="3"/><text x="0.6652%" y="367.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (3 samples, 0.01%)</title><rect x="0.4152%" y="341" width="0.0125%" height="15" fill="rgb(249,43,39)" fg:x="100" fg:w="3"/><text x="0.6652%" y="351.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern (3 samples, 0.01%)</title><rect x="0.4152%" y="325" width="0.0125%" height="15" fill="rgb(209,38,44)" fg:x="100" fg:w="3"/><text x="0.6652%" y="335.50"></text></g><g><title>libicucore.A.dylib`icu::UnicodeSet::applyPattern(icu::RuleCharacterIterator&amp;, icu::SymbolTable const*, icu::UnicodeString&amp;, unsigned int, icu::UnicodeSet&amp; (icu::UnicodeSet::*) (3 samples, 0.01%)</title><rect x="0.4152%" y="309" width="0.0125%" height="15" fill="rgb(236,212,23)" fg:x="100" fg:w="3"/><text x="0.6652%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (7 samples, 0.03%)</title><rect x="0.4111%" y="485" width="0.0291%" height="15" fill="rgb(242,79,21)" fg:x="99" fg:w="7"/><text x="0.6611%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (7 samples, 0.03%)</title><rect x="0.4111%" y="469" width="0.0291%" height="15" fill="rgb(211,96,35)" fg:x="99" fg:w="7"/><text x="0.6611%" y="479.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (7 samples, 0.03%)</title><rect x="0.4111%" y="453" width="0.0291%" height="15" fill="rgb(253,215,40)" fg:x="99" fg:w="7"/><text x="0.6611%" y="463.50"></text></g><g><title>AppKit`__46-[NSIATextInputActionsContext updateInputMode]_block_invoke (7 samples, 0.03%)</title><rect x="0.4111%" y="437" width="0.0291%" height="15" fill="rgb(211,81,21)" fg:x="99" fg:w="7"/><text x="0.6611%" y="447.50"></text></g><g><title>HIToolbox`TSMGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.4111%" y="421" width="0.0291%" height="15" fill="rgb(208,190,38)" fg:x="99" fg:w="7"/><text x="0.6611%" y="431.50"></text></g><g><title>HIToolbox`islGetInputSourcePropertyWithSetter (7 samples, 0.03%)</title><rect x="0.4111%" y="405" width="0.0291%" height="15" fill="rgb(235,213,38)" fg:x="99" fg:w="7"/><text x="0.6611%" y="415.50"></text></g><g><title>HIToolbox`TISCreatePropertyInputSourceLanguages (7 samples, 0.03%)</title><rect x="0.4111%" y="389" width="0.0291%" height="15" fill="rgb(237,122,38)" fg:x="99" fg:w="7"/><text x="0.6611%" y="399.50"></text></g><g><title>libicucore.A.dylib`ulocdata_open (3 samples, 0.01%)</title><rect x="0.4277%" y="373" width="0.0125%" height="15" fill="rgb(244,218,35)" fg:x="103" fg:w="3"/><text x="0.6777%" y="383.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (6 samples, 0.02%)</title><rect x="0.4401%" y="405" width="0.0249%" height="15" fill="rgb(240,68,47)" fg:x="106" fg:w="6"/><text x="0.6901%" y="415.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (5 samples, 0.02%)</title><rect x="0.4443%" y="389" width="0.0208%" height="15" fill="rgb(210,16,53)" fg:x="107" fg:w="5"/><text x="0.6943%" y="399.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (4 samples, 0.02%)</title><rect x="0.4484%" y="373" width="0.0166%" height="15" fill="rgb(235,124,12)" fg:x="108" fg:w="4"/><text x="0.6984%" y="383.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="0.4484%" y="357" width="0.0166%" height="15" fill="rgb(224,169,11)" fg:x="108" fg:w="4"/><text x="0.6984%" y="367.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (4 samples, 0.02%)</title><rect x="0.4484%" y="341" width="0.0166%" height="15" fill="rgb(250,166,2)" fg:x="108" fg:w="4"/><text x="0.6984%" y="351.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.02%)</title><rect x="0.4484%" y="325" width="0.0166%" height="15" fill="rgb(242,216,29)" fg:x="108" fg:w="4"/><text x="0.6984%" y="335.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (4 samples, 0.02%)</title><rect x="0.4484%" y="309" width="0.0166%" height="15" fill="rgb(230,116,27)" fg:x="108" fg:w="4"/><text x="0.6984%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (10 samples, 0.04%)</title><rect x="0.4401%" y="485" width="0.0415%" height="15" fill="rgb(228,99,48)" fg:x="106" fg:w="10"/><text x="0.6901%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (10 samples, 0.04%)</title><rect x="0.4401%" y="469" width="0.0415%" height="15" fill="rgb(253,11,6)" fg:x="106" fg:w="10"/><text x="0.6901%" y="479.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (10 samples, 0.04%)</title><rect x="0.4401%" y="453" width="0.0415%" height="15" fill="rgb(247,143,39)" fg:x="106" fg:w="10"/><text x="0.6901%" y="463.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (10 samples, 0.04%)</title><rect x="0.4401%" y="437" width="0.0415%" height="15" fill="rgb(236,97,10)" fg:x="106" fg:w="10"/><text x="0.6901%" y="447.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (10 samples, 0.04%)</title><rect x="0.4401%" y="421" width="0.0415%" height="15" fill="rgb(233,208,19)" fg:x="106" fg:w="10"/><text x="0.6901%" y="431.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (4 samples, 0.02%)</title><rect x="0.4651%" y="405" width="0.0166%" height="15" fill="rgb(216,164,2)" fg:x="112" fg:w="4"/><text x="0.7151%" y="415.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (4 samples, 0.02%)</title><rect x="0.4651%" y="389" width="0.0166%" height="15" fill="rgb(220,129,5)" fg:x="112" fg:w="4"/><text x="0.7151%" y="399.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (4 samples, 0.02%)</title><rect x="0.4651%" y="373" width="0.0166%" height="15" fill="rgb(242,17,10)" fg:x="112" fg:w="4"/><text x="0.7151%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (19 samples, 0.08%)</title><rect x="0.4069%" y="501" width="0.0789%" height="15" fill="rgb(242,107,0)" fg:x="98" fg:w="19"/><text x="0.6569%" y="511.50"></text></g><g><title>AppKit`_DPSNextEvent (22 samples, 0.09%)</title><rect x="0.3986%" y="581" width="0.0914%" height="15" fill="rgb(251,28,31)" fg:x="96" fg:w="22"/><text x="0.6486%" y="591.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (20 samples, 0.08%)</title><rect x="0.4069%" y="565" width="0.0830%" height="15" fill="rgb(233,223,10)" fg:x="98" fg:w="20"/><text x="0.6569%" y="575.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (20 samples, 0.08%)</title><rect x="0.4069%" y="549" width="0.0830%" height="15" fill="rgb(215,21,27)" fg:x="98" fg:w="20"/><text x="0.6569%" y="559.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (20 samples, 0.08%)</title><rect x="0.4069%" y="533" width="0.0830%" height="15" fill="rgb(232,23,21)" fg:x="98" fg:w="20"/><text x="0.6569%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (20 samples, 0.08%)</title><rect x="0.4069%" y="517" width="0.0830%" height="15" fill="rgb(244,5,23)" fg:x="98" fg:w="20"/><text x="0.6569%" y="527.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (25 samples, 0.10%)</title><rect x="0.3903%" y="597" width="0.1038%" height="15" fill="rgb(226,81,46)" fg:x="94" fg:w="25"/><text x="0.6403%" y="607.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _imageWithSymbolName:inCatalog:variableValue:accessibilityDescription:createdWithCompatibilityImageName:] (4 samples, 0.02%)</title><rect x="0.4983%" y="181" width="0.0166%" height="15" fill="rgb(247,70,30)" fg:x="120" fg:w="4"/><text x="0.7483%" y="191.50"></text></g><g><title>AppKit`-[NSImage bestRepresentationForHints:] (3 samples, 0.01%)</title><rect x="0.5024%" y="165" width="0.0125%" height="15" fill="rgb(212,68,19)" fg:x="121" fg:w="3"/><text x="0.7524%" y="175.50"></text></g><g><title>AppKit`__38-[NSImage bestRepresentationForHints:]_block_invoke (3 samples, 0.01%)</title><rect x="0.5024%" y="149" width="0.0125%" height="15" fill="rgb(240,187,13)" fg:x="121" fg:w="3"/><text x="0.7524%" y="159.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider bestRepresentationForImage:hints:] (3 samples, 0.01%)</title><rect x="0.5024%" y="133" width="0.0125%" height="15" fill="rgb(223,113,26)" fg:x="121" fg:w="3"/><text x="0.7524%" y="143.50"></text></g><g><title>AppKit`-[_NSSimpleLRUCache objectForKey:creationBlock:] (3 samples, 0.01%)</title><rect x="0.5024%" y="117" width="0.0125%" height="15" fill="rgb(206,192,2)" fg:x="121" fg:w="3"/><text x="0.7524%" y="127.50"></text></g><g><title>AppKit`-[NSImageSymbolRepProvider _bestRepresentationForImage:hints:] (3 samples, 0.01%)</title><rect x="0.5024%" y="101" width="0.0125%" height="15" fill="rgb(241,108,4)" fg:x="121" fg:w="3"/><text x="0.7524%" y="111.50"></text></g><g><title>CoreUI`-[CUINamedVectorGlyph numberOfHierarchyLayers] (3 samples, 0.01%)</title><rect x="0.5024%" y="85" width="0.0125%" height="15" fill="rgb(247,173,49)" fg:x="121" fg:w="3"/><text x="0.7524%" y="95.50"></text></g><g><title>CoreUI`-[CUINamedVectorGlyph _performWithLockedRenditions:] (3 samples, 0.01%)</title><rect x="0.5024%" y="69" width="0.0125%" height="15" fill="rgb(224,114,35)" fg:x="121" fg:w="3"/><text x="0.7524%" y="79.50"></text></g><g><title>CoreUI`__46-[CUINamedVectorGlyph numberOfHierarchyLayers]_block_invoke (3 samples, 0.01%)</title><rect x="0.5024%" y="53" width="0.0125%" height="15" fill="rgb(245,159,27)" fg:x="121" fg:w="3"/><text x="0.7524%" y="63.50"></text></g><g><title>CoreUI`-[CUINamedVectorGlyph hierarchicalLayerGroup] (3 samples, 0.01%)</title><rect x="0.5024%" y="37" width="0.0125%" height="15" fill="rgb(245,172,44)" fg:x="121" fg:w="3"/><text x="0.7524%" y="47.50"></text></g><g><title>AppKit`_NSAddMoveAndResizeByHalvesItems (3 samples, 0.01%)</title><rect x="0.5149%" y="181" width="0.0125%" height="15" fill="rgb(236,23,11)" fg:x="124" fg:w="3"/><text x="0.7649%" y="191.50"></text></g><g><title>AppKit`_NSWindowMenuAddDefaultSidecarItems (8 samples, 0.03%)</title><rect x="0.4983%" y="197" width="0.0332%" height="15" fill="rgb(205,117,38)" fg:x="120" fg:w="8"/><text x="0.7483%" y="207.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (10 samples, 0.04%)</title><rect x="0.4941%" y="581" width="0.0415%" height="15" fill="rgb(237,72,25)" fg:x="119" fg:w="10"/><text x="0.7441%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLWindow sendEvent:] (9 samples, 0.04%)</title><rect x="0.4983%" y="565" width="0.0374%" height="15" fill="rgb(244,70,9)" fg:x="120" fg:w="9"/><text x="0.7483%" y="575.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (9 samples, 0.04%)</title><rect x="0.4983%" y="549" width="0.0374%" height="15" fill="rgb(217,125,39)" fg:x="120" fg:w="9"/><text x="0.7483%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (9 samples, 0.04%)</title><rect x="0.4983%" y="533" width="0.0374%" height="15" fill="rgb(235,36,10)" fg:x="120" fg:w="9"/><text x="0.7483%" y="543.50"></text></g><g><title>AppKit`-[NSWindow keyDown:] (9 samples, 0.04%)</title><rect x="0.4983%" y="517" width="0.0374%" height="15" fill="rgb(251,123,47)" fg:x="120" fg:w="9"/><text x="0.7483%" y="527.50"></text></g><g><title>AppKit`routeKeyEquivalent (9 samples, 0.04%)</title><rect x="0.4983%" y="501" width="0.0374%" height="15" fill="rgb(221,13,13)" fg:x="120" fg:w="9"/><text x="0.7483%" y="511.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (9 samples, 0.04%)</title><rect x="0.4983%" y="485" width="0.0374%" height="15" fill="rgb(238,131,9)" fg:x="120" fg:w="9"/><text x="0.7483%" y="495.50"></text></g><g><title>AppKit`_NSFindMenuItemMatchingCommandKeyEvent (9 samples, 0.04%)</title><rect x="0.4983%" y="469" width="0.0374%" height="15" fill="rgb(211,50,8)" fg:x="120" fg:w="9"/><text x="0.7483%" y="479.50"></text></g><g><title>AppKit`_NSWrappedSearchReturn (9 samples, 0.04%)</title><rect x="0.4983%" y="453" width="0.0374%" height="15" fill="rgb(245,182,24)" fg:x="120" fg:w="9"/><text x="0.7483%" y="463.50"></text></g><g><title>AppKit`+[NSCocoaMenuImpl(KeyEvents) _menuItemWithKeyEquivalentMatchingEvent:inMenu:includingDisabledItems:] (9 samples, 0.04%)</title><rect x="0.4983%" y="437" width="0.0374%" height="15" fill="rgb(242,14,37)" fg:x="120" fg:w="9"/><text x="0.7483%" y="447.50"></text></g><g><title>AppKit`NSIsMenuKeyEvent (9 samples, 0.04%)</title><rect x="0.4983%" y="421" width="0.0374%" height="15" fill="rgb(246,228,12)" fg:x="120" fg:w="9"/><text x="0.7483%" y="431.50"></text></g><g><title>AppKit`_checkMenusForKeyEvent (9 samples, 0.04%)</title><rect x="0.4983%" y="405" width="0.0374%" height="15" fill="rgb(213,55,15)" fg:x="120" fg:w="9"/><text x="0.7483%" y="415.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (9 samples, 0.04%)</title><rect x="0.4983%" y="389" width="0.0374%" height="15" fill="rgb(209,9,3)" fg:x="120" fg:w="9"/><text x="0.7483%" y="399.50"></text></g><g><title>AppKit`_populateMenu (9 samples, 0.04%)</title><rect x="0.4983%" y="373" width="0.0374%" height="15" fill="rgb(230,59,30)" fg:x="120" fg:w="9"/><text x="0.7483%" y="383.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:incomplete:] (9 samples, 0.04%)</title><rect x="0.4983%" y="357" width="0.0374%" height="15" fill="rgb(209,121,21)" fg:x="120" fg:w="9"/><text x="0.7483%" y="367.50"></text></g><g><title>AppKit`-[NSMenu _withUpdateFlags:do:] (9 samples, 0.04%)</title><rect x="0.4983%" y="341" width="0.0374%" height="15" fill="rgb(220,109,13)" fg:x="120" fg:w="9"/><text x="0.7483%" y="351.50"></text></g><g><title>AppKit`__49-[NSMenu _populateWithFlags:eventRef:incomplete:]_block_invoke (9 samples, 0.04%)</title><rect x="0.4983%" y="325" width="0.0374%" height="15" fill="rgb(232,18,1)" fg:x="120" fg:w="9"/><text x="0.7483%" y="335.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (9 samples, 0.04%)</title><rect x="0.4983%" y="309" width="0.0374%" height="15" fill="rgb(215,41,42)" fg:x="120" fg:w="9"/><text x="0.7483%" y="319.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (9 samples, 0.04%)</title><rect x="0.4983%" y="293" width="0.0374%" height="15" fill="rgb(224,123,36)" fg:x="120" fg:w="9"/><text x="0.7483%" y="303.50"></text></g><g><title>AppKit`-[NSMenu _populateFromSidebandUpdatersOfSign:] (9 samples, 0.04%)</title><rect x="0.4983%" y="277" width="0.0374%" height="15" fill="rgb(240,125,3)" fg:x="120" fg:w="9"/><text x="0.7483%" y="287.50"></text></g><g><title>AppKit`-[NSMenu _performSidebandUpdatersPassingTest:] (9 samples, 0.04%)</title><rect x="0.4983%" y="261" width="0.0374%" height="15" fill="rgb(205,98,50)" fg:x="120" fg:w="9"/><text x="0.7483%" y="271.50"></text></g><g><title>AppKit`-[NSMenu _forEachCachedSidebandUpdaterDo:] (9 samples, 0.04%)</title><rect x="0.4983%" y="245" width="0.0374%" height="15" fill="rgb(205,185,37)" fg:x="120" fg:w="9"/><text x="0.7483%" y="255.50"></text></g><g><title>AppKit`__46-[NSMenu _performSidebandUpdatersPassingTest:]_block_invoke (9 samples, 0.04%)</title><rect x="0.4983%" y="229" width="0.0374%" height="15" fill="rgb(238,207,15)" fg:x="120" fg:w="9"/><text x="0.7483%" y="239.50"></text></g><g><title>AppKit`__47-[NSApplication(NSWindowsMenu) setWindowsMenu:]_block_invoke (9 samples, 0.04%)</title><rect x="0.4983%" y="213" width="0.0374%" height="15" fill="rgb(213,199,42)" fg:x="120" fg:w="9"/><text x="0.7483%" y="223.50"></text></g><g><title>community_sim`community_sim::graphics::input::collect_input_events (37 samples, 0.15%)</title><rect x="0.3862%" y="693" width="0.1536%" height="15" fill="rgb(235,201,11)" fg:x="93" fg:w="37"/><text x="0.6362%" y="703.50"></text></g><g><title>community_sim`&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.15%)</title><rect x="0.3862%" y="677" width="0.1536%" height="15" fill="rgb(207,46,11)" fg:x="93" fg:w="37"/><text x="0.6362%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_WaitEventTimeout_REAL (37 samples, 0.15%)</title><rect x="0.3862%" y="661" width="0.1536%" height="15" fill="rgb(241,35,35)" fg:x="93" fg:w="37"/><text x="0.6362%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_PumpEventsInternal (36 samples, 0.15%)</title><rect x="0.3903%" y="645" width="0.1495%" height="15" fill="rgb(243,32,47)" fg:x="94" fg:w="36"/><text x="0.6403%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEvents (36 samples, 0.15%)</title><rect x="0.3903%" y="629" width="0.1495%" height="15" fill="rgb(247,202,23)" fg:x="94" fg:w="36"/><text x="0.6403%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`Cocoa_PumpEventsUntilDate (36 samples, 0.15%)</title><rect x="0.3903%" y="613" width="0.1495%" height="15" fill="rgb(219,102,11)" fg:x="94" fg:w="36"/><text x="0.6403%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[SDLApplication sendEvent:] (11 samples, 0.05%)</title><rect x="0.4941%" y="597" width="0.0457%" height="15" fill="rgb(243,110,44)" fg:x="119" fg:w="11"/><text x="0.7441%" y="607.50"></text></g><g><title>community_sim`community_sim::graphics::input_systems::process_input_intents (4 samples, 0.02%)</title><rect x="0.5398%" y="693" width="0.0166%" height="15" fill="rgb(222,74,54)" fg:x="130" fg:w="4"/><text x="0.7898%" y="703.50"></text></g><g><title>community_sim`std::sys::backtrace::lock (4 samples, 0.02%)</title><rect x="0.5398%" y="677" width="0.0166%" height="15" fill="rgb(216,99,12)" fg:x="130" fg:w="4"/><text x="0.7898%" y="687.50"></text></g><g><title>community_sim`std::alloc::rust_oom (4 samples, 0.02%)</title><rect x="0.5398%" y="661" width="0.0166%" height="15" fill="rgb(226,22,26)" fg:x="130" fg:w="4"/><text x="0.7898%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__exit (4 samples, 0.02%)</title><rect x="0.5398%" y="645" width="0.0166%" height="15" fill="rgb(217,163,10)" fg:x="130" fg:w="4"/><text x="0.7898%" y="655.50"></text></g><g><title>community_sim`community_sim::graphics::render::agent_system::agent_render (7 samples, 0.03%)</title><rect x="0.5564%" y="693" width="0.0291%" height="15" fill="rgb(213,25,53)" fg:x="134" fg:w="7"/><text x="0.8064%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (3 samples, 0.01%)</title><rect x="0.5730%" y="677" width="0.0125%" height="15" fill="rgb(252,105,26)" fg:x="138" fg:w="3"/><text x="0.8230%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRect_REAL (6 samples, 0.02%)</title><rect x="0.5855%" y="677" width="0.0249%" height="15" fill="rgb(220,39,43)" fg:x="141" fg:w="6"/><text x="0.8355%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawRectF_REAL (6 samples, 0.02%)</title><rect x="0.5855%" y="661" width="0.0249%" height="15" fill="rgb(229,68,48)" fg:x="141" fg:w="6"/><text x="0.8355%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawLinesF_REAL (6 samples, 0.02%)</title><rect x="0.5855%" y="645" width="0.0249%" height="15" fill="rgb(252,8,32)" fg:x="141" fg:w="6"/><text x="0.8355%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`RenderDrawLinesWithRectsF (6 samples, 0.02%)</title><rect x="0.5855%" y="629" width="0.0249%" height="15" fill="rgb(223,20,43)" fg:x="141" fg:w="6"/><text x="0.8355%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (4 samples, 0.02%)</title><rect x="0.5938%" y="613" width="0.0166%" height="15" fill="rgb(229,81,49)" fg:x="143" fg:w="4"/><text x="0.8438%" y="623.50"></text></g><g><title>community_sim`community_sim::graphics::render::food_system::food_render (9 samples, 0.04%)</title><rect x="0.5855%" y="693" width="0.0374%" height="15" fill="rgb(236,28,36)" fg:x="141" fg:w="9"/><text x="0.8355%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (3 samples, 0.01%)</title><rect x="0.6104%" y="677" width="0.0125%" height="15" fill="rgb(249,185,26)" fg:x="147" fg:w="3"/><text x="0.8604%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTextureFromSurface_REAL (3 samples, 0.01%)</title><rect x="0.6312%" y="677" width="0.0125%" height="15" fill="rgb(249,174,33)" fg:x="152" fg:w="3"/><text x="0.8812%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_CreateTexture_REAL (3 samples, 0.01%)</title><rect x="0.6312%" y="661" width="0.0125%" height="15" fill="rgb(233,201,37)" fg:x="152" fg:w="3"/><text x="0.8812%" y="671.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_event_log_window (10 samples, 0.04%)</title><rect x="0.6228%" y="693" width="0.0415%" height="15" fill="rgb(221,78,26)" fg:x="150" fg:w="10"/><text x="0.8728%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (5 samples, 0.02%)</title><rect x="0.6436%" y="677" width="0.0208%" height="15" fill="rgb(250,127,30)" fg:x="155" fg:w="5"/><text x="0.8936%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (5 samples, 0.02%)</title><rect x="0.6436%" y="661" width="0.0208%" height="15" fill="rgb(230,49,44)" fg:x="155" fg:w="5"/><text x="0.8936%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (5 samples, 0.02%)</title><rect x="0.6436%" y="645" width="0.0208%" height="15" fill="rgb(229,67,23)" fg:x="155" fg:w="5"/><text x="0.8936%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (5 samples, 0.02%)</title><rect x="0.6436%" y="629" width="0.0208%" height="15" fill="rgb(249,83,47)" fg:x="155" fg:w="5"/><text x="0.8936%" y="639.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (3 samples, 0.01%)</title><rect x="0.6519%" y="613" width="0.0125%" height="15" fill="rgb(215,43,3)" fg:x="157" fg:w="3"/><text x="0.9019%" y="623.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (3 samples, 0.01%)</title><rect x="0.6519%" y="597" width="0.0125%" height="15" fill="rgb(238,154,13)" fg:x="157" fg:w="3"/><text x="0.9019%" y="607.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_FillRect4 (9 samples, 0.04%)</title><rect x="0.6727%" y="629" width="0.0374%" height="15" fill="rgb(219,56,2)" fg:x="162" fg:w="9"/><text x="0.9227%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_DestroyTexture_REAL (10 samples, 0.04%)</title><rect x="0.6727%" y="677" width="0.0415%" height="15" fill="rgb(233,0,4)" fg:x="162" fg:w="10"/><text x="0.9227%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (10 samples, 0.04%)</title><rect x="0.6727%" y="661" width="0.0415%" height="15" fill="rgb(235,30,7)" fg:x="162" fg:w="10"/><text x="0.9227%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SW_RunCommandQueue (10 samples, 0.04%)</title><rect x="0.6727%" y="645" width="0.0415%" height="15" fill="rgb(250,79,13)" fg:x="162" fg:w="10"/><text x="0.9227%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawLine_REAL (3 samples, 0.01%)</title><rect x="0.7183%" y="677" width="0.0125%" height="15" fill="rgb(211,146,34)" fg:x="173" fg:w="3"/><text x="0.9683%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderDrawLinesF_REAL (3 samples, 0.01%)</title><rect x="0.7183%" y="661" width="0.0125%" height="15" fill="rgb(228,22,38)" fg:x="173" fg:w="3"/><text x="0.9683%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`RenderDrawLinesWithRectsF (3 samples, 0.01%)</title><rect x="0.7183%" y="645" width="0.0125%" height="15" fill="rgb(235,168,5)" fg:x="173" fg:w="3"/><text x="0.9683%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`RenderDrawLineBresenham (3 samples, 0.01%)</title><rect x="0.7183%" y="629" width="0.0125%" height="15" fill="rgb(221,155,16)" fg:x="173" fg:w="3"/><text x="0.9683%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (5 samples, 0.02%)</title><rect x="0.7308%" y="629" width="0.0208%" height="15" fill="rgb(215,215,53)" fg:x="176" fg:w="5"/><text x="0.9808%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (4 samples, 0.02%)</title><rect x="0.7350%" y="613" width="0.0166%" height="15" fill="rgb(223,4,10)" fg:x="177" fg:w="4"/><text x="0.9850%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (4 samples, 0.02%)</title><rect x="0.7350%" y="597" width="0.0166%" height="15" fill="rgb(234,103,6)" fg:x="177" fg:w="4"/><text x="0.9850%" y="607.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (4 samples, 0.02%)</title><rect x="0.7350%" y="581" width="0.0166%" height="15" fill="rgb(227,97,0)" fg:x="177" fg:w="4"/><text x="0.9850%" y="591.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (4 samples, 0.02%)</title><rect x="0.7350%" y="565" width="0.0166%" height="15" fill="rgb(234,150,53)" fg:x="177" fg:w="4"/><text x="0.9850%" y="575.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (6 samples, 0.02%)</title><rect x="0.7599%" y="581" width="0.0249%" height="15" fill="rgb(228,201,54)" fg:x="183" fg:w="6"/><text x="1.0099%" y="591.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (6 samples, 0.02%)</title><rect x="0.7599%" y="565" width="0.0249%" height="15" fill="rgb(222,22,37)" fg:x="183" fg:w="6"/><text x="1.0099%" y="575.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (6 samples, 0.02%)</title><rect x="0.7599%" y="549" width="0.0249%" height="15" fill="rgb(237,53,32)" fg:x="183" fg:w="6"/><text x="1.0099%" y="559.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (3 samples, 0.01%)</title><rect x="0.7848%" y="533" width="0.0125%" height="15" fill="rgb(233,25,53)" fg:x="189" fg:w="3"/><text x="1.0348%" y="543.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.01%)</title><rect x="0.7848%" y="517" width="0.0125%" height="15" fill="rgb(210,40,34)" fg:x="189" fg:w="3"/><text x="1.0348%" y="527.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.01%)</title><rect x="0.7848%" y="501" width="0.0125%" height="15" fill="rgb(241,220,44)" fg:x="189" fg:w="3"/><text x="1.0348%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="0.7848%" y="485" width="0.0125%" height="15" fill="rgb(235,28,35)" fg:x="189" fg:w="3"/><text x="1.0348%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture initWithDevice:descriptor:sysMemSize:sysMemRowBytes:vidMemSize:vidMemRowBytes:args:argsSize:] (4 samples, 0.02%)</title><rect x="0.7848%" y="565" width="0.0166%" height="15" fill="rgb(210,56,17)" fg:x="189" fg:w="4"/><text x="1.0348%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4 samples, 0.02%)</title><rect x="0.7848%" y="549" width="0.0166%" height="15" fill="rgb(224,130,29)" fg:x="189" fg:w="4"/><text x="1.0348%" y="559.50"></text></g><g><title>community_sim`community_sim::graphics::render::overlays::draw_stats_window (36 samples, 0.15%)</title><rect x="0.6644%" y="693" width="0.1495%" height="15" fill="rgb(235,212,8)" fg:x="160" fg:w="36"/><text x="0.9144%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (20 samples, 0.08%)</title><rect x="0.7308%" y="677" width="0.0830%" height="15" fill="rgb(223,33,50)" fg:x="176" fg:w="20"/><text x="0.9808%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (20 samples, 0.08%)</title><rect x="0.7308%" y="661" width="0.0830%" height="15" fill="rgb(219,149,13)" fg:x="176" fg:w="20"/><text x="0.9808%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (20 samples, 0.08%)</title><rect x="0.7308%" y="645" width="0.0830%" height="15" fill="rgb(250,156,29)" fg:x="176" fg:w="20"/><text x="0.9808%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (15 samples, 0.06%)</title><rect x="0.7516%" y="629" width="0.0623%" height="15" fill="rgb(216,193,19)" fg:x="181" fg:w="15"/><text x="1.0016%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (15 samples, 0.06%)</title><rect x="0.7516%" y="613" width="0.0623%" height="15" fill="rgb(216,135,14)" fg:x="181" fg:w="15"/><text x="1.0016%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (15 samples, 0.06%)</title><rect x="0.7516%" y="597" width="0.0623%" height="15" fill="rgb(241,47,5)" fg:x="181" fg:w="15"/><text x="1.0016%" y="607.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (7 samples, 0.03%)</title><rect x="0.7848%" y="581" width="0.0291%" height="15" fill="rgb(233,42,35)" fg:x="189" fg:w="7"/><text x="1.0348%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="0.8014%" y="565" width="0.0125%" height="15" fill="rgb(231,13,6)" fg:x="193" fg:w="3"/><text x="1.0514%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (16 samples, 0.07%)</title><rect x="1.1793%" y="661" width="0.0664%" height="15" fill="rgb(207,181,40)" fg:x="284" fg:w="16"/><text x="1.4293%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (38 samples, 0.16%)</title><rect x="1.5986%" y="645" width="0.1578%" height="15" fill="rgb(254,173,49)" fg:x="385" fg:w="38"/><text x="1.8486%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (24 samples, 0.10%)</title><rect x="1.7564%" y="645" width="0.0997%" height="15" fill="rgb(221,1,38)" fg:x="423" fg:w="24"/><text x="2.0064%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (13 samples, 0.05%)</title><rect x="2.2215%" y="629" width="0.0540%" height="15" fill="rgb(206,124,46)" fg:x="535" fg:w="13"/><text x="2.4715%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_QueueGeometry (246 samples, 1.02%)</title><rect x="2.2755%" y="629" width="1.0215%" height="15" fill="rgb(249,21,11)" fg:x="548" fg:w="246"/><text x="2.5255%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (36 samples, 0.15%)</title><rect x="3.1474%" y="613" width="0.1495%" height="15" fill="rgb(222,201,40)" fg:x="758" fg:w="36"/><text x="3.3974%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`PrepQueueCmdDraw (70 samples, 0.29%)</title><rect x="3.2969%" y="629" width="0.2907%" height="15" fill="rgb(235,61,29)" fg:x="794" fg:w="70"/><text x="3.5469%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`AllocateRenderCommand (23 samples, 0.10%)</title><rect x="3.4921%" y="613" width="0.0955%" height="15" fill="rgb(219,207,3)" fg:x="841" fg:w="23"/><text x="3.7421%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_calloc_REAL (3 samples, 0.01%)</title><rect x="3.5751%" y="597" width="0.0125%" height="15" fill="rgb(222,56,46)" fg:x="861" fg:w="3"/><text x="3.8251%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.01%)</title><rect x="3.5751%" y="581" width="0.0125%" height="15" fill="rgb(239,76,54)" fg:x="861" fg:w="3"/><text x="3.8251%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.01%)</title><rect x="3.5751%" y="565" width="0.0125%" height="15" fill="rgb(231,124,27)" fg:x="861" fg:w="3"/><text x="3.8251%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`QueueCmdFillRects (422 samples, 1.75%)</title><rect x="1.8561%" y="645" width="1.7523%" height="15" fill="rgb(249,195,6)" fg:x="447" fg:w="422"/><text x="2.1061%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_AllocateRenderVertices (5 samples, 0.02%)</title><rect x="3.5876%" y="629" width="0.0208%" height="15" fill="rgb(237,174,47)" fg:x="864" fg:w="5"/><text x="3.8376%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (660 samples, 2.74%)</title><rect x="1.2457%" y="661" width="2.7405%" height="15" fill="rgb(206,201,31)" fg:x="300" fg:w="660"/><text x="1.4957%" y="671.50">li..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (91 samples, 0.38%)</title><rect x="3.6084%" y="645" width="0.3779%" height="15" fill="rgb(231,57,52)" fg:x="869" fg:w="91"/><text x="3.8584%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (773 samples, 3.21%)</title><rect x="0.9799%" y="677" width="3.2097%" height="15" fill="rgb(248,177,22)" fg:x="236" fg:w="773"/><text x="1.2299%" y="687.50">lib..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (49 samples, 0.20%)</title><rect x="3.9862%" y="661" width="0.2035%" height="15" fill="rgb(215,211,37)" fg:x="960" fg:w="49"/><text x="4.2362%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRectsF_REAL (6 samples, 0.02%)</title><rect x="4.1897%" y="677" width="0.0249%" height="15" fill="rgb(241,128,51)" fg:x="1009" fg:w="6"/><text x="4.4397%" y="687.50"></text></g><g><title>community_sim`community_sim::graphics::render::terrain::draw_terrain (841 samples, 3.49%)</title><rect x="0.8139%" y="693" width="3.4921%" height="15" fill="rgb(227,165,31)" fg:x="196" fg:w="841"/><text x="1.0639%" y="703.50">com..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor_REAL (22 samples, 0.09%)</title><rect x="4.2146%" y="677" width="0.0914%" height="15" fill="rgb(228,167,24)" fg:x="1015" fg:w="22"/><text x="4.4646%" y="687.50"></text></g><g><title>community_sim`legion::internals::systems::schedule::Schedule::execute (3 samples, 0.01%)</title><rect x="4.3142%" y="693" width="0.0125%" height="15" fill="rgb(228,143,12)" fg:x="1039" fg:w="3"/><text x="4.5642%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect (7 samples, 0.03%)</title><rect x="4.3350%" y="693" width="0.0291%" height="15" fill="rgb(249,149,8)" fg:x="1044" fg:w="7"/><text x="4.5850%" y="703.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderFillRect_REAL (9 samples, 0.04%)</title><rect x="4.3641%" y="693" width="0.0374%" height="15" fill="rgb(243,35,44)" fg:x="1051" fg:w="9"/><text x="4.6141%" y="703.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (49 samples, 0.20%)</title><rect x="4.4014%" y="661" width="0.2035%" height="15" fill="rgb(246,89,9)" fg:x="1060" fg:w="49"/><text x="4.6514%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (8 samples, 0.03%)</title><rect x="4.6049%" y="661" width="0.0332%" height="15" fill="rgb(233,213,13)" fg:x="1109" fg:w="8"/><text x="4.8549%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (9 samples, 0.04%)</title><rect x="4.6381%" y="661" width="0.0374%" height="15" fill="rgb(233,141,41)" fg:x="1117" fg:w="9"/><text x="4.8881%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (11 samples, 0.05%)</title><rect x="4.6755%" y="661" width="0.0457%" height="15" fill="rgb(239,167,4)" fg:x="1126" fg:w="11"/><text x="4.9255%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (7 samples, 0.03%)</title><rect x="6.9344%" y="565" width="0.0291%" height="15" fill="rgb(209,217,16)" fg:x="1670" fg:w="7"/><text x="7.1844%" y="575.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (7 samples, 0.03%)</title><rect x="6.9344%" y="549" width="0.0291%" height="15" fill="rgb(219,88,35)" fg:x="1670" fg:w="7"/><text x="7.1844%" y="559.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.02%)</title><rect x="6.9427%" y="533" width="0.0208%" height="15" fill="rgb(220,193,23)" fg:x="1672" fg:w="5"/><text x="7.1927%" y="543.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.02%)</title><rect x="6.9427%" y="517" width="0.0208%" height="15" fill="rgb(230,90,52)" fg:x="1672" fg:w="5"/><text x="7.1927%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="6.9427%" y="501" width="0.0208%" height="15" fill="rgb(252,106,19)" fg:x="1672" fg:w="5"/><text x="7.1927%" y="511.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (8 samples, 0.03%)</title><rect x="6.9344%" y="581" width="0.0332%" height="15" fill="rgb(206,74,20)" fg:x="1670" fg:w="8"/><text x="7.1844%" y="591.50"></text></g><g><title>AGXMetalG13X`AGX::DataBufferAllocator&lt;34ul&gt;::grow (11 samples, 0.05%)</title><rect x="6.9302%" y="613" width="0.0457%" height="15" fill="rgb(230,138,44)" fg:x="1669" fg:w="11"/><text x="7.1802%" y="623.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (10 samples, 0.04%)</title><rect x="6.9344%" y="597" width="0.0415%" height="15" fill="rgb(235,182,43)" fg:x="1670" fg:w="10"/><text x="7.1844%" y="607.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (404 samples, 1.68%)</title><rect x="6.9759%" y="613" width="1.6775%" height="15" fill="rgb(242,16,51)" fg:x="1680" fg:w="404"/><text x="7.2259%" y="623.50"></text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (130 samples, 0.54%)</title><rect x="8.1136%" y="597" width="0.5398%" height="15" fill="rgb(248,9,4)" fg:x="1954" fg:w="130"/><text x="8.3636%" y="607.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (806 samples, 3.35%)</title><rect x="5.3648%" y="629" width="3.3468%" height="15" fill="rgb(210,31,22)" fg:x="1292" fg:w="806"/><text x="5.6148%" y="639.50">AGX..</text></g><g><title>AGXMetalG13X`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (14 samples, 0.06%)</title><rect x="8.6534%" y="613" width="0.0581%" height="15" fill="rgb(239,54,39)" fg:x="2084" fg:w="14"/><text x="8.9034%" y="623.50"></text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (14 samples, 0.06%)</title><rect x="8.7115%" y="629" width="0.0581%" height="15" fill="rgb(230,99,41)" fg:x="2098" fg:w="14"/><text x="8.9615%" y="639.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (1,148 samples, 4.77%)</title><rect x="4.9703%" y="645" width="4.7668%" height="15" fill="rgb(253,106,12)" fg:x="1197" fg:w="1148"/><text x="5.2203%" y="655.50">AGXMet..</text></g><g><title>AGXMetalG13X`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::RenderDirtyBits (233 samples, 0.97%)</title><rect x="8.7697%" y="629" width="0.9675%" height="15" fill="rgb(213,46,41)" fg:x="2112" fg:w="233"/><text x="9.0197%" y="639.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyRenderContext setVertexBufferOffset:atIndex:] (95 samples, 0.39%)</title><rect x="9.7372%" y="645" width="0.3945%" height="15" fill="rgb(215,133,35)" fg:x="2345" fg:w="95"/><text x="9.9872%" y="655.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (4 samples, 0.02%)</title><rect x="10.1316%" y="645" width="0.0166%" height="15" fill="rgb(213,28,5)" fg:x="2440" fg:w="4"/><text x="10.3816%" y="655.50"></text></g><g><title>AGXMetalG13X`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeISPPrimitiveType (87 samples, 0.36%)</title><rect x="10.1482%" y="645" width="0.3613%" height="15" fill="rgb(215,77,49)" fg:x="2444" fg:w="87"/><text x="10.3982%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData activepipelines] (36 samples, 0.15%)</title><rect x="10.5095%" y="645" width="0.1495%" height="15" fill="rgb(248,100,22)" fg:x="2531" fg:w="36"/><text x="10.7595%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (15 samples, 0.06%)</title><rect x="10.6590%" y="645" width="0.0623%" height="15" fill="rgb(208,67,9)" fg:x="2567" fg:w="15"/><text x="10.9090%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (62 samples, 0.26%)</title><rect x="10.7213%" y="645" width="0.2574%" height="15" fill="rgb(219,133,21)" fg:x="2582" fg:w="62"/><text x="10.9713%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (49 samples, 0.20%)</title><rect x="10.9787%" y="645" width="0.2035%" height="15" fill="rgb(246,46,29)" fg:x="2644" fg:w="49"/><text x="11.2287%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (15 samples, 0.06%)</title><rect x="11.1822%" y="645" width="0.0623%" height="15" fill="rgb(246,185,52)" fg:x="2693" fg:w="15"/><text x="11.4322%" y="655.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (3 samples, 0.01%)</title><rect x="11.3441%" y="629" width="0.0125%" height="15" fill="rgb(252,136,11)" fg:x="2732" fg:w="3"/><text x="11.5941%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (30 samples, 0.12%)</title><rect x="11.2444%" y="645" width="0.1246%" height="15" fill="rgb(219,138,53)" fg:x="2708" fg:w="30"/><text x="11.4944%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`-[METAL_RenderData mtlcmdencoder] (18 samples, 0.07%)</title><rect x="11.8714%" y="629" width="0.0747%" height="15" fill="rgb(211,51,23)" fg:x="2859" fg:w="18"/><text x="12.1214%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_release (30 samples, 0.12%)</title><rect x="11.9462%" y="629" width="0.1246%" height="15" fill="rgb(247,221,28)" fg:x="2877" fg:w="30"/><text x="12.1962%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retain (11 samples, 0.05%)</title><rect x="12.0708%" y="629" width="0.0457%" height="15" fill="rgb(251,222,45)" fg:x="2907" fg:w="11"/><text x="12.3208%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`DYLD-STUB$$objc_retainAutoreleasedReturnValue (13 samples, 0.05%)</title><rect x="12.1164%" y="629" width="0.0540%" height="15" fill="rgb(217,162,53)" fg:x="2918" fg:w="13"/><text x="12.3664%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (86 samples, 0.36%)</title><rect x="12.1704%" y="629" width="0.3571%" height="15" fill="rgb(229,93,14)" fg:x="2931" fg:w="86"/><text x="12.4204%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (62 samples, 0.26%)</title><rect x="12.2701%" y="613" width="0.2574%" height="15" fill="rgb(209,67,49)" fg:x="2955" fg:w="62"/><text x="12.5201%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (12 samples, 0.05%)</title><rect x="12.5275%" y="629" width="0.0498%" height="15" fill="rgb(213,87,29)" fg:x="3017" fg:w="12"/><text x="12.7775%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (17 samples, 0.07%)</title><rect x="12.5773%" y="629" width="0.0706%" height="15" fill="rgb(205,151,52)" fg:x="3029" fg:w="17"/><text x="12.8273%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_release (135 samples, 0.56%)</title><rect x="12.6479%" y="629" width="0.5606%" height="15" fill="rgb(253,215,39)" fg:x="3046" fg:w="135"/><text x="12.8979%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_retain (91 samples, 0.38%)</title><rect x="13.2085%" y="629" width="0.3779%" height="15" fill="rgb(221,220,41)" fg:x="3181" fg:w="91"/><text x="13.4585%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (617 samples, 2.56%)</title><rect x="11.3690%" y="645" width="2.5620%" height="15" fill="rgb(218,133,21)" fg:x="2738" fg:w="617"/><text x="11.6190%" y="655.50">li..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (83 samples, 0.34%)</title><rect x="13.5863%" y="629" width="0.3446%" height="15" fill="rgb(221,193,43)" fg:x="3272" fg:w="83"/><text x="13.8363%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$activepipelines (22 samples, 0.09%)</title><rect x="13.9310%" y="645" width="0.0914%" height="15" fill="rgb(240,128,52)" fg:x="3355" fg:w="22"/><text x="14.1810%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (21 samples, 0.09%)</title><rect x="14.0223%" y="645" width="0.0872%" height="15" fill="rgb(253,114,12)" fg:x="3377" fg:w="21"/><text x="14.2723%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$setVertexBufferOffset:atIndex: (11 samples, 0.05%)</title><rect x="14.1095%" y="645" width="0.0457%" height="15" fill="rgb(215,223,47)" fg:x="3398" fg:w="11"/><text x="14.3595%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (137 samples, 0.57%)</title><rect x="14.1552%" y="645" width="0.5689%" height="15" fill="rgb(248,225,23)" fg:x="3409" fg:w="137"/><text x="14.4052%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_release (200 samples, 0.83%)</title><rect x="14.7241%" y="645" width="0.8305%" height="15" fill="rgb(250,108,0)" fg:x="3546" fg:w="200"/><text x="14.9741%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_retain (189 samples, 0.78%)</title><rect x="15.5545%" y="645" width="0.7848%" height="15" fill="rgb(228,208,7)" fg:x="3746" fg:w="189"/><text x="15.8045%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (2,873 samples, 11.93%)</title><rect x="4.7212%" y="661" width="11.9296%" height="15" fill="rgb(244,45,10)" fg:x="1137" fg:w="2873"/><text x="4.9712%" y="671.50">libSDL2-2.0.0.dyli..</text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (75 samples, 0.31%)</title><rect x="16.3393%" y="645" width="0.3114%" height="15" fill="rgb(207,125,25)" fg:x="3935" fg:w="75"/><text x="16.5893%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (17 samples, 0.07%)</title><rect x="16.6507%" y="661" width="0.0706%" height="15" fill="rgb(210,195,18)" fg:x="4010" fg:w="17"/><text x="16.9007%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$drawPrimitives:vertexStart:vertexCount: (7 samples, 0.03%)</title><rect x="16.7213%" y="661" width="0.0291%" height="15" fill="rgb(249,80,12)" fg:x="4027" fg:w="7"/><text x="16.9713%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`objc_msgSend$mtlcmdencoder (7 samples, 0.03%)</title><rect x="16.7504%" y="661" width="0.0291%" height="15" fill="rgb(221,65,9)" fg:x="4034" fg:w="7"/><text x="17.0004%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (55 samples, 0.23%)</title><rect x="16.7795%" y="661" width="0.2284%" height="15" fill="rgb(235,49,36)" fg:x="4041" fg:w="55"/><text x="17.0295%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_release (31 samples, 0.13%)</title><rect x="17.0078%" y="661" width="0.1287%" height="15" fill="rgb(225,32,20)" fg:x="4096" fg:w="31"/><text x="17.2578%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_retain (17 samples, 0.07%)</title><rect x="17.1366%" y="661" width="0.0706%" height="15" fill="rgb(215,141,46)" fg:x="4127" fg:w="17"/><text x="17.3866%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (8 samples, 0.03%)</title><rect x="17.2072%" y="661" width="0.0332%" height="15" fill="rgb(250,160,47)" fg:x="4144" fg:w="8"/><text x="17.4572%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (3,290 samples, 13.66%)</title><rect x="4.4014%" y="677" width="13.6611%" height="15" fill="rgb(216,222,40)" fg:x="1060" fg:w="3290"/><text x="4.6514%" y="687.50">libSDL2-2.0.0.dylib`F..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (198 samples, 0.82%)</title><rect x="17.2404%" y="661" width="0.8222%" height="15" fill="rgb(234,217,39)" fg:x="4152" fg:w="198"/><text x="17.4904%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (5 samples, 0.02%)</title><rect x="18.0625%" y="645" width="0.0208%" height="15" fill="rgb(207,178,40)" fg:x="4350" fg:w="5"/><text x="18.3125%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`FlushRenderCommands (5 samples, 0.02%)</title><rect x="18.0625%" y="629" width="0.0208%" height="15" fill="rgb(221,136,13)" fg:x="4350" fg:w="5"/><text x="18.3125%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_RunCommandQueue (5 samples, 0.02%)</title><rect x="18.0625%" y="613" width="0.0208%" height="15" fill="rgb(249,199,10)" fg:x="4350" fg:w="5"/><text x="18.3125%" y="623.50"></text></g><g><title>libSDL2-2.0.0.dylib`SetDrawState (4 samples, 0.02%)</title><rect x="18.0667%" y="597" width="0.0166%" height="15" fill="rgb(249,222,13)" fg:x="4351" fg:w="4"/><text x="18.3167%" y="607.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_ActivateRenderCommandEncoder (4 samples, 0.02%)</title><rect x="18.0667%" y="581" width="0.0166%" height="15" fill="rgb(244,185,38)" fg:x="4351" fg:w="4"/><text x="18.3167%" y="591.50"></text></g><g><title>AGXMetalG13X`&lt;deduplicated_symbol&gt; (4 samples, 0.02%)</title><rect x="18.0874%" y="565" width="0.0166%" height="15" fill="rgb(236,202,9)" fg:x="4356" fg:w="4"/><text x="18.3374%" y="575.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (10 samples, 0.04%)</title><rect x="18.0874%" y="597" width="0.0415%" height="15" fill="rgb(250,229,37)" fg:x="4356" fg:w="10"/><text x="18.3374%" y="607.50"></text></g><g><title>AGXMetalG13X`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::writeRegion (10 samples, 0.04%)</title><rect x="18.0874%" y="581" width="0.0415%" height="15" fill="rgb(206,174,23)" fg:x="4356" fg:w="10"/><text x="18.3374%" y="591.50"></text></g><g><title>AGXMetalG13X`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (6 samples, 0.02%)</title><rect x="18.1041%" y="565" width="0.0249%" height="15" fill="rgb(211,33,43)" fg:x="4360" fg:w="6"/><text x="18.3541%" y="575.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_RenderPresent_REAL (3,309 samples, 13.74%)</title><rect x="4.4014%" y="693" width="13.7400%" height="15" fill="rgb(245,58,50)" fg:x="1060" fg:w="3309"/><text x="4.6514%" y="703.50">libSDL2-2.0.0.dylib`S..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowSurface_REAL (19 samples, 0.08%)</title><rect x="18.0625%" y="677" width="0.0789%" height="15" fill="rgb(244,68,36)" fg:x="4350" fg:w="19"/><text x="18.3125%" y="687.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateWindowTexture (19 samples, 0.08%)</title><rect x="18.0625%" y="661" width="0.0789%" height="15" fill="rgb(232,229,15)" fg:x="4350" fg:w="19"/><text x="18.3125%" y="671.50"></text></g><g><title>libSDL2-2.0.0.dylib`SDL_UpdateTexture_REAL (14 samples, 0.06%)</title><rect x="18.0833%" y="645" width="0.0581%" height="15" fill="rgb(254,30,23)" fg:x="4355" fg:w="14"/><text x="18.3333%" y="655.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTexture (14 samples, 0.06%)</title><rect x="18.0833%" y="629" width="0.0581%" height="15" fill="rgb(235,160,14)" fg:x="4355" fg:w="14"/><text x="18.3333%" y="639.50"></text></g><g><title>libSDL2-2.0.0.dylib`METAL_UpdateTextureInternal (14 samples, 0.06%)</title><rect x="18.0833%" y="613" width="0.0581%" height="15" fill="rgb(212,155,44)" fg:x="4355" fg:w="14"/><text x="18.3333%" y="623.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture initWithDevice:desc:isSuballocDisabled:] (3 samples, 0.01%)</title><rect x="18.1290%" y="597" width="0.0125%" height="15" fill="rgb(226,2,50)" fg:x="4366" fg:w="3"/><text x="18.3790%" y="607.50"></text></g><g><title>community_sim`community_sim::graphics::sim_loop::main_sim_loop (4,310 samples, 17.90%)</title><rect x="0.3031%" y="709" width="17.8964%" height="15" fill="rgb(234,177,6)" fg:x="73" fg:w="4310"/><text x="0.5531%" y="719.50">community_sim`community_sim:..</text></g><g><title>libSDL2-2.0.0.dylib`SDL_SetRenderDrawColor (14 samples, 0.06%)</title><rect x="18.1414%" y="693" width="0.0581%" height="15" fill="rgb(217,24,9)" fg:x="4369" fg:w="14"/><text x="18.3914%" y="703.50"></text></g><g><title>dyld`start (4,398 samples, 18.26%)</title><rect x="0.0000%" y="853" width="18.2618%" height="15" fill="rgb(220,13,46)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="863.50">dyld`start</text></g><g><title>community_sim`main (4,398 samples, 18.26%)</title><rect x="0.0000%" y="837" width="18.2618%" height="15" fill="rgb(239,221,27)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="847.50">community_sim`main</text></g><g><title>community_sim`std::rt::lang_start_internal (4,398 samples, 18.26%)</title><rect x="0.0000%" y="821" width="18.2618%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="831.50">community_sim`std::rt::lang_..</text></g><g><title>community_sim`std::rt::lang_start::_{{closure}} (4,398 samples, 18.26%)</title><rect x="0.0000%" y="805" width="18.2618%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="815.50">community_sim`std::rt::lang_..</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (4,398 samples, 18.26%)</title><rect x="0.0000%" y="789" width="18.2618%" height="15" fill="rgb(232,111,31)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="799.50">community_sim`std::sys::back..</text></g><g><title>community_sim`community_sim::main (4,398 samples, 18.26%)</title><rect x="0.0000%" y="773" width="18.2618%" height="15" fill="rgb(245,82,37)" fg:x="0" fg:w="4398"/><text x="0.2500%" y="783.50">community_sim`community_sim:..</text></g><g><title>community_sim`community_sim::simulation::run_profile_from_yaml (4,397 samples, 18.26%)</title><rect x="0.0042%" y="757" width="18.2577%" height="15" fill="rgb(227,149,46)" fg:x="1" fg:w="4397"/><text x="0.2542%" y="767.50">community_sim`community_sim:..</text></g><g><title>community_sim`community_sim::graphics::run_with_graphics_profile (4,397 samples, 18.26%)</title><rect x="0.0042%" y="741" width="18.2577%" height="15" fill="rgb(218,36,50)" fg:x="1" fg:w="4397"/><text x="0.2542%" y="751.50">community_sim`community_sim:..</text></g><g><title>community_sim`community_sim::graphics::sim_render::run_sim_render (4,396 samples, 18.25%)</title><rect x="0.0083%" y="725" width="18.2535%" height="15" fill="rgb(226,80,48)" fg:x="2" fg:w="4396"/><text x="0.2583%" y="735.50">community_sim`community_sim:..</text></g><g><title>community_sim`community_sim::map::Map::new (15 samples, 0.06%)</title><rect x="18.1996%" y="709" width="0.0623%" height="15" fill="rgb(238,224,15)" fg:x="4383" fg:w="15"/><text x="18.4496%" y="719.50"></text></g><g><title>community_sim`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (15 samples, 0.06%)</title><rect x="18.1996%" y="693" width="0.0623%" height="15" fill="rgb(241,136,10)" fg:x="4383" fg:w="15"/><text x="18.4496%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.01%)</title><rect x="18.2618%" y="853" width="0.0125%" height="15" fill="rgb(208,32,45)" fg:x="4398" fg:w="3"/><text x="18.5118%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (41 samples, 0.17%)</title><rect x="18.2909%" y="837" width="0.1702%" height="15" fill="rgb(207,135,9)" fg:x="4405" fg:w="41"/><text x="18.5409%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (3 samples, 0.01%)</title><rect x="18.4653%" y="757" width="0.0125%" height="15" fill="rgb(206,86,44)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.01%)</title><rect x="18.4653%" y="741" width="0.0125%" height="15" fill="rgb(245,177,15)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="18.4653%" y="725" width="0.0125%" height="15" fill="rgb(206,64,50)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke3 (3 samples, 0.01%)</title><rect x="18.4653%" y="709" width="0.0125%" height="15" fill="rgb(234,36,40)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (3 samples, 0.01%)</title><rect x="18.4653%" y="693" width="0.0125%" height="15" fill="rgb(213,64,8)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="703.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (3 samples, 0.01%)</title><rect x="18.4653%" y="677" width="0.0125%" height="15" fill="rgb(210,75,36)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="687.50"></text></g><g><title>CoreUI`BOMFileClose (3 samples, 0.01%)</title><rect x="18.4653%" y="661" width="0.0125%" height="15" fill="rgb(229,88,21)" fg:x="4447" fg:w="3"/><text x="18.7153%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (4 samples, 0.02%)</title><rect x="18.4653%" y="821" width="0.0166%" height="15" fill="rgb(252,204,47)" fg:x="4447" fg:w="4"/><text x="18.7153%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (4 samples, 0.02%)</title><rect x="18.4653%" y="805" width="0.0166%" height="15" fill="rgb(208,77,27)" fg:x="4447" fg:w="4"/><text x="18.7153%" y="815.50"></text></g><g><title>libdispatch.dylib`&lt;deduplicated_symbol&gt; (4 samples, 0.02%)</title><rect x="18.4653%" y="789" width="0.0166%" height="15" fill="rgb(221,76,26)" fg:x="4447" fg:w="4"/><text x="18.7153%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="18.4653%" y="773" width="0.0166%" height="15" fill="rgb(225,139,18)" fg:x="4447" fg:w="4"/><text x="18.7153%" y="783.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (5 samples, 0.02%)</title><rect x="18.4944%" y="725" width="0.0208%" height="15" fill="rgb(230,137,11)" fg:x="4454" fg:w="5"/><text x="18.7444%" y="735.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (6 samples, 0.02%)</title><rect x="18.4944%" y="741" width="0.0249%" height="15" fill="rgb(212,28,1)" fg:x="4454" fg:w="6"/><text x="18.7444%" y="751.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (10 samples, 0.04%)</title><rect x="18.5317%" y="725" width="0.0415%" height="15" fill="rgb(248,164,17)" fg:x="4463" fg:w="10"/><text x="18.7817%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (15 samples, 0.06%)</title><rect x="18.5193%" y="741" width="0.0623%" height="15" fill="rgb(222,171,42)" fg:x="4460" fg:w="15"/><text x="18.7693%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (24 samples, 0.10%)</title><rect x="18.4944%" y="757" width="0.0997%" height="15" fill="rgb(243,84,45)" fg:x="4454" fg:w="24"/><text x="18.7444%" y="767.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (3 samples, 0.01%)</title><rect x="18.5816%" y="741" width="0.0125%" height="15" fill="rgb(252,49,23)" fg:x="4475" fg:w="3"/><text x="18.8316%" y="751.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (6 samples, 0.02%)</title><rect x="18.5982%" y="613" width="0.0249%" height="15" fill="rgb(215,19,7)" fg:x="4479" fg:w="6"/><text x="18.8482%" y="623.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (6 samples, 0.02%)</title><rect x="18.5982%" y="597" width="0.0249%" height="15" fill="rgb(238,81,41)" fg:x="4479" fg:w="6"/><text x="18.8482%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (6 samples, 0.02%)</title><rect x="18.5982%" y="581" width="0.0249%" height="15" fill="rgb(210,199,37)" fg:x="4479" fg:w="6"/><text x="18.8482%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (6 samples, 0.02%)</title><rect x="18.5982%" y="565" width="0.0249%" height="15" fill="rgb(244,192,49)" fg:x="4479" fg:w="6"/><text x="18.8482%" y="575.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (3 samples, 0.01%)</title><rect x="18.6231%" y="565" width="0.0125%" height="15" fill="rgb(226,211,11)" fg:x="4485" fg:w="3"/><text x="18.8731%" y="575.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (5 samples, 0.02%)</title><rect x="18.6231%" y="597" width="0.0208%" height="15" fill="rgb(236,162,54)" fg:x="4485" fg:w="5"/><text x="18.8731%" y="607.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (5 samples, 0.02%)</title><rect x="18.6231%" y="581" width="0.0208%" height="15" fill="rgb(220,229,9)" fg:x="4485" fg:w="5"/><text x="18.8731%" y="591.50"></text></g><g><title>Metal`MTLDispatchListApply (6 samples, 0.02%)</title><rect x="18.6231%" y="613" width="0.0249%" height="15" fill="rgb(250,87,22)" fg:x="4485" fg:w="6"/><text x="18.8731%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (13 samples, 0.05%)</title><rect x="18.5982%" y="629" width="0.0540%" height="15" fill="rgb(239,43,17)" fg:x="4479" fg:w="13"/><text x="18.8482%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.04%)</title><rect x="18.6522%" y="549" width="0.0374%" height="15" fill="rgb(231,177,25)" fg:x="4492" fg:w="9"/><text x="18.9022%" y="559.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseExtraResources (10 samples, 0.04%)</title><rect x="18.6522%" y="565" width="0.0415%" height="15" fill="rgb(219,179,1)" fg:x="4492" fg:w="10"/><text x="18.9022%" y="575.50"></text></g><g><title>AGXMetalG13X`-[AGXTexture dealloc] (3 samples, 0.01%)</title><rect x="18.7020%" y="517" width="0.0125%" height="15" fill="rgb(238,219,53)" fg:x="4504" fg:w="3"/><text x="18.9520%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (3 samples, 0.01%)</title><rect x="18.7020%" y="501" width="0.0125%" height="15" fill="rgb(232,167,36)" fg:x="4504" fg:w="3"/><text x="18.9520%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (3 samples, 0.01%)</title><rect x="18.7020%" y="485" width="0.0125%" height="15" fill="rgb(244,19,51)" fg:x="4504" fg:w="3"/><text x="18.9520%" y="495.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="18.7020%" y="469" width="0.0125%" height="15" fill="rgb(224,6,22)" fg:x="4504" fg:w="3"/><text x="18.9520%" y="479.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="18.7020%" y="453" width="0.0125%" height="15" fill="rgb(224,145,5)" fg:x="4504" fg:w="3"/><text x="18.9520%" y="463.50"></text></g><g><title>AGXMetalG13X`-[AGXG13XFamilyTexture dealloc] (4 samples, 0.02%)</title><rect x="18.7020%" y="533" width="0.0166%" height="15" fill="rgb(234,130,49)" fg:x="4504" fg:w="4"/><text x="18.9520%" y="543.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (7 samples, 0.03%)</title><rect x="18.6937%" y="565" width="0.0291%" height="15" fill="rgb(254,6,2)" fg:x="4502" fg:w="7"/><text x="18.9437%" y="575.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (7 samples, 0.03%)</title><rect x="18.6937%" y="549" width="0.0291%" height="15" fill="rgb(208,96,46)" fg:x="4502" fg:w="7"/><text x="18.9437%" y="559.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (18 samples, 0.07%)</title><rect x="18.6522%" y="597" width="0.0747%" height="15" fill="rgb(239,3,39)" fg:x="4492" fg:w="18"/><text x="18.9022%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (18 samples, 0.07%)</title><rect x="18.6522%" y="581" width="0.0747%" height="15" fill="rgb(233,210,1)" fg:x="4492" fg:w="18"/><text x="18.9022%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (19 samples, 0.08%)</title><rect x="18.6522%" y="613" width="0.0789%" height="15" fill="rgb(244,137,37)" fg:x="4492" fg:w="19"/><text x="18.9022%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (20 samples, 0.08%)</title><rect x="18.6522%" y="629" width="0.0830%" height="15" fill="rgb(240,136,2)" fg:x="4492" fg:w="20"/><text x="18.9022%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (36 samples, 0.15%)</title><rect x="18.5940%" y="757" width="0.1495%" height="15" fill="rgb(239,18,37)" fg:x="4478" fg:w="36"/><text x="18.8440%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (36 samples, 0.15%)</title><rect x="18.5940%" y="741" width="0.1495%" height="15" fill="rgb(218,185,22)" fg:x="4478" fg:w="36"/><text x="18.8440%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (36 samples, 0.15%)</title><rect x="18.5940%" y="725" width="0.1495%" height="15" fill="rgb(225,218,4)" fg:x="4478" fg:w="36"/><text x="18.8440%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (35 samples, 0.15%)</title><rect x="18.5982%" y="709" width="0.1453%" height="15" fill="rgb(230,182,32)" fg:x="4479" fg:w="35"/><text x="18.8482%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (35 samples, 0.15%)</title><rect x="18.5982%" y="693" width="0.1453%" height="15" fill="rgb(242,56,43)" fg:x="4479" fg:w="35"/><text x="18.8482%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (35 samples, 0.15%)</title><rect x="18.5982%" y="677" width="0.1453%" height="15" fill="rgb(233,99,24)" fg:x="4479" fg:w="35"/><text x="18.8482%" y="687.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (35 samples, 0.15%)</title><rect x="18.5982%" y="661" width="0.1453%" height="15" fill="rgb(234,209,42)" fg:x="4479" fg:w="35"/><text x="18.8482%" y="671.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (35 samples, 0.15%)</title><rect x="18.5982%" y="645" width="0.1453%" height="15" fill="rgb(227,7,12)" fg:x="4479" fg:w="35"/><text x="18.8482%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (5 samples, 0.02%)</title><rect x="18.7435%" y="693" width="0.0208%" height="15" fill="rgb(245,203,43)" fg:x="4514" fg:w="5"/><text x="18.9935%" y="703.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool updateResourcePurgeability] (5 samples, 0.02%)</title><rect x="18.7435%" y="677" width="0.0208%" height="15" fill="rgb(238,205,33)" fg:x="4514" fg:w="5"/><text x="18.9935%" y="687.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (5 samples, 0.02%)</title><rect x="18.7435%" y="661" width="0.0208%" height="15" fill="rgb(231,56,7)" fg:x="4514" fg:w="5"/><text x="18.9935%" y="671.50"></text></g><g><title>IOKit`iokit_user_client_trap (5 samples, 0.02%)</title><rect x="18.7435%" y="645" width="0.0208%" height="15" fill="rgb(244,186,29)" fg:x="4514" fg:w="5"/><text x="18.9935%" y="655.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (140 samples, 0.58%)</title><rect x="18.7643%" y="693" width="0.5813%" height="15" fill="rgb(234,111,31)" fg:x="4519" fg:w="140"/><text x="19.0143%" y="703.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (139 samples, 0.58%)</title><rect x="18.7684%" y="677" width="0.5772%" height="15" fill="rgb(241,149,10)" fg:x="4520" fg:w="139"/><text x="19.0184%" y="687.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (139 samples, 0.58%)</title><rect x="18.7684%" y="661" width="0.5772%" height="15" fill="rgb(249,206,44)" fg:x="4520" fg:w="139"/><text x="19.0184%" y="671.50"></text></g><g><title>IOKit`iokit_user_client_trap (136 samples, 0.56%)</title><rect x="18.7809%" y="645" width="0.5647%" height="15" fill="rgb(251,153,30)" fg:x="4523" fg:w="136"/><text x="19.0309%" y="655.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (3 samples, 0.01%)</title><rect x="19.3456%" y="693" width="0.0125%" height="15" fill="rgb(239,152,38)" fg:x="4659" fg:w="3"/><text x="19.5956%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (209 samples, 0.87%)</title><rect x="18.4944%" y="789" width="0.8678%" height="15" fill="rgb(249,139,47)" fg:x="4454" fg:w="209"/><text x="18.7444%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (209 samples, 0.87%)</title><rect x="18.4944%" y="773" width="0.8678%" height="15" fill="rgb(244,64,35)" fg:x="4454" fg:w="209"/><text x="18.7444%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (149 samples, 0.62%)</title><rect x="18.7435%" y="757" width="0.6187%" height="15" fill="rgb(216,46,15)" fg:x="4514" fg:w="149"/><text x="18.9935%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (149 samples, 0.62%)</title><rect x="18.7435%" y="741" width="0.6187%" height="15" fill="rgb(250,74,19)" fg:x="4514" fg:w="149"/><text x="18.9935%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (149 samples, 0.62%)</title><rect x="18.7435%" y="725" width="0.6187%" height="15" fill="rgb(249,42,33)" fg:x="4514" fg:w="149"/><text x="18.9935%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (149 samples, 0.62%)</title><rect x="18.7435%" y="709" width="0.6187%" height="15" fill="rgb(242,149,17)" fg:x="4514" fg:w="149"/><text x="18.9935%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (262 samples, 1.09%)</title><rect x="18.2785%" y="853" width="1.0879%" height="15" fill="rgb(244,29,21)" fg:x="4402" fg:w="262"/><text x="18.5285%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (218 samples, 0.91%)</title><rect x="18.4612%" y="837" width="0.9052%" height="15" fill="rgb(220,130,37)" fg:x="4446" fg:w="218"/><text x="18.7112%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (213 samples, 0.88%)</title><rect x="18.4819%" y="821" width="0.8844%" height="15" fill="rgb(211,67,2)" fg:x="4451" fg:w="213"/><text x="18.7319%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (210 samples, 0.87%)</title><rect x="18.4944%" y="805" width="0.8720%" height="15" fill="rgb(235,68,52)" fg:x="4454" fg:w="210"/><text x="18.7444%" y="815.50"></text></g><g><title>community_sim`&lt;deduplicated_symbol&gt; (3 samples, 0.01%)</title><rect x="19.3747%" y="629" width="0.0125%" height="15" fill="rgb(246,142,3)" fg:x="4666" fg:w="3"/><text x="19.6247%" y="639.50"></text></g><g><title>community_sim`legion::internals::query::Query&lt;V,F&gt;::evaluate_query (3 samples, 0.01%)</title><rect x="19.3747%" y="613" width="0.0125%" height="15" fill="rgb(241,25,7)" fg:x="4666" fg:w="3"/><text x="19.6247%" y="623.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (690 samples, 2.87%)</title><rect x="29.6765%" y="501" width="2.8651%" height="15" fill="rgb(242,119,39)" fg:x="7147" fg:w="690"/><text x="29.9265%" y="511.50">co..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (883 samples, 3.67%)</title><rect x="32.5458%" y="501" width="3.6665%" height="15" fill="rgb(241,98,45)" fg:x="7838" fg:w="883"/><text x="32.7958%" y="511.50">comm..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (207 samples, 0.86%)</title><rect x="38.3922%" y="485" width="0.8595%" height="15" fill="rgb(254,28,30)" fg:x="9246" fg:w="207"/><text x="38.6422%" y="495.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (631 samples, 2.62%)</title><rect x="39.2518%" y="485" width="2.6201%" height="15" fill="rgb(241,142,54)" fg:x="9453" fg:w="631"/><text x="39.5018%" y="495.50">co..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (605 samples, 2.51%)</title><rect x="44.2262%" y="469" width="2.5121%" height="15" fill="rgb(222,85,15)" fg:x="10651" fg:w="605"/><text x="44.4762%" y="479.50">co..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (370 samples, 1.54%)</title><rect x="46.7384%" y="469" width="1.5364%" height="15" fill="rgb(210,85,47)" fg:x="11256" fg:w="370"/><text x="46.9884%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (19 samples, 0.08%)</title><rect x="48.2747%" y="469" width="0.0789%" height="15" fill="rgb(224,206,25)" fg:x="11626" fg:w="19"/><text x="48.5247%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (19 samples, 0.08%)</title><rect x="48.2747%" y="453" width="0.0789%" height="15" fill="rgb(243,201,19)" fg:x="11626" fg:w="19"/><text x="48.5247%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.08%)</title><rect x="48.2747%" y="437" width="0.0789%" height="15" fill="rgb(236,59,4)" fg:x="11626" fg:w="19"/><text x="48.5247%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.01%)</title><rect x="48.3536%" y="469" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="11645" fg:w="3"/><text x="48.6036%" y="479.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,565 samples, 6.50%)</title><rect x="41.8719%" y="485" width="6.4984%" height="15" fill="rgb(226,14,10)" fg:x="10084" fg:w="1565"/><text x="42.1219%" y="495.50">community..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,944 samples, 12.22%)</title><rect x="36.2123%" y="501" width="12.2244%" height="15" fill="rgb(244,27,41)" fg:x="8721" fg:w="2944"/><text x="36.4623%" y="511.50">community_sim`hash..</text></g><g><title>libsystem_platform.dylib`_platform_memset (16 samples, 0.07%)</title><rect x="48.3702%" y="485" width="0.0664%" height="15" fill="rgb(235,35,32)" fg:x="11649" fg:w="16"/><text x="48.6202%" y="495.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (7,029 samples, 29.19%)</title><rect x="19.4079%" y="517" width="29.1866%" height="15" fill="rgb(218,68,31)" fg:x="4674" fg:w="7029"/><text x="19.6579%" y="527.50">community_sim`community_sim::navigation::pathfi..</text></g><g><title>libsystem_malloc.dylib`free_medium (37 samples, 0.15%)</title><rect x="48.4408%" y="501" width="0.1536%" height="15" fill="rgb(207,120,37)" fg:x="11666" fg:w="37"/><text x="48.6908%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (37 samples, 0.15%)</title><rect x="48.4408%" y="485" width="0.1536%" height="15" fill="rgb(227,98,0)" fg:x="11666" fg:w="37"/><text x="48.6908%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (37 samples, 0.15%)</title><rect x="48.4408%" y="469" width="0.1536%" height="15" fill="rgb(207,7,3)" fg:x="11666" fg:w="37"/><text x="48.6908%" y="479.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (443 samples, 1.84%)</title><rect x="48.5986%" y="517" width="1.8395%" height="15" fill="rgb(206,98,19)" fg:x="11704" fg:w="443"/><text x="48.8486%" y="527.50">c..</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (7,505 samples, 31.16%)</title><rect x="19.3996%" y="549" width="31.1631%" height="15" fill="rgb(217,5,26)" fg:x="4672" fg:w="7505"/><text x="19.6496%" y="559.50">community_sim`&lt;legion::internals::systems::system:..</text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (7,505 samples, 31.16%)</title><rect x="19.3996%" y="533" width="31.1631%" height="15" fill="rgb(235,190,38)" fg:x="4672" fg:w="7505"/><text x="19.6496%" y="543.50">community_sim`&lt;F as legion::internals::systems::sy..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.12%)</title><rect x="50.4381%" y="517" width="0.1246%" height="15" fill="rgb(247,86,24)" fg:x="12147" fg:w="30"/><text x="50.6881%" y="527.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7,515 samples, 31.20%)</title><rect x="19.3913%" y="629" width="31.2046%" height="15" fill="rgb(205,101,16)" fg:x="4670" fg:w="7515"/><text x="19.6413%" y="639.50">community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::ru..</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (7,514 samples, 31.20%)</title><rect x="19.3954%" y="613" width="31.2004%" height="15" fill="rgb(246,168,33)" fg:x="4671" fg:w="7514"/><text x="19.6454%" y="623.50">community_sim`rayon::iter::plumbing::bridge_produc..</text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (7,514 samples, 31.20%)</title><rect x="19.3954%" y="597" width="31.2004%" height="15" fill="rgb(231,114,1)" fg:x="4671" fg:w="7514"/><text x="19.6454%" y="607.50">community_sim`&lt;rayon::iter::for_each::ForEachConsu..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (7,513 samples, 31.20%)</title><rect x="19.3996%" y="581" width="31.1963%" height="15" fill="rgb(207,184,53)" fg:x="4672" fg:w="7513"/><text x="19.6496%" y="591.50">community_sim`&lt;rayon::iter::plumbing::bridge::Call..</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7,513 samples, 31.20%)</title><rect x="19.3996%" y="565" width="31.1963%" height="15" fill="rgb(224,95,51)" fg:x="4672" fg:w="7513"/><text x="19.6496%" y="575.50">community_sim`core::ops::function::impls::_&lt;impl c..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (8 samples, 0.03%)</title><rect x="50.5626%" y="549" width="0.0332%" height="15" fill="rgb(212,188,45)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="559.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (8 samples, 0.03%)</title><rect x="50.5626%" y="533" width="0.0332%" height="15" fill="rgb(223,154,38)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="543.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.03%)</title><rect x="50.5626%" y="517" width="0.0332%" height="15" fill="rgb(251,22,52)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="527.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.03%)</title><rect x="50.5626%" y="501" width="0.0332%" height="15" fill="rgb(229,209,22)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="511.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (8 samples, 0.03%)</title><rect x="50.5626%" y="485" width="0.0332%" height="15" fill="rgb(234,138,34)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="495.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.03%)</title><rect x="50.5626%" y="469" width="0.0332%" height="15" fill="rgb(212,95,11)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="479.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.03%)</title><rect x="50.5626%" y="453" width="0.0332%" height="15" fill="rgb(240,179,47)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="463.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.03%)</title><rect x="50.5626%" y="437" width="0.0332%" height="15" fill="rgb(240,163,11)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="447.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (8 samples, 0.03%)</title><rect x="50.5626%" y="421" width="0.0332%" height="15" fill="rgb(236,37,12)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="431.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.03%)</title><rect x="50.5626%" y="405" width="0.0332%" height="15" fill="rgb(232,164,16)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="415.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (8 samples, 0.03%)</title><rect x="50.5626%" y="389" width="0.0332%" height="15" fill="rgb(244,205,15)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="399.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (8 samples, 0.03%)</title><rect x="50.5626%" y="373" width="0.0332%" height="15" fill="rgb(223,117,47)" fg:x="12177" fg:w="8"/><text x="50.8126%" y="383.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (4 samples, 0.02%)</title><rect x="50.5792%" y="357" width="0.0166%" height="15" fill="rgb(244,107,35)" fg:x="12181" fg:w="4"/><text x="50.8292%" y="367.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (4 samples, 0.02%)</title><rect x="50.5792%" y="341" width="0.0166%" height="15" fill="rgb(205,140,8)" fg:x="12181" fg:w="4"/><text x="50.8292%" y="351.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (4 samples, 0.02%)</title><rect x="50.5792%" y="325" width="0.0166%" height="15" fill="rgb(228,84,46)" fg:x="12181" fg:w="4"/><text x="50.8292%" y="335.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Stdout as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="50.5834%" y="309" width="0.0125%" height="15" fill="rgb(254,188,9)" fg:x="12182" fg:w="3"/><text x="50.8334%" y="319.50"></text></g><g><title>community_sim`std::io::Write::write_fmt (3 samples, 0.01%)</title><rect x="50.5834%" y="293" width="0.0125%" height="15" fill="rgb(206,112,54)" fg:x="12182" fg:w="3"/><text x="50.8334%" y="303.50"></text></g><g><title>community_sim`core::fmt::write (3 samples, 0.01%)</title><rect x="50.5834%" y="277" width="0.0125%" height="15" fill="rgb(216,84,49)" fg:x="12182" fg:w="3"/><text x="50.8334%" y="287.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.02%)</title><rect x="50.5959%" y="629" width="0.0166%" height="15" fill="rgb(214,194,35)" fg:x="12185" fg:w="4"/><text x="50.8459%" y="639.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (7,527 samples, 31.25%)</title><rect x="19.3747%" y="645" width="31.2544%" height="15" fill="rgb(249,28,3)" fg:x="4666" fg:w="7527"/><text x="19.6247%" y="655.50">community_sim`rayon_core::join::join_context::_{{c..</text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (4 samples, 0.02%)</title><rect x="50.6125%" y="629" width="0.0166%" height="15" fill="rgb(222,56,52)" fg:x="12189" fg:w="4"/><text x="50.8625%" y="639.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (4 samples, 0.02%)</title><rect x="50.6125%" y="613" width="0.0166%" height="15" fill="rgb(245,217,50)" fg:x="12189" fg:w="4"/><text x="50.8625%" y="623.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (7,531 samples, 31.27%)</title><rect x="19.3705%" y="661" width="31.2710%" height="15" fill="rgb(213,201,24)" fg:x="4665" fg:w="7531"/><text x="19.6205%" y="671.50">community_sim`rayon_core::join::join_context::_{{cl..</text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (3 samples, 0.01%)</title><rect x="50.6291%" y="645" width="0.0125%" height="15" fill="rgb(248,116,28)" fg:x="12193" fg:w="3"/><text x="50.8791%" y="655.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (3 samples, 0.01%)</title><rect x="50.6291%" y="629" width="0.0125%" height="15" fill="rgb(219,72,43)" fg:x="12193" fg:w="3"/><text x="50.8791%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.01%)</title><rect x="50.6291%" y="613" width="0.0125%" height="15" fill="rgb(209,138,14)" fg:x="12193" fg:w="3"/><text x="50.8791%" y="623.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (7,533 samples, 31.28%)</title><rect x="19.3705%" y="693" width="31.2793%" height="15" fill="rgb(222,18,33)" fg:x="4665" fg:w="7533"/><text x="19.6205%" y="703.50">community_sim`&lt;rayon::iter::plumbing::bridge::Callb..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (7,533 samples, 31.28%)</title><rect x="19.3705%" y="677" width="31.2793%" height="15" fill="rgb(213,199,7)" fg:x="4665" fg:w="7533"/><text x="19.6205%" y="687.50">community_sim`rayon_core::join::join_context::_{{cl..</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (7,534 samples, 31.28%)</title><rect x="19.3705%" y="725" width="31.2835%" height="15" fill="rgb(250,110,10)" fg:x="4665" fg:w="7534"/><text x="19.6205%" y="735.50">community_sim`rayon_core::join::join_context::_{{cl..</text></g><g><title>community_sim`legion::internals::systems::schedule::Executor::run_systems (7,534 samples, 31.28%)</title><rect x="19.3705%" y="709" width="31.2835%" height="15" fill="rgb(248,123,6)" fg:x="4665" fg:w="7534"/><text x="19.6205%" y="719.50">community_sim`legion::internals::systems::schedule:..</text></g><g><title>community_sim`&lt;deduplicated_symbol&gt; (7,536 samples, 31.29%)</title><rect x="19.3664%" y="741" width="31.2918%" height="15" fill="rgb(206,91,31)" fg:x="4664" fg:w="7536"/><text x="19.6164%" y="751.50">community_sim`&lt;deduplicated_symbol&gt;</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (4 samples, 0.02%)</title><rect x="50.6581%" y="693" width="0.0166%" height="15" fill="rgb(211,154,13)" fg:x="12200" fg:w="4"/><text x="50.9081%" y="703.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (4 samples, 0.02%)</title><rect x="50.6581%" y="677" width="0.0166%" height="15" fill="rgb(225,148,7)" fg:x="12200" fg:w="4"/><text x="50.9081%" y="687.50"></text></g><g><title>community_sim`alloc::fmt::format::format_inner (3 samples, 0.01%)</title><rect x="50.6623%" y="661" width="0.0125%" height="15" fill="rgb(220,160,43)" fg:x="12201" fg:w="3"/><text x="50.9123%" y="671.50"></text></g><g><title>community_sim`core::fmt::write (3 samples, 0.01%)</title><rect x="50.6623%" y="645" width="0.0125%" height="15" fill="rgb(213,52,39)" fg:x="12201" fg:w="3"/><text x="50.9123%" y="655.50"></text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,098 samples, 4.56%)</title><rect x="66.1296%" y="613" width="4.5592%" height="15" fill="rgb(243,137,7)" fg:x="15926" fg:w="1098"/><text x="66.3796%" y="623.50">commu..</text></g><g><title>community_sim`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.03%)</title><rect x="70.6889%" y="613" width="0.0291%" height="15" fill="rgb(230,79,13)" fg:x="17024" fg:w="7"/><text x="70.9389%" y="623.50"></text></g><g><title>community_sim`alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="70.6930%" y="597" width="0.0249%" height="15" fill="rgb(247,105,23)" fg:x="17025" fg:w="6"/><text x="70.9430%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.02%)</title><rect x="70.6930%" y="581" width="0.0249%" height="15" fill="rgb(223,179,41)" fg:x="17025" fg:w="6"/><text x="70.9430%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.02%)</title><rect x="70.6930%" y="565" width="0.0249%" height="15" fill="rgb(218,9,34)" fg:x="17025" fg:w="6"/><text x="70.9430%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="70.7013%" y="549" width="0.0166%" height="15" fill="rgb(222,106,8)" fg:x="17027" fg:w="4"/><text x="70.9513%" y="559.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (1,430 samples, 5.94%)</title><rect x="70.7179%" y="613" width="5.9378%" height="15" fill="rgb(211,220,0)" fg:x="17031" fg:w="1430"/><text x="70.9679%" y="623.50">communit..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (333 samples, 1.38%)</title><rect x="80.1354%" y="597" width="1.3827%" height="15" fill="rgb(229,52,16)" fg:x="19299" fg:w="333"/><text x="80.3854%" y="607.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (999 samples, 4.15%)</title><rect x="81.5181%" y="597" width="4.1482%" height="15" fill="rgb(212,155,18)" fg:x="19632" fg:w="999"/><text x="81.7681%" y="607.50">commu..</text></g><g><title>community_sim`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (959 samples, 3.98%)</title><rect x="89.1874%" y="581" width="3.9821%" height="15" fill="rgb(242,21,14)" fg:x="21479" fg:w="959"/><text x="89.4374%" y="591.50">comm..</text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (565 samples, 2.35%)</title><rect x="93.1695%" y="581" width="2.3461%" height="15" fill="rgb(222,19,48)" fg:x="22438" fg:w="565"/><text x="93.4195%" y="591.50">c..</text></g><g><title>libsystem_malloc.dylib`free_medium (34 samples, 0.14%)</title><rect x="95.5197%" y="581" width="0.1412%" height="15" fill="rgb(232,45,27)" fg:x="23004" fg:w="34"/><text x="95.7697%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (33 samples, 0.14%)</title><rect x="95.5238%" y="565" width="0.1370%" height="15" fill="rgb(249,103,42)" fg:x="23005" fg:w="33"/><text x="95.7738%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (33 samples, 0.14%)</title><rect x="95.5238%" y="549" width="0.1370%" height="15" fill="rgb(246,81,33)" fg:x="23005" fg:w="33"/><text x="95.7738%" y="559.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,410 samples, 10.01%)</title><rect x="85.6662%" y="597" width="10.0071%" height="15" fill="rgb(252,33,42)" fg:x="20631" fg:w="2410"/><text x="85.9162%" y="607.50">community_sim`..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="95.6608%" y="581" width="0.0125%" height="15" fill="rgb(209,212,41)" fg:x="23038" fg:w="3"/><text x="95.9108%" y="591.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,608 samples, 19.13%)</title><rect x="76.6557%" y="613" width="19.1338%" height="15" fill="rgb(207,154,6)" fg:x="18461" fg:w="4608"/><text x="76.9057%" y="623.50">community_sim`hashbrown::map::..</text></g><g><title>libsystem_platform.dylib`_platform_memset (28 samples, 0.12%)</title><rect x="95.6733%" y="597" width="0.1163%" height="15" fill="rgb(223,64,47)" fg:x="23041" fg:w="28"/><text x="95.9233%" y="607.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (10,905 samples, 45.28%)</title><rect x="50.6997%" y="629" width="45.2809%" height="15" fill="rgb(211,161,38)" fg:x="12210" fg:w="10905"/><text x="50.9497%" y="639.50">community_sim`community_sim::navigation::pathfinding::a_star_path</text></g><g><title>libsystem_malloc.dylib`free_medium (46 samples, 0.19%)</title><rect x="95.7896%" y="613" width="0.1910%" height="15" fill="rgb(219,138,40)" fg:x="23069" fg:w="46"/><text x="96.0396%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free_plat (46 samples, 0.19%)</title><rect x="95.7896%" y="597" width="0.1910%" height="15" fill="rgb(241,228,46)" fg:x="23069" fg:w="46"/><text x="96.0396%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (46 samples, 0.19%)</title><rect x="95.7896%" y="581" width="0.1910%" height="15" fill="rgb(223,209,38)" fg:x="23069" fg:w="46"/><text x="96.0396%" y="591.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (761 samples, 3.16%)</title><rect x="95.9806%" y="629" width="3.1599%" height="15" fill="rgb(236,164,45)" fg:x="23115" fg:w="761"/><text x="96.2306%" y="639.50">com..</text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (47 samples, 0.20%)</title><rect x="99.1405%" y="629" width="0.1952%" height="15" fill="rgb(231,15,5)" fg:x="23876" fg:w="47"/><text x="99.3905%" y="639.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (11,721 samples, 48.67%)</title><rect x="50.6747%" y="645" width="48.6692%" height="15" fill="rgb(252,35,15)" fg:x="12204" fg:w="11721"/><text x="50.9247%" y="655.50">community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run</text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (11,722 samples, 48.67%)</title><rect x="50.6747%" y="661" width="48.6733%" height="15" fill="rgb(248,181,18)" fg:x="12204" fg:w="11722"/><text x="50.9247%" y="671.50">community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::inte..</text></g><g><title>community_sim`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.07%)</title><rect x="99.4062%" y="469" width="0.0706%" height="15" fill="rgb(233,39,42)" fg:x="23940" fg:w="17"/><text x="99.6562%" y="479.50"></text></g><g><title>community_sim`&lt;fern::log_impl::File as log::Log&gt;::log (7 samples, 0.03%)</title><rect x="99.4768%" y="421" width="0.0291%" height="15" fill="rgb(238,110,33)" fg:x="23957" fg:w="7"/><text x="99.7268%" y="431.50"></text></g><g><title>community_sim`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.02%)</title><rect x="99.4851%" y="405" width="0.0208%" height="15" fill="rgb(233,195,10)" fg:x="23959" fg:w="5"/><text x="99.7351%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.02%)</title><rect x="99.4851%" y="389" width="0.0208%" height="15" fill="rgb(254,105,3)" fg:x="23959" fg:w="5"/><text x="99.7351%" y="399.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (41 samples, 0.17%)</title><rect x="99.3481%" y="581" width="0.1702%" height="15" fill="rgb(221,225,9)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="591.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.17%)</title><rect x="99.3481%" y="565" width="0.1702%" height="15" fill="rgb(224,227,45)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="575.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (41 samples, 0.17%)</title><rect x="99.3481%" y="549" width="0.1702%" height="15" fill="rgb(229,198,43)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="559.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (41 samples, 0.17%)</title><rect x="99.3481%" y="533" width="0.1702%" height="15" fill="rgb(206,209,35)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="543.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (41 samples, 0.17%)</title><rect x="99.3481%" y="517" width="0.1702%" height="15" fill="rgb(245,195,53)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="527.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (41 samples, 0.17%)</title><rect x="99.3481%" y="501" width="0.1702%" height="15" fill="rgb(240,92,26)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="511.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (41 samples, 0.17%)</title><rect x="99.3481%" y="485" width="0.1702%" height="15" fill="rgb(207,40,23)" fg:x="23926" fg:w="41"/><text x="99.5981%" y="495.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Dispatch as log::Log&gt;::log (10 samples, 0.04%)</title><rect x="99.4768%" y="469" width="0.0415%" height="15" fill="rgb(223,111,35)" fg:x="23957" fg:w="10"/><text x="99.7268%" y="479.50"></text></g><g><title>community_sim`community_sim::setup_logging::_{{closure}} (10 samples, 0.04%)</title><rect x="99.4768%" y="453" width="0.0415%" height="15" fill="rgb(229,147,28)" fg:x="23957" fg:w="10"/><text x="99.7268%" y="463.50"></text></g><g><title>community_sim`fern::log_impl::FormatCallback::finish (10 samples, 0.04%)</title><rect x="99.4768%" y="437" width="0.0415%" height="15" fill="rgb(211,29,28)" fg:x="23957" fg:w="10"/><text x="99.7268%" y="447.50"></text></g><g><title>community_sim`&lt;fern::log_impl::Stdout as log::Log&gt;::log (3 samples, 0.01%)</title><rect x="99.5059%" y="421" width="0.0125%" height="15" fill="rgb(228,72,33)" fg:x="23964" fg:w="3"/><text x="99.7559%" y="431.50"></text></g><g><title>community_sim`std::io::Write::write_fmt (3 samples, 0.01%)</title><rect x="99.5059%" y="405" width="0.0125%" height="15" fill="rgb(205,214,31)" fg:x="23964" fg:w="3"/><text x="99.7559%" y="415.50"></text></g><g><title>community_sim`core::fmt::write (3 samples, 0.01%)</title><rect x="99.5059%" y="389" width="0.0125%" height="15" fill="rgb(224,111,15)" fg:x="23964" fg:w="3"/><text x="99.7559%" y="399.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (11,768 samples, 48.86%)</title><rect x="50.6581%" y="709" width="48.8643%" height="15" fill="rgb(253,21,26)" fg:x="12200" fg:w="11768"/><text x="50.9081%" y="719.50">community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbin..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (11,764 samples, 48.85%)</title><rect x="50.6747%" y="693" width="48.8477%" height="15" fill="rgb(245,139,43)" fg:x="12204" fg:w="11764"/><text x="50.9247%" y="703.50">community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbi..</text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11,764 samples, 48.85%)</title><rect x="50.6747%" y="677" width="48.8477%" height="15" fill="rgb(252,170,7)" fg:x="12204" fg:w="11764"/><text x="50.9247%" y="687.50">community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; f..</text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (42 samples, 0.17%)</title><rect x="99.3481%" y="661" width="0.1744%" height="15" fill="rgb(231,118,14)" fg:x="23926" fg:w="42"/><text x="99.5981%" y="671.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (42 samples, 0.17%)</title><rect x="99.3481%" y="645" width="0.1744%" height="15" fill="rgb(238,83,0)" fg:x="23926" fg:w="42"/><text x="99.5981%" y="655.50"></text></g><g><title>community_sim`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (42 samples, 0.17%)</title><rect x="99.3481%" y="629" width="0.1744%" height="15" fill="rgb(221,39,39)" fg:x="23926" fg:w="42"/><text x="99.5981%" y="639.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.17%)</title><rect x="99.3481%" y="613" width="0.1744%" height="15" fill="rgb(222,119,46)" fg:x="23926" fg:w="42"/><text x="99.5981%" y="623.50"></text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (42 samples, 0.17%)</title><rect x="99.3481%" y="597" width="0.1744%" height="15" fill="rgb(222,165,49)" fg:x="23926" fg:w="42"/><text x="99.5981%" y="607.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="99.5806%" y="549" width="0.0125%" height="15" fill="rgb(219,113,52)" fg:x="23982" fg:w="3"/><text x="99.8306%" y="559.50"></text></g><g><title>community_sim`core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="99.6180%" y="533" width="0.0249%" height="15" fill="rgb(214,7,15)" fg:x="23991" fg:w="6"/><text x="99.8680%" y="543.50"></text></g><g><title>community_sim`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.07%)</title><rect x="99.5931%" y="549" width="0.0706%" height="15" fill="rgb(235,32,4)" fg:x="23985" fg:w="17"/><text x="99.8431%" y="559.50"></text></g><g><title>community_sim`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="99.6429%" y="533" width="0.0208%" height="15" fill="rgb(238,90,54)" fg:x="23997" fg:w="5"/><text x="99.8929%" y="543.50"></text></g><g><title>community_sim`&lt;legion::internals::systems::system::System&lt;R,Q,F&gt; as legion::internals::systems::schedule::Runnable&gt;::run_unsafe (34 samples, 0.14%)</title><rect x="99.5266%" y="597" width="0.1412%" height="15" fill="rgb(213,208,19)" fg:x="23969" fg:w="34"/><text x="99.7766%" y="607.50"></text></g><g><title>community_sim`&lt;F as legion::internals::systems::system::SystemFn&lt;R,Q&gt;&gt;::run (34 samples, 0.14%)</title><rect x="99.5266%" y="581" width="0.1412%" height="15" fill="rgb(233,156,4)" fg:x="23969" fg:w="34"/><text x="99.7766%" y="591.50"></text></g><g><title>community_sim`community_sim::navigation::pathfinding::a_star_path (34 samples, 0.14%)</title><rect x="99.5266%" y="565" width="0.1412%" height="15" fill="rgb(207,194,5)" fg:x="23969" fg:w="34"/><text x="99.7766%" y="575.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11,804 samples, 49.01%)</title><rect x="50.6581%" y="741" width="49.0138%" height="15" fill="rgb(206,111,30)" fg:x="12200" fg:w="11804"/><text x="50.9081%" y="751.50">community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (11,804 samples, 49.01%)</title><rect x="50.6581%" y="725" width="49.0138%" height="15" fill="rgb(243,70,54)" fg:x="12200" fg:w="11804"/><text x="50.9081%" y="735.50">community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>community_sim`rayon_core::join::join_context::_{{closure}} (36 samples, 0.15%)</title><rect x="99.5225%" y="709" width="0.1495%" height="15" fill="rgb(242,28,8)" fg:x="23968" fg:w="36"/><text x="99.7725%" y="719.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 0.15%)</title><rect x="99.5266%" y="693" width="0.1453%" height="15" fill="rgb(219,106,18)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="703.50"></text></g><g><title>community_sim`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (35 samples, 0.15%)</title><rect x="99.5266%" y="677" width="0.1453%" height="15" fill="rgb(244,222,10)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="687.50"></text></g><g><title>community_sim`rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.15%)</title><rect x="99.5266%" y="661" width="0.1453%" height="15" fill="rgb(236,179,52)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="671.50"></text></g><g><title>community_sim`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (35 samples, 0.15%)</title><rect x="99.5266%" y="645" width="0.1453%" height="15" fill="rgb(213,23,39)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="655.50"></text></g><g><title>community_sim`&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (35 samples, 0.15%)</title><rect x="99.5266%" y="629" width="0.1453%" height="15" fill="rgb(238,48,10)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="639.50"></text></g><g><title>community_sim`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (35 samples, 0.15%)</title><rect x="99.5266%" y="613" width="0.1453%" height="15" fill="rgb(251,196,23)" fg:x="23969" fg:w="35"/><text x="99.7766%" y="623.50"></text></g><g><title>community_sim`rayon_core::registry::WorkerThread::find_work (5 samples, 0.02%)</title><rect x="99.6720%" y="741" width="0.0208%" height="15" fill="rgb(250,152,24)" fg:x="24004" fg:w="5"/><text x="99.9220%" y="751.50"></text></g><g><title>community_sim`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="99.6761%" y="725" width="0.0166%" height="15" fill="rgb(209,150,17)" fg:x="24005" fg:w="4"/><text x="99.9261%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (25 samples, 0.10%)</title><rect x="99.6927%" y="725" width="0.1038%" height="15" fill="rgb(234,202,34)" fg:x="24009" fg:w="25"/><text x="99.9427%" y="735.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::sleep (27 samples, 0.11%)</title><rect x="99.6927%" y="741" width="0.1121%" height="15" fill="rgb(253,148,53)" fg:x="24009" fg:w="27"/><text x="99.9427%" y="751.50"></text></g><g><title>community_sim`std::sys::pal::unix::sync::mutex::Mutex::lock (16 samples, 0.07%)</title><rect x="99.8048%" y="709" width="0.0664%" height="15" fill="rgb(218,129,16)" fg:x="24036" fg:w="16"/><text x="100.0548%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (16 samples, 0.07%)</title><rect x="99.8048%" y="693" width="0.0664%" height="15" fill="rgb(216,85,19)" fg:x="24036" fg:w="16"/><text x="100.0548%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (16 samples, 0.07%)</title><rect x="99.8048%" y="677" width="0.0664%" height="15" fill="rgb(235,228,7)" fg:x="24036" fg:w="16"/><text x="100.0548%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (12 samples, 0.05%)</title><rect x="99.8713%" y="709" width="0.0498%" height="15" fill="rgb(245,175,0)" fg:x="24052" fg:w="12"/><text x="100.1213%" y="719.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_any_threads (31 samples, 0.13%)</title><rect x="99.8048%" y="741" width="0.1287%" height="15" fill="rgb(208,168,36)" fg:x="24036" fg:w="31"/><text x="100.0548%" y="751.50"></text></g><g><title>community_sim`rayon_core::sleep::Sleep::wake_specific_thread (31 samples, 0.13%)</title><rect x="99.8048%" y="725" width="0.1287%" height="15" fill="rgb(246,171,24)" fg:x="24036" fg:w="31"/><text x="100.0548%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.01%)</title><rect x="99.9211%" y="709" width="0.0125%" height="15" fill="rgb(215,142,24)" fg:x="24064" fg:w="3"/><text x="100.1711%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.01%)</title><rect x="99.9211%" y="693" width="0.0125%" height="15" fill="rgb(250,187,7)" fg:x="24064" fg:w="3"/><text x="100.1711%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (15 samples, 0.06%)</title><rect x="99.9336%" y="741" width="0.0623%" height="15" fill="rgb(228,66,33)" fg:x="24067" fg:w="15"/><text x="100.1836%" y="751.50"></text></g><g><title>all (24,083 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(234,215,21)" fg:x="0" fg:w="24083"/><text x="0.2500%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (19,419 samples, 80.63%)</title><rect x="19.3664%" y="853" width="80.6336%" height="15" fill="rgb(222,191,20)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="863.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (19,419 samples, 80.63%)</title><rect x="19.3664%" y="837" width="80.6336%" height="15" fill="rgb(245,79,54)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="847.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>community_sim`std::sys::pal::unix::thread::Thread::new::thread_start (19,419 samples, 80.63%)</title><rect x="19.3664%" y="821" width="80.6336%" height="15" fill="rgb(240,10,37)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="831.50">community_sim`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}} (19,419 samples, 80.63%)</title><rect x="19.3664%" y="805" width="80.6336%" height="15" fill="rgb(214,192,32)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="815.50">community_sim`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>community_sim`std::sys::backtrace::__rust_begin_short_backtrace (19,419 samples, 80.63%)</title><rect x="19.3664%" y="789" width="80.6336%" height="15" fill="rgb(209,36,54)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="799.50">community_sim`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>community_sim`rayon_core::registry::ThreadBuilder::run (19,419 samples, 80.63%)</title><rect x="19.3664%" y="773" width="80.6336%" height="15" fill="rgb(220,10,11)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="783.50">community_sim`rayon_core::registry::ThreadBuilder::run</text></g><g><title>community_sim`rayon_core::registry::WorkerThread::wait_until_cold (19,419 samples, 80.63%)</title><rect x="19.3664%" y="757" width="80.6336%" height="15" fill="rgb(221,106,17)" fg:x="4664" fg:w="19419"/><text x="19.6164%" y="767.50">community_sim`rayon_core::registry::WorkerThread::wait_until_cold</text></g></svg></svg>