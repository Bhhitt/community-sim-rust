digraph agent_combined_systems {
    node [shape=box]
    // agent_hunger_energy_system
    agent_hunger_energy_system -> Hunger [label="write"]
    agent_hunger_energy_system -> Energy [label="write"]
    agent_hunger_energy_system -> AgentType [label="read"]
    agent_hunger_energy_system -> AgentState [label="read"]

    // agent_path_movement_system
    agent_path_movement_system -> Position [label="write"]
    agent_path_movement_system -> Path [label="write"]
    agent_path_movement_system -> AgentType [label="read"]
    agent_path_movement_system -> Target [label="read"]
    agent_path_movement_system -> AgentState [label="read"]

    // agent_direct_movement_system
    agent_direct_movement_system -> Position [label="write"]
    agent_direct_movement_system -> AgentType [label="read"]
    agent_direct_movement_system -> Target [label="read"]
    agent_direct_movement_system -> AgentState [label="read"]

    // agent_state_transition_system
    agent_state_transition_system -> Position [label="write"]
    agent_state_transition_system -> Target [label="read"]
    agent_state_transition_system -> AgentState [label="write"]

    // Inter-system connections (shared resources/components)
    Hunger -> agent_hunger_energy_system
    Energy -> agent_hunger_energy_system
    AgentType -> agent_hunger_energy_system
    AgentState -> agent_hunger_energy_system

    Position -> agent_path_movement_system
    Path -> agent_path_movement_system
    AgentType -> agent_path_movement_system
    Target -> agent_path_movement_system
    AgentState -> agent_path_movement_system

    Position -> agent_direct_movement_system
    AgentType -> agent_direct_movement_system
    Target -> agent_direct_movement_system
    AgentState -> agent_direct_movement_system

    Position -> agent_state_transition_system
    Target -> agent_state_transition_system
    AgentState -> agent_state_transition_system
}
