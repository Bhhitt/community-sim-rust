digraph ecs_schedule_stages {
    rankdir=LR;
    node [shape=box, style=filled, fillcolor=lightblue];
    subgraph cluster_agent_core {
        label="Agent Core Systems";
        color=blue;
        "agent_pausing_system" -> "agent_hunger_energy_system" -> "agent_path_movement_system" -> "agent_direct_movement_system" -> "agent_state_transition_system";
        style=rounded;
    }
    subgraph cluster_food {
        label="Food Systems";
        color=green;
        "collect_food_positions_system" -> "food_collection_system" -> "collect_food_spawn_positions_system" -> "food_spawn_apply_system";
        style=rounded;
    }
    subgraph cluster_spawning {
        label="Agent Spawning Systems";
        color=orange;
        "drain_agent_spawn_queue_system" -> "agent_spawning_system";
        style=rounded;
    }
    subgraph cluster_death {
        label="Agent Death Systems";
        color=red;
        "agent_death_system";
        style=rounded;
    }
    subgraph cluster_interaction {
        label="Interaction Systems";
        color=purple;
        "agent_agent_interaction_system" -> "interaction_stats_update_system";
        style=rounded;
    }
    subgraph cluster_logging {
        label="Logging Systems";
        color=gray;
        "agent_arrival_logging_system" -> "agent_move_logging_system" -> "agent_spawn_logging_system" -> "interaction_event_logging_system";
        style=rounded;
    }
    subgraph cluster_event_log_bridge {
        label="Event Log Bridge";
        color=black;
        "agent_event_log_to_gui_system";
        style=rounded;
    }
    // Stage sequencing (approximate, based on flushes)
    "agent_core_stage" [label="Agent Core", shape=ellipse, fillcolor=lightyellow];
    "food_stage" [label="Food", shape=ellipse, fillcolor=lightyellow];
    "spawning_stage" [label="Spawning", shape=ellipse, fillcolor=lightyellow];
    "death_stage" [label="Death", shape=ellipse, fillcolor=lightyellow];
    "interaction_stage" [label="Interaction", shape=ellipse, fillcolor=lightyellow];
    "logging_stage" [label="Logging", shape=ellipse, fillcolor=lightyellow];
    "event_log_bridge_stage" [label="Event Log Bridge", shape=ellipse, fillcolor=lightyellow];
    "agent_core_stage" -> "food_stage" -> "spawning_stage" -> "death_stage" -> "interaction_stage" -> "logging_stage" -> "event_log_bridge_stage";
    // Connect clusters to stages
    "agent_pausing_system" -> "agent_core_stage" [style=dotted];
    "agent_hunger_energy_system" -> "agent_core_stage" [style=dotted];
    "agent_path_movement_system" -> "agent_core_stage" [style=dotted];
    "agent_direct_movement_system" -> "agent_core_stage" [style=dotted];
    "agent_state_transition_system" -> "agent_core_stage" [style=dotted];
    "collect_food_positions_system" -> "food_stage" [style=dotted];
    "food_collection_system" -> "food_stage" [style=dotted];
    "collect_food_spawn_positions_system" -> "food_stage" [style=dotted];
    "food_spawn_apply_system" -> "food_stage" [style=dotted];
    "drain_agent_spawn_queue_system" -> "spawning_stage" [style=dotted];
    "agent_spawning_system" -> "spawning_stage" [style=dotted];
    "agent_death_system" -> "death_stage" [style=dotted];
    "agent_agent_interaction_system" -> "interaction_stage" [style=dotted];
    "interaction_stats_update_system" -> "interaction_stage" [style=dotted];
    "agent_arrival_logging_system" -> "logging_stage" [style=dotted];
    "agent_move_logging_system" -> "logging_stage" [style=dotted];
    "agent_spawn_logging_system" -> "logging_stage" [style=dotted];
    "interaction_event_logging_system" -> "logging_stage" [style=dotted];
    "agent_event_log_to_gui_system" -> "event_log_bridge_stage" [style=dotted];
}
